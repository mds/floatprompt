This document contains video transcript excerpts from the Shift Nudge course, spoken by Matt D. Smith (MDS) during unscripted lectures and critiques.  

It reflects the natural cadence, teaching tone, and phrasing used in live training moments.  
The language is conversational, direct, and grounded in real interface decisions.

Use this for voice training and to understand how MDS speaks when explaining UI clarity, spacing logic, or interaction behavior out loud.

Each section begins with a file name and is separated by a visual divider.


=== FILE: 1-1 welcome.txt ===
------------------------------
﻿- All right, you've made it. Welcome to the course. I am super excited to have you here. I'm honored that you've made a decision to invest in yourself to become a better UI designer. At any point along your journey, I want you to feel free to reach out directly to me. I am here to support you. I am here to support your success, and your success at becoming a better designer is my number one priority, so don't hesitate to reach out to me. If you have any questions, post them in the Slack channel or any kind of public forum that is available. That way other people in the course can read the answers, can see the questions, and we can all just kind of learn together as everyone's asking questions and getting answers. It'll just be more productive if everyone can be involved in that whole process. So before we really get started, I wanna tell you the secret of getting better at design. And the secret is not really a secret. The secret of getting better at design is actually designing things. It's not only designing things. It's actually designing badly over and over until it gets better. There's rare occasions when good or even great design might happen like at the drop of a hat, but usually that doesn't actually happen. That's not really the way great design works. Most of the great design that I've ever done starts out as bad design. It starts out with just putting things on the page and making it better, slowly refining it, iterating it, adjusting padding, type size, color, you're making small refinements over and over and over and over, you know, until it becomes great design. You're not just gonna spit it out like that immediately. There's a quote that I love from Penn and Teller, and it says, "Sometimes magic is just someone spending more time on something than anyone else might reasonably expect." And that's what I think we're gonna dig into with this course. We're gonna learn how to spend more time on refining design and understanding the frameworks behind all those little decisions that anyone else might reasonably expect because good and even great design just takes time. And so we're gonna design, we're gonna learn about things, and we're gonna actually put it into practice, but ultimately, it's up to you to actually do the design and make those decisions. So you are the designer now. It's up to you to put in the work, to apply all these principles and techniques that you learn in this course. So I hope you're excited. This is gonna be really fun. So again, reach out to me if you have any questions along the way. And I can't wait for you to get started.


=== FILE: 1-2 how it works.txt ===
------------------------------
﻿- Let's talk about how everything works. As you can probably already see, everything is broken up into modules and lessons. And every one of these is gonna have a very specific focus, coupled with very specific action items for you to include in your design process as you're going through these. Although a lesson may contain very detailed information about a specific topic, and they can stand alone, most of them are gonna be intrinsically related. So the one before the one you're on is gonna relate to each other and the one afterwards is gonna relate as well. So you can pick and choose but the course was designed for you to go through linearly. However, you can go in, if something's very interesting, you can skip ahead. All the other lessons are gonna still be there when you get back, so feel free to pick and choose if you don't wanna just go straight through it. I also wanna highly encourage you to join the Slack group, if you haven't already. Just go in here and click this link, read the code of conduct before you join, and as soon as you're in there, you're gonna have lots of other people that are willing to answer questions. I'll be in here answering questions. You can post your Dribble shots, things like that. Just a good community to help you get the best experience and to help you get a lot of feedback on your work as you progress through the course. And if you don't have a Dribble account already, please sign up for a Dribble account, and make sure you set yourself as a prospect. Let me know and I will personally draft you to Dribble. I think Dribble's gonna be one of the best places that you can post your work to get feedback from me and other people in the community as you learn. It can be scary, I know, to post your work publicly, but honestly, there is really no downside. You're only gonna get better by exposing yourself to more critique. And I'll be there to help you along the way. So if you don't have a Dribble invite, please reach out. I will hook you up and let's go ahead and get that sorted out because I really think this'll be another way that you can start to kind of build your portfolio as well. It's fine to have some in-progress shots and you can go in and fine tune it to make it more of a portfolio later. But designing and posting your work is gonna be a big part of becoming a better designer. As you progress your way through each lesson, each one is gonna have a little bit of a homework assignment. So you can actually put into practice the very thing that you're learning during that lesson. So once you have an understanding of what's going on, I will list out a homework assignment for you. Kind of a UI challenge with specific constraints in mind, some specific things to think about. And once you've done this homework, I highly encourage you to, at the very minimum, post it to the Slack channel so I can give you feedback. Others can see what others are working on, and if you're feeling very, ah, particularly motivated to learn and expose yourself to more feedback, post it on Dribble. Don't be afraid to post it on Dribble. You can always delete it or make it a low profile shot, but I think posting your work and getting feedback from me and a lot of other designers is gonna be a very quick way for you to ramp up your design skills. So don't be too timid to post it online. There's really not many downsides and you'll notice that once you start sharing, the fear of putting your work out there publicly will very quickly go away because it's really just putting work out there, getting feedback, getting better. And the more you can show that you're progressing, the better your profile's gonna look over time and you'll slowly start to build a bit of a portfolio. And remember, you've got lifetime access to this course, so at any time, if you've gone through in the entirety, you can always come back to a specific lesson, or if you're struggling with something, you can go back to those lessons and kind of reapply that knowledge, soak in that material again, a lot of times with a different lens because you may have experienced exposure to different problems. So use it as reference. Use it to go all the way through. Use it however makes the most sense for you. And again, if you have any problems, at any point have questions, post it on Slack, reach out to me. I'm here to help you and if you have more of a personal request that you really don't wanna share publicly, you can definitely email me. So use all of this to your advantage. You're the designer. Let's make it happen.


=== FILE: 1-3 mindset.txt ===
------------------------------
﻿- Okay, I wanna talk to you about something that you might not have thought much about up until this point and if you have, great for you, but for now, I wanna talk to you about the pro designers mindset and really, just mindset in general. There's a really famous quote from Henry Ford that says, whether you think that you can or you think that you can't, you're right. I tell this to my kids all the time because it's so important to really understand what you're actually capable of. So there's a couple of things that I want you to think about. Really just kind of resetting your mind to a baseline for learning. Resetting your mind to get prepped for learning and kind of reprogramming your brain to become instead of dismissive about certain topics, become curious about certain topics. And this goes for stuff in the course or even things that you see online or read on Twitter. Instead of being instantly dismissive about a certain topic, it can be really beneficial and helpful for you to become curious about why that person said that thing or what is their motivation or what caused them to say that. Similarly for the lessons in the course, just become curious about why that's being taught or explain that way, instead of instantly dismissive. I also just want to stress the importance of learning the fundamentals like typography, color, layout, style, all of the ones outlined in the course. These are the fundamental principles that are gonna last a lot longer than specific design software or the corner radius trends or whatever might be trending currently, I want you to really focus and embrace the fundamental aspect of these lessons. And I also just want you to be prepared to concentrate and try really hard. It's not gonna be easy to struggle your way through design and get feedback and revise and get critique, but that's just the necessary thing that you have to do and you have to prepare your mind as you go into it, so you can make the most impact. I know that design is hard, but it only gets easier. You just have to trust the process and put in the reps. The same way that you would go into the gym and start working out for the first time after you haven't done it in a while or if you've never done it, it's gonna be painful when you first get started. And watching all these videos, it will help you incrementally improve your design abilities, but it's not gonna be nearly as effective unless you actually design the things that are assigned to you in this course. Watching and getting information is one thing, but actually applying it and putting it into practice and arming yourself with those skills, that's gonna be a huge huge advantage over just watching all these videos. Even today, when I see a new video get released on presenting design or the best way to do X, Y or Z, I'm still to this day extremely curious about what other people have learned and what they're trying to show the world because I don't ever wanna consider myself to a fully arrived. I'm constantly learning, constantly seeking out knowledge and the best designers that I know have the same mindset. So I want you to deeply understand your tools and the fundamentals that are being taught. I want you to deeply understand your surroundings. Know who to ask and how to ask certain questions that would inform your designs and I also want you to deeply understand the problem that you're solving for in business and where things are headed. So as we start talking more about user interface and user experience and how all those things converge, I just want you to be aware of your mindset and how you're thinking about these things. So the big key takeaway is to have a beginner's mindset. That's gonna be critical for learning and absorbing new material. It's also a skill that's required for approaching really any new design project that comes your way. You're gonna have to empathize with users that you're designing for and you're gonna have to kind of take on that mindset as you design. So, kind of a random lesson that that doesn't specifically have to do with practically designing things, but one that is pretty paramount to the entire process. So, let's get our minds right and let's keep moving forward.


=== FILE: 1-4 software.txt ===
------------------------------
﻿- First of all, if you're currently using and loving a design tool, then you should use that one. If that's you and your mind is completely made up, then skip ahead. However, if you're a little curious and open-minded, keep watching. I didn't really want you to skip ahead anyway. For all of the lessons in the course, I'm gonna be using Figma, Sketch, Adobe XD, InVision Studio, and maybe even a little bit of Framer X. In fact, the majority of the videos, I will most likely be using Figma, because that is currently my favorite design tool. That shouldn't prohibit you from using any of the others, because the basic principles will remain. In some cases, I'll show a variation of the same technique in a different tool to give you a well-rounded view of what's actually possible. Maybe you've never used any of these pieces of software, or maybe you feel very comfortable with one already. Either way, I want to demystify the stigma that comes with choosing and using any specific design tool. There are lots of great options out there, and it's gonna be hard to go wrong with any choice. With that being said though, I do understand it can be intimidating if you don't have much experience with them. So, you're the designer here, and you get to choose which tool best suits you. So some of the design tool deciding factors, number one is gonna be the team. If you're trying to get a job at a company, or an agency, and everyone uses Sketch, then guess what. You're gonna be using Sketch. Typically, whatever the tool set at that company is already using, that's what you'll be expected to use as well. Doesn't take long to get to learn the ropes of a new piece of software, so don't let that scare you necessarily. Sometimes an internal team might be willing to experiment with a new tool, and the entire team changes based on the experimentation. That's exactly what happened at Square, when my friend, Dustin Tanner, he was working as their design systems lead, huge Figma advocate, and this was definitely at a time when I was much more skeptical of web-based tools, but over time, slowly and surely, the entire team there switched over to Figma as its primary tool. He even told me back in the day, about how awesome Figma was, and I was just still loving Sketch. If you're going solo, though, you have less to worry about in regards to the team. But, you do need to ask about the preferred software or file format, just like with any part of the design process, communication is gonna be key, so you wanna make sure you figure that out. Don't make assumptions that can jeopardize the future of your project, without setting expectations first. Next, we're gonna look at the cost of each piece of software. Sketch is gonna give you a 30 day free trial, then $99 for up to a year's worth of updates, and it comes with Sketch Cloud. Figma is gonna be absolutely free, for a single user, with three projects active, and it's gonna be $12 a month to access the unlimited projects and also team library features. Team library features is a pretty big feature, so I'm currently on the paid Figma plan. Adobe XD is gonna be free for one shared prototype, and shared design specs, and it's gonna be $9.99 a month for a little bit of cloud storage, and unlimited prototypes. InVision Studio is gonna be completely free with one active prototype, $15 a month for up to three active prototypes. Framer X does not have a free plan, and starts at $12 a month for unlimited updates and projects. Let's move on to capabilities. Each tool has slightly different features, to varying degrees. Sketch has a very specific way of dealing with symbols, and overrides for text and images, whereas Figma, Studio and XD are more similar in the way you edit components right in place. I'll cover a lot more of this later, so don't let this concern you too much for right now. The last thing and certainly not the least important thing, is gonna be personal preference. When you're starting out, it's helpful to get as much exposure, to different tools, as possible. And even if you've made up your mind about your favorite tool, I would challenge you to design a small project, even for an hour, in a new tool, and you might just be surprised at how much you like it. But it's not always the most efficient way to work, jumping from one tool to another, all the time. And once you've made your decision, you can start to explore that tool, and you can learn every little nook and cranny, all the shortcuts, come out with custom quick keys to make your work flow super fast. In the end, you're the designer here, and this is your decision to make for your designs. So even if your day job requires you to make everything in a tool that's not your favorite, you can still get started with all these tools for free right now, for the most part, and you can try one or try them all, it's totally up to you, but as we progress through the course, you'll get a sense for what tool or tools I use, depending on the project at hand. Just so you know, I will be using Figma for the majority of these lessons. So you're welcome to go ahead and download that, and get started in that, or, you can use another one if you want. It's definitely not a requirement. So my goal with the course is for you to learn design tool agnostic tactics, that can be implemented regardless of what your tool is. You get to make your own decisions about the tool you use for this course. So for homework, I want you to choose a design software, if you haven't already. And just to get the ball rolling, I want you to go ahead and design a small contact card for yourself, on an 800 x 600 canvas, which is just happens to be the size of a Dribble shot, wink wink. And I want you to include an avatar of yourself, your name, Twitter, IG, Dribble handle, a button for contacting you via email. You get to choose your own typeface, layout, color, and style. Just don't spend more than like 30 minutes to an hour on this. So this will just kind of get the ball rolling, with your design tool, and kind of get things started. You can post it in the Slack group, get some feedback, and keep going with your design tool of choice.


=== FILE: 1-5 ux vs ui.txt ===
------------------------------
﻿- UX versus UI, the age old discussion and our beloved industry? Well, this industry has specific jargon for nearly every single possible aspect of design. And not everyone always agrees. All these titles can be confusing between different people and organisations because they all kind of interpret them slightly different. Now, the general terms for UX and UI get thrown around a lot and most people have slightly different definitions for what they actually mean. So just for our pure convenience, I'm gonna give you my own point of view. And you can ponder this and you can understand the mental place that I'm gonna come from as we approach this material. First of all, I don't love the separation of the terms UX and UI as a fundamental practice. The separation implies that one can exist without the other and I don't really believe that to be true. Any digital experience someone has created by interacting with some type of interface and while interface bits and pieces can be more tactile and more easily isolated for critique, they don't really have much value out of context within the greater experience. So while we will be covering the visual interface design in great detail, it will always and I mean always be viewed with a very strong user experience lens to keep our priorities focused. Even when we discuss more abstract qualities like space and margin, it's all targeted to create balance and harmony within the entire product, which will in turn, create more order from chaos and ideally, a just a better experience to reduce the burden of having to make so many decisions for the user. A lot of times the user experience is implied and a product. So we're gonna take a look at the calculator app, for example. So when you're using a calculator, if you're putting your mind in the seat of a user, the user has a problem. They don't know how to mentally add, subtract, multiply, or divide any particular set of numbers. And they have a device that solves that problem for them. So their baseline or their starting point is a, they don't know the answer to a math problem. And their desired location of point B is the knowledge of the answer of that particular math problem. So in essence, user experience is going from point A, where you are now to point B, where you wanna be so in this very simple example, we're gonna solve a math problem. Say we have a 1024 layout, and we want to divide by four to see how many columns we need. Okay, we need a four columns that are gonna be 256 pixels wide. All right, great. Now what if we have like 1400 pixel layout? And we wanted five columns, okay, that'd be 280. Okay, great. According to UX design, this problem has now been solved. But if we add a little more focused about the UX and the UI, we might get something like this. This is an app called cow bot. And in this app, we're gonna get little audio cues that are the buttons being pressed and we get a record of what we typed in and we get a little history of recent problems. So in this case, if we go 1024 divided by four equals 256. All right, so even if we clear that out, we can still see our answer right there. We could even go back and use that as a result, or we can use that expression. Alright, so if we clear that out and say 1400 divided by five equals Okay, so let me clear that out. All right, there we go. And I can even favourite things, I can favourite this expression. I mean, this could be overkill for an app, but it also just adds a Little more delight. So the functionality and the design has been through an extensive deep dive. Now instead of thinking person at point A has a math problem they wanted solved, which is true. Now we're considering questions like, would it be helpful for the user to see a record of the equation as they type it? Would it be helpful or fun even to have little sounds that happen when the keys are pressed? Would it be useful to keep a record of the previous results and the history that can be referred back to. Technically these are all user experience problems, but they are solved with thoughtful interface design. It's not uncommon for someone like a stakeholder or developer or whoever to be aware of the user experience problem, but not realise that it can be solved with a clever interface design solution. You could also build a case for keeping a calculator and a converter as separate apps, but then you get into more of business decisions, which also highly impacts the user experience. So business goals are also huge factor when designing a product, would someone be willing to buy a calculator app that only has slightly more functionality than the standard calculator app? Would the user be more likely to buy it if it also converted numbers into other numbers? Most of these business questions are usually a hypothesis until the app is on the market and you're trying to sell it. But you can see how intricate the interweaving of threads between UX and UI here. So our main focus here will be solving all of these types of problems with actual interface design. So what is the main problem or problems surrounding someone's point A and where do they want to go the point B. This is how I view UX design, point A to point B. The interface is a stepping stone that will bridge the gap between having a problem and solving the problem. And this is the lens that we're going to use for our interface designs throughout this entire course. So take that all with a grain of salt and let's continue.


=== FILE: 1-6 process.txt ===
------------------------------
﻿- Testing testing, okay that's working. It's actually a tiny bit cold in here, so I'm going to put on a long sleeve shirt. If I didn't actually mention this and then in the next video I just happened to be in a different shirt it might be weird. I decided to just fill you in on why the sudden wardrobe change. Design process, here we go. It's important to understand the high level overview for the process because it's really easy to get stuck on the individual details without knowing the larger strategy. Choosing the color and the style of a button is important, but more importantly is what is the strategy behind a button's existence in the first place? So even though we're gonna cover lots and lots of details about designing gray buttons, it's really important in my opinion, to just set the stage for a large strategy and then dive in to all those little details. Understanding the problem that you're trying to solve with interface design is top priority before you begin to design anything. And the more complex the problem being solved is the more important your role is to understand that problem fully before you can attempt to design the visual aspect of the interface. So there's eight steps that I have come up with that are the overarching elements of my design process. So number one is understanding the problem. Number two is determining the complexity, three is using lists, content maps flows, and things like that to guide the project. Number four would be deciding to wireframe or not based on that complexity. Number five would be setting the design direction, the creative style, the look and the feel, number six would be presenting early and often to get feedback, number seven would be exploring more color styles, more design styles, and iterating those and nailing those down and exploiting those once you have a really good system in place. And number eight is really creating that system and expanding it. But for this particular video I want to focus mostly on the complexity and letting that determine whether or not you would wireframe or not or what your process would be based on the complexity of the project you're designing for. Let's start with high complexity. Now I've worked on a lot of really complex projects, but one that comes to mind is this responsive dashboard and mobile application that was used for managing thermal cameras to monitor industrial equipment for heat signatures during the operation. Now none of this had any design and I was tasked to figure it all out. And this particular project started with lots and lots of white boarding, putting together each task inside of a spreadsheet. And this isn't the type of project that is gonna be the focus of the course, but it's important to point out that there is always a larger problem being solved by a business for its customers. And the interface design in that project is just a stepping stone in solving that larger problem. Not all complex design projects have to deal with such an intense subject matter, some seemingly simple projects might be really complex because you have to deal with multiple teams, multiple stakeholders sign-offs and maybe a lot more corporate structure. So for this high complexity project, this is a look at all of the mobile wireframes for this project. I typically don't do large scale, large screen size wireframes 'coz mobile helps you prioritize all of the features in just a very linear format. So we've got new account, optional info, getting started, creating assets. We've got network profiles, groups, notification lists. It definitely was very complex. So we're monitoring thermal images here, we're looking for heat signatures and like I said none of this was designed before we started on this. So we had to start off asking tons of questions, doing lots of sketches, white boarding, asking questions. I've got text file after text file of notes and notes and notes where I asked the people who are creating these cameras and this whole system, just asking them questions, asking them questions about how the people come in and monitor the equipment, how it's expected to be used. It was me and another designer that I hired to work on this project together. So we're just creating all these different sketches, trying to get a lot of answers to our questions solve trying to figure out the hierarchy of all of these different pieces and different components to the actual project. And once we had an idea of how this could work, it was really too complex to even go straight into the design so I created these spreadsheets that would just document the features and the flow. So it's like, okay, first you have to log into your account. And this is assuming that you would have to, if you don't have an account, you would need to create one and you couldn't create an account until you bought their hardware. So there are a lot of assumptions that go into designing this interface before we even design the interface. So we're creating assets, we're setting up cameras, downloading the app and putting some notes around here and this isn't a very specific process, it's just a matter of just understanding the information that you're gonna design for. And then once we had an idea of all of these things only then could I go in here and create these low fidelity designs for account, assets and all that. So I don't want you to get too caught up in a crazy complex project and let this overwhelm you, 'coz this isn't really the focus of the actual course, but I do want to set some groundwork for you to be able to understand how complex things can possibly be and how you need to really understand this information before you go designing an interface for a project like this or at least have someone on your team or someone you're working with who is doing this work that you need to talk to and ask a lot of questions just before you can effectively design for something of this scale. So not all problems you encounter as an interface designer are going to actually be visual problems. And the more situational awareness you have, the better you'll be at your job. So the way to create more situational awareness is just simply by asking questions and taking survey of the landscape and the nature of the people you're working with. Just like anything this gets easier the more you do it, so in a project with high complexity, I start off with lots of just sketching white boarding ideas for flows, asking tons of questions about functionality and trying to soak up as much subject matter as I can. A lot of times this results in having to document things inside of a spreadsheet. Again, this is more of strategy UX thinking, it doesn't really apply directly and practically into visual interface, but I do just wanna let you know that this game is being played in the product world, surrounding the interface design. In a project of medium complexity, I might create some wireframes or low fidelity designs as I like to call them because wireframes has a bad stigma. And I like to really nail down the functionality of the product and get confirmation from stakeholders before moving into actual UI designs. Now not all medium complexity projects need this, but it can be really helpful. Stakeholders can be anybody with an opinion or involvement in the project and really any factor. But primarily the stakeholder is gonna be the decision maker who can give your design the green light. And now I wanna pull up a medium complexity project that was probably on the slightly higher side of complexity in terms of actual projects. This is a cryptocurrency desktop wallet app for a cryptocurrency called MyMonero. And I'm just gonna show you a few of these screens. I don't wanna really go into too much crazy detail because it would be not that relevant, but I just wanna show you some of the things like logging into your wallet, choosing you color, signing in, sending Monero to other people. Now I didn't know much about Cryptocurrency or even definitely not Monero before I started this, so it required a lot of questions on my part for the developer. Fortunately I was working directly with the CEO and the lead developer on the project. So this was a lot more easy to understand, and I didn't just jump right into doing the visual side of the design here because it was more complex. I actually created a of wireframes for the app before I really jumped in. And even before I designed the wireframes, I designed a content map, and again this is based off of just asking lots of questions about the information, how it makes sense to separate things and all of that. So there's no real big very specific process you need to use for this, just whatever helps you. Some people like to use sticky notes on a whiteboard, some people like to use sketchbooks, but for me I like to have a little bit more of a formal document that I can share with a client or a teammate or whoever that actually has a little bit more of refinement to it, so it kind of feels like an official document, has a little bit more valuable 'coz it's or has a little bit more perceived value because it's nice and organized, it's labeled and things are more official. So just scanning over this, we've got account details, You can have multiple wallets inside of the app, so there's creating a wallet, logging into a wallet, the details, the mnemonic that you use to log into it, different actions that you can do within the wallet, things that you can view within the wallet. And then we've got some transactions, we've got sending and receiving the cryptocurrency. We've got some contacts, we've got transactions that you can import from another wallet and some other miscellaneous things. And so I would create this after asking a bunch of questions and then send it back, we'd go back and forth and say actually in a transaction, it helps produce more conversations with the people involved. And once we have this locked in or feeling at least pointed in a good direction, only then would I go and say, okay now I know that my wallets and my transactions, and my contacts are main important sections, so now I can go in and say, okay, you know what, I'm gonna have a main navigation that says wallets, there's gonna be sending requests which are two different transaction types, and then I'm gonna have my contacts and my settings. Now I did all of these wireframes in Illustrator, which I don't really use that often. This was probably back in 2017, January of 2017, just to give you an idea. But you can see like, I'm just designing these, it's very minimal, I mean it is detailed, but it's also minimal. I'm not really worried too much about specific colors or specific type faces, I'm just using gray and black and white and blue to just map out this process. And I like to break it up into different features. So this is like sending and this is receiving. And it's just playing out some different wireframes. So only then, now that I have these wireframes and I've had conversations with the stakeholders, can I go in and actually start designing and laying this out. So in my opinion, this is a great example of when I was really thankful that I was able to go through the process of creating the wireframes because a lot of this was just over my head and I had to really spend some critical time thinking about the functionality and how everything was gonna work before I could get in here and start, designing the color of the icons and the subtle inner shadows and thinking about like colors and shapes and typography and things like that. So this is an example where it really helped to wireframe and then move into visual design. Now for other projects that might have medium complexity, but not quite as complicated, it might make sense to jump straight into visual design for you if you have a solid list to go off of. So it's not a hard and fast rule, it's just what makes sense for your project. So when you're dealing with a medium complexity project, it can be helpful to separate the functionality conversations that you have with developers or stakeholders from the visual conversations that you have with those same people. So you're talking about features and flows versus typography and color. A lot of times it's better to separate those when there's any level of complexity involved. But not every time. It really depends on the project and your preferred style of working, there haven't been as many projects where I've regretted doing wireframes, but there definitely have been times where I wished that I would have started with wireframes, and I know this is a taboo topic, it's incredibly nuanced. And I don't mean wireframing and annotating and detailing every little tiny thing, but sometimes it just helps to get it out on paper like a digital sketch. In a lower complexity project, it's often fine to jump straight into visual design and bypass any elaborate wireframing design exercise, 'coz the functionality is much more straightforward. A great example of this would be like a simple app with a limited number of features, or a marketing website created with a small team. In both of those examples the functionality is mostly defined and agreed upon by everyone involved from the very beginning. And all that remains is creating a really nice interface for the product. This is definitely easier said than done, which is why the craft of interface design is so highly valued in the tech industry. But it is worth repeating again that it's critical to understand the problem to the best of your ability before and during your interface design process. Now for low complexity example, I wanna show you this app that I created with my friend Sam Sofas, it's an app called Contrast that lets you have quick access to color contrast accessibility scores. Here is the app in action, you can see I pull it off here, can select a color and choose that. So I can see if my scores are passing or not. So this was a simple little app and I didn't do any wireframing whatsoever. I did a little tiny sketch for this little app. I mean you could consider this a wireframe, but this was one of the first sketches that I did, and then I just started designing it because I already knew it was so simple and we already knew what the features were gonna be, it was gonna be very minimal and simple, just a simple little menu file so you don't need to do wireframes when you know what something is gonna do already and both parties involved, developer and designer, and in our case we were both stakeholders. When everybody's on the same page about the functionality and the requirements then you can really just jump straight into design and explore that way. So I'll put links to all of these project files down below, and you can check them out for yourself. But it's just, I want to stress that understanding and determining the project complexity before you really dive in will really help you out and point you in the best direction for your project. So for homework, I want you to take again one of your current projects, an active project or a conceptual app, or even your personal website, and take some notes on the following. Is the team complex and layered or is it just one or two people? Are the features that you'll be designing for very complex or are they very straightforward? Would it be helpful to focus on the general layout and functionality or would it be just as fine to go straight into visual design? Now this is usually gonna be your decision to make, unless you're working with a team that has a very specific process. So keep in mind this design process overview and let this dictate your approach to the star of your new projects. And we'll cover some low fidelity design and definitely jumping into visual side of things, but I just wanted this to be an overarching thing for you to keep in mind before we dig into all of the details.


=== FILE: 1-7 reference.txt ===
------------------------------
﻿- Using referencing material for design inspiration is a great way to get started sometimes whether it's a typeface or a color or a layout. using something as an initial spark, it's just kind of a good way to get the wheels rolling. You just have to be mindful not to rip off the thing that you're inspired by. So copying a masterful design pixel by pixel, it definitely exposes you to design decisions that you wouldn't have made on your own. You know, there's a big difference between learning how someone made something exists and then trying to reproduce that on your own and say, look what I did. It will be tempting. And if you focus too much on other people's work, it'll be hard to imagine that design happening in any other particular way. So as a rule of thumb, you really only wanna copy or use inspiration from just like one aspect, whether it's typography or color or layout, one little thing that you can lift as inspiration from someone else's project or some other design, and then use that in a new way for your own project. But sometimes one thing isn't even worth taking, because that one thing is so synonymous with the existing product. Like if you look at stripe.com, you know, this angle right here and these kind of white devices and this blue dark purple blue gradient, you know, that's really synonymous with Stripe and they're known for great design, but all of that, the angled background and everything has been copied a lot. And it's hard to pass off that particular design decision as your own. So sometimes it's just not even worth lifting anything and when it's so synonymous with another brand. So you really want to stay above board in what you try to pass off as your own, make sure it is your own design work because your reputation is going to get tarnished. if you're caught doing this, especially in this world of online tweets and posts, where things go quite rapidly throughout the internet. Hopefully you have a strong enough internal compass to know that stealing is wrong. So here are some steps that I used for finding and using design inspiration. Sometimes you can just make a list of things that you like about the design, and don't look at it again. So for stripe.com, for example, you might say purple to light blue gradient. Just list it out and say that only, you know, as a background image. Maybe it's a green call to action. Maybe it could be diagonal backgrounds, but again, I would stay clear from that. You know, you might say circular icons combined with the headers, you know, subtle light gray background dividers, purple links. But again, I wouldn't take more than one of these things as inspiration. That's something that I'm actually gonna use in my project. And especially for something like stripe.com, I would not lift much of it at all, really, because it's just really synonymous with, the design that a lot of people have copied. So I wanna show you a couple of examples where I have specifically gone in and stolen one individual thing and used it for one of my projects. So for this example, I want to show you a desktop app that I made called Cinesampler. So I was, at the time I was checking out the service called yala.social and checking out the menu. And I saw this little fly out menu with this dark background and these purple hover States purple call to actions. And I just really loved the way that combination look, I don't know something about the dark background and that purple and the white text. I really love that. So when I designing my app, this desktop app called Cinesampler, I lifted that hex code or something close to it. And the idea of this dark background with that really nice light purple and the white call to action text. So you can see on a lot of these I'm using that purple color on the black background. It's not full black, but it's kind of like a 0f0f13, it's kind of a darker, darker color, but you get the idea. It's kind of a dark background with that purple color. And that's, I just took that one thing, that one hex code and that idea of purple on a dark background. But I don't think anybody is gonna look at this and think, Oh my gosh, Matt totally ripped off Yala Social for his Cinesampler App. There's a lot of different design decisions that have nothing to do with that app. But it's just one example of where I was inspired by one particular piece of UI and then kind of appropriated that for my own project. Now, another example is the Streamline Icons website. First, I was trying to find a really nice typeface because we wanted this website to almost feel like a type specimen webpage. So as I was searching for typefaces, I came across this typeface called Aribau Grotesk, and it's just kind of a fun grotesque typeface. And I really liked it. And I also just kind of really loved the teal color as well. So I bought the typeface, bought the family, and I took a screenshot of that particular teal because again, I really liked it. And the guy I was working with Vincent le Moine, he also really loved the color and we wanted kind of this really clean, fresh look. So I took the color, I used the typeface and started working on some of these designs. So I'm using that color, maybe a slightly darker color with the icon. So that was kind of the accent website color or the accent color for the website. Another inspiration that I took for this particular project was from the Apple WatchOS webpage. You can see that there's a title over here. And then as you scroll, there's a background, these keep scrolling and then you have a little fun little navigation down here in the bottom left, and you can go between those two. And it's just kind of a fun magazine style. It's not really scroll jacking or anything. And I just really liked it. So both Vincent and I were interested to see if we could apply that to our own project. So if you look at the streamline website, you know I definitely was inspired by the placement and the functionality of that particular navigation. So I put my navigation down here and I coded it so each one of these would link to a different section. And so the header is gonna stick as you scroll. And then when you get to the next section, so on and so forth. And another thing since we wanted to kind of embody that type specimen website feel, I looked at another website that is one of my absolute favorites fontshop.com go to any particular typeface family on the website. And they just have a really, really nice interactive page that you can get in here and explore the text and a lot of different, fun, little interactions. But one thing that I really like is this little themer down here they have, where you can change the background to yellow. You can change the background black, so you can see how the font interacts on different background colors. And since we were exploring this design, almost like a type specimen and trying to treat it that way, that's another thing that I incorporated down here in the bottom, right, was changing the background from this teal to black and seeing how each of the icons could work against different colored backgrounds. So if you look, I'm taking a color from the font website. I'm taking the kind of layout and functionality from the Apple WatchOS website, and I'm taking the color Theme Switcher from another website. So I'm lifting one specific feature from three different sites and mixing it all together and definitely putting our own spin on these, you know, these big dividers with the animated icons. And, you know, we're using a full width layout instead of the, we're not copying every little detail. It's more of like the idea behind the inspiration. And all of these things come together to create something new on its own. So moving on from just lifting inspiration and to straight up copy work, I want to show you an example of how to do some copy work, let that expose you to other design decisions that were made by someone else that you might not necessarily have come across on your own. I've taken a screenshot of the iOS weather app, and I've got it here on my desktop. So I'm going to just drag it right here in the Figma. These come in at 1125. So I usually just divide this by three in the width property panel to get it down to a one X size. So if you go to the frames and you click iPhone 10, you can see that that's the same size. So I'm gonna place this right here and I'm gonna hit the two key to make the opacity, got a 20%. And I know that this is gonna be San Francisco pro. So I'm got this selected already, and I'm just gonna start filling it in. So I'm gonna go Athens, bump this up until it's closer to the same size that looks like it's right up around 34 pixels, 34 points. This one's going to be sunny. Once you do this enough for Apple interfaces, you'll start to see different type sizes that are pretty common. So 34 is a pretty common type size. This is probably 17 cause that's another really common. This is, you know, 34 divided by two is 17 and 73 degrees if you hold Option + 0, you'll get the little degree marker. I'm not sure how big this is. Maybe a hundred points. And you can see that this is definitely not regular weight. It's probably like thin. I will also gonna make sure that these are center aligned. Okay, now let's make this Monday. I'm just Option + dragging a lot of this type to kinda copy it. This is, it looks like it might be 20 points. So even if it's a little bit, it doesn't have to be exactly exactly on. We're just kinda roughing it in. So today that's probably 15 and you can definitely tell that that's bolder than the regular way. It's probably like semi bold or something like that, taking our best guess. And it's really important to line up these, even though these are different types sizes, you always want your baseline to be aligned. Baseline, meaning this little line right in here underneath the letters. So we're gonna go here type in 78. This is probably 17 again, or that actually it might be a little more, it might be 20. And let's put that back at regular. I'm gonna go right align with these because if you were to type in, you know, 104, you would want the right alignment to be fixed instead of it kinda bleeding off to the left or bleeding off to the right rather. So this is the low and the high, and then there's like a very tiny divider line looks like 0.25 maybe 0.33 actually. And we'll do a 100% width on that. Okay that didn't work for some reason. Well, I know that it's 375 and I'm not really worried about the colors just yet. I'm just trying to get this all roughed in. This is gonna be 15 maybe probably semi bold again, actually 17. All right so I'm just going to speed through this just to quickly show everything coming together. PM here is a little smaller. Looks like they're doing 13 on the PM and 17 on the number. And I don't think that that is gonna be the bold weight or the semi bold. These will be kind of centered. We'll do left align on that one and then these will be centered. And I'm actually gonna go ahead and do this. Looks like they've made the degrees a little bit larger. The 20 size, that one's 73. And it looks like that one was bold as well. You can always select the background and make it a little darker if you want. Okay now I'm gonna select both of these and Option + drag, and then I'll hit Command + D a couple times to change it. Oops. So that's gonna be three. That's gonna be four. You can see if I, if I type a four right here, it's gonna go or if I backspace that two, it's gonna default to the 13. So you can either type the four and then delete the two, or you can come over here and type the four first. Which is just kind of a little nuance thing and six and Oh, that's, it's saying it says a 6:40, because it's when the sunsets sunset move that over. And I will cover icons in another lesson, but might as well draw one of these. I'm just gonna draw a little circle, hit the R key for a little rectangle option and drag this down here. And then if I select both of these and hit Command + D that I'll make a copy and then I can hover the right around the edge and hold shift while I rotate this. And then I'm going to, it looks like these are a little smaller. So I'm gonna hit return to access these control points and nudge them down and over. So I'm gonna hit Command + D while both of those are selected, rotate that, do this one more time and Command + D rotate that. And I will now select all of these and I need to, de-select the background image, and I'm going to click here and go union selection and I'll make this black for now. That way I just have an icon to go off of and now I can select all of these. De-select the background and kinda tidy this up with this little option here. Well, let's do distribute horizontal spacing. There we go. And again, I know that some of this is getting off, so I'm not that worried about it right now. And let's take this line, let's make this line dark just so we can see it a little more easily. I'm going to copy this line, move it down to here. And now looks like all of these are set at 20 regular Tuesday. And we're just gonna pretend like all of these days are gonna be sunny. So I'm just going to copy my sunny icon. Looks like this is using the same size four degrees across the board, although they are not using the degree symbol. All right so now that I have this particular one as one line item, I'm gonna to hit Command + G to group it Command + R to rename the layer to... tryna to rename it to today for now. And I'm gonna Option + drag this entire group and then do Command + D until I get all of them, then I can go back and just retype. Alright and we can keep going to do the bottom part. This gives us an idea of how big these little circles are five, roughly five pixels here, now option drag Command + D, Command + D, Command + D. And I'm going to draw a rectangle for this. I'm gonna hit the five key and I hit return. So I can see these little points here, move these down a bit. And then I'm gonna put a little tiny radius on those two points and actually move this down a bit might be too much, but let's do like a 0.5 radius. Move these points back a little bit. So it's not perfect, but it's close enough and I could keep going and design this icon and grab the weather channel, but for now that's good enough. So I'm gonna just duplicate this and in this one, I'm going to group all of the information that is the user interface. I'm gonna hide it and then bring this back up. And then I'm gonna delete the background on this one. And then for the background of the frame, I might just grab the co... just any one of these blue colors here and then select all of this and change the fill from black to white, just so we can see it a little bit more. It's like, I forgot to grab these dots. And if I really wanted to get in here, you know, I can see that these dots are probably like 50% opacity, maybe a little less, maybe 30%. And all of these numbers here are definitely, this is like showing the high and the low. So all of these numbers are gonna be I'm just kinda judging it looks like probably 50%, maybe a little less. And same for this one. So I'm gonna do Command + Option + C, Command + Option + V to paste the properties there. So looking at this, this copying and kind of reproducing this iOS weather UI, this gives you an idea for, okay, the type size for a large number or a title at the top. It gives you an idea for the type size for a swipeable row of smaller items and kind of swipeable screens gives you an idea of the bottom collapsible icon that we didn't really design, but there's an icon back there that collapses the weather into different cities. And it kinda shows you like how to design on top of this blue background. And, you know, I wouldn't post this particular project to Dribble because I'm just copying and practicing. But if, I were creating another app that had something that I could lift from this and use these sizes, maybe it's a, maybe there's another project where there is a large number that needs to be displayed. And I could use this as inspiration for using that number and using that amount of negative space around the top image. But again, I do wanna be super clear. There's a big difference between doing copy work, to learn and grow, and then completely ripping off a design. So don't be a rip off don't post this weather app and say, hey, look what I designed. Because if you look at something like this that you admire for too long, you will, hard-wire your brain into thinking that that is the only solution. So in these moments, if you're not doing copy work for practice, and you're trying to get actual inspiration for your own project, put this away and design three additional versions beyond the thing that you were inspired by that ventures out into other possibilities. Cause you might discover and accidentally stumbled upon something that works even better for your project. Especially for the parts that were closely copied. You don't want them to be so, tied to the original reference. So for homework, I want you to pick two or three designs that you really like and screenshot them with Command + shift + three on the Mac, or however you take screenshots. The same way what we did with this iOS weather app. And I want you to pick one screen or one piece of it to copy exactly. And see if you can really nail it down to be exact sizes pretty, I mean, as close as you possibly can and then design an additional component that would go along with that particular design. So you're tryna use that exact same style and design, like a, an email capture form, or like a headline and a paragraph and a call to action. Like it would be an extension of that exact same app. So do that as a copy and then an extension. And then now as the third thing, try to lift one thing like I did for the, Cinesampler app or the Streamline website, try to lift that one element and put that into practice into your own little component. Again, it can be something simple, like an email capture form or something with just a few elements, like three or four elements. But try to make your own that has the inspiration, but it ventures far enough to where you feel good enough about posting that as your own design work. And if you don't feel good about if you wouldn't feel good about posting the reference work and your design work and letting people see like, this is what I was inspired by then, you've probably copied it too closely. So once you have all of your homework complete post in the Slack channel, let us know if you've done something original and you're excited about it, post it to Dribble and get some feedback, tag me in it. We'll be happy to see what you've come up with. And as always, I'm here to help. So if you run into any problems on the way, just reach out and I'll get you sorted out.


=== FILE: 1-8 quick keys.txt ===
------------------------------
﻿- This is gonna be a quick lesson that just kind of emphasizes the importance of quick keys. I'm gonna be using lots and lots of quick keys throughout all of these lessons and most of them are self explanatory, so I'm just gonna give you a list down below, but there is one in particular that requires a little bit of modification on your part if you want them to work the same way that mine work. So, let's take a look first at the sketch plugin called sketch shortcuts. You can find it here at GitHub. I'll put the link below. But basically, this is just gonna give you some quick options for aligning objects. So we're just gonna go to this green button here, download the zip and once you download it, you can open it up and just double click this icon right here and you'll be good to go. So then, if you look inside of sketch, you'll be able to see what the shortcuts are. So these are all the aligned shortcuts. So align left, center, right, top, middle, bottom and you might not think that you need this right away, but as we start designing components, it's gonna be so nice to be able to hit control, command, up and control, command, down to just quickly align all of this stuff and especially if you wanted to go back to center, control, command, slash, so on and so forth. Now Figma doesn't allow plugins with quick keys just yet at the time of this recording anyway, so there is a way around it. So what we wanna do on a Mac is go to system preferences and we're gonna go to keyboard. Shortcuts here on the top and then app shortcuts here and you can see, I have Figma here with all of the same shortcuts. So, in order to create a new one, you just hit this plus key. Go to the application that you want it to affect and you just type in the command exactly as it appears in the command menu and then you can put your shortcut and hitting add. That's what I've done for all of the alignment commands and you can see I've got an extra one called round to pixels, command shift P. Anytime I come across a quick key that I feel like will be helpful, things that I do over and over, I will just put it in here. So now you can see the same thing. If I have a couple of these and I want to align them all down, I just hit control command down. I want them all to the right, control command right. And this is just very quick and helpful for when you want to center things. And when you're making components, you don't always have time to... I mean, you do have time to come over here and click these buttons up here, but it's a lot quicker if you do it with your keyboard and it allows for things like if you want to quickly align this little emoji into the circle here, instead of dragging it over here and then clicking this, clicking align center vertically and horizontally, now I can select both of these. Align up to the right and then to the two centers and I've done all that really quickly with just my keyboard shortcuts. So this is something that's not critical, but I would highly recommend it if you're up for trying to learn it if you don't use something like this already. So that's it for this quick lesson. I just want to kind of emphasize the importance of quick keys and how to set up these alignment shortcuts.


=== FILE: 1-9 organize.txt ===
------------------------------
﻿- When you're getting started on a new project, it can be really, really easy to get very disorganized. So in this particular video, I'm gonna cover my personal organization best practices for your project folder system. Now, I've tried lots and lots of different variations of this over the years and I've been refining it and refining it, and after more than a decade, this is the folder structure of all folder structures for my design projects and I wanna share it with you because I would love for you to adopt this and to start using it. It'll just make your life much easier, so let's take a look. All right, we've got our fictional client here Nike and I'm gonna open this folder. This is actually inside of Dropbox which I use for all of my client projects. So I've got a folder called "clients" and then all of my clients are inside of there. Just for clarity's purposes, I'm just showing this one particular folder. So first of all, I always separate contracts and projects upfront because oftentimes I will need to invite other designers or other people into the actual design files and I don't really want people to have access to the contracts in addition to the design file. First of all, contracts, I do have a markdown version of a master service agreement that I use iA Writer for. I'm gonna include that in the examples and then I export that as a PDF. So all the contracts go inside of there, whether it's subcontractor agreements, non-disclosure agreements, anything legal document related I put it in the contracts folder. But in the projects folder, a lot of times there is only one project. I might just be doing one app for one client, but oftentimes there can be multiple projects like an IOS app or a marketing website or a logo, so I like to keep those separate, projects at the high level and, for example, if we're gonna do a logo for them, or a website, we would put that in the projects folder as well, so then we would have two different projects. So inside of the project folder, I named that project "IOS app". This always stays the same inside the project: assets, design and review. Prototype is optional. This could be code or it could be the build, or really anything else, that is kind of the optional folder. assess, design and review are the main folders. So in the assets folder, I put everything that is an asset for the propjet. So if it's something the client sent me, or if it's an icon set, or if there're old designs that they sent, there could be photos, there could be reference material, I treat this as kind of like a semi-organized junk drawer. And really, you could put notes in here, so a lot of times I'll have a notes file inside of the assets and I might just have text documents or just little things that I've jotted down. A lot of times I use Notion now for notes, not as common for me to use that, but everyone's different, so put all of your assets inside of this folder. Next we have our design folder at the top level and this is where I would save my Sketch files or my Studio or XD files if I'm doing maybe like a, even a Figma file. Sometimes I will export a Figma document or a .fig file and put it inside of this folder just for safekeeping. But inside of each one of these design project files, so for Sketch, for example, I would put my Sketch document inside of here. So for the project file name, I always put the client name, then the project name, and my initials, and the version of the file that I'm working on. And the reason I do that is because sometimes you have other designers working. I encourage them to put their initials and increase the version number each time you save a new copy of the file, and if there's any old files, never throw them away and just put them in an archive folder like this. You can see I've got versions here, I've got version 0.1 in here and version 02 right there. This one might be slightly different, but I can still access it, I'm not throwing it away. And now I've got a new version inside of here. The version numbers aren't really that important to have a very strict guideline, but typically if I'm doing my first version, I'll do 0-1 and once I get ready to share it with a client, it might become 0-2, or maybe even change it to 1.0 at that point. It's just a way for you to keep track of your own design changes in more of an informal kind of way. The prototype folder would really just be any specific prototype or code-related thing that you would put in here. Sometimes this might live on GitHub, so you might not always have it, so I'm gonna just delete it out of here just because these are the three main folders. The review folder is really important. This is gonna be where I always put exported design files. So, in this one, I always use a naming convention: year, month, date, and then a small note of what is on that folder. So in this example, I've got it, just this one file and it is this one art board that I've exported. Typically when I export the files, I always number them sequentially in the order that I would want someone to look at them. So if I had 10 design files and they were all named random art boards, I would either name them zero through 10 or one through 10, whatever, and then have them exported into this review folder, that way it just makes it really easy for someone to go through and sequentially look through those individual files. And I would also never attach design documents in an email. If I was gonna send a client, I would always just right-click this folder name here, copy Dropbox link, and then in my email or my message, I would say, "Hey, here's the stuff," copy and paste that link. That way if I left a document out or if I wanted to make a quick change, I could always just go and add stuff to that folder, so I don't link directly to an image, I like to the top level folder, that way I can always change what's in that folder if I realize that I forgot something. And as I'm doing more and more designs, I might break the larger file into feature sets, so I might have "Nike IOS app signup" for that one, and then I might have "activity feed" and that might be the way that I structure my design files. And then the same thing in the review folder, if I'm saving out files, then let's say it's on Halloween and these are the activity screens. And I would make sure that that goes in the review folder. And then I just have a very organized version of basically every file in the system. Every single thing has a place and it's just really easy to keep track of everything, to keep everything organized. So for homework, I would suggest that you adopt this folder structure. Instead of Nike, use Shift Nudge and create projects and every time you have a homework project, create that top level folder and then you have your design, your assets and review, and you can save individual projects into this folder structure and just keep everything organized. As you progress through the course, you'll have a very, very succinct and structured way to manage everything to access everything later and to save out and export everything. So it's just a great way to keep your digital life organized and this is what I continue to do for every new project that I work on, so I encourage you to do the same.


=== FILE: 2-01 font size.txt ===
------------------------------
﻿- Welcome to the section on typography. Now typography is the most critical part of interface design, and that's where we're gonna dedicate an entire module to this topic. And I don't want to give you a bunch of typography theory here, I want to cover real world examples and incredibly practical tips that you can implement immediately. So first of all, we're gonna start with font size. Sloppy and inconsistent usage of font sizes, weights and colors is really a telltale sign that the designer doesn't exactly know what they are doing when it comes to design. And I'm not talking about old vintage signs that has a different type sizes, different type faces and they look amazing, I'm talking about interface design, where there needs to be a reliable and a consistent system for a user to learn and understand. So for font size, I use what I call my 'Rule of 4' as it relates to typography and it's definitely a rule and not a commandment. Like all rules, it's made to be broken as long as you are aware of its boundaries and why those boundaries exist. So this rule will help you remember some basic ingredients for typography as it relates to interface design, and again that's not exhaustive. It's just a good rule of thumb to start with. So the rule is this, "Limit yourself to a maximum of four type sizes or less." Can you break this rule? Yes. Can you use less than four type sizes? Yes. In fact, it's encouraged. Starting out with any design can be difficult. So use this rule as a launch pad. Let's take a look at the Instagram app for example. On the home screen here, every single title here, the title, this liked to by, the description, all of this is one type size. And if you scroll through, everything is that one type size of 15 point copy. And the only thing that's different here besides the logo, is gonna be this tiny text here that is set in 12 point font underneath all of the stories. So let's take a look at some other examples I've got in this document as well. All right, so first of all, let's check out the iOS settings app here. I've just got some screenshots placed in here and everywhere I've got a number that references a type size. So on this first screen, number one is this settings title, number two refers to the search copy, and you can tell here, number two is also on these big line items. So the search copy, the line items and the label definition value are all the same exact type size. Now my name here is slightly larger and this metadata under here is slightly smaller. Looking at this first screen, we have one, two, three, four different type sizes. Now there is a little difference in the color, and that is a way that you can distinguish between different pieces of text, but it's the same size. It's staying a little bit more consistent. If you look over here at the Bluetooth screen, you can see that on this internal page, you only have two type sizes. You've got the settings and the title here, the settings action link to go back and the title they're both set in 17 point font. And that's the same size as these list items and their definition value. So the only secondary font we have is this metadata, that is kind of like helper text that describes the Bluetooth line item. And then we've got the exact same type size set in all caps as a very minimal secondary title for this section. And again we've got the same title down here. So if we remove all of that and kind of zoom into the screen, it just looks like a nice and clean organized screen. And there are a number of factors that contribute to that, but one of the biggest factors is they're only using two type sizes. So if we look at Twitter for example, it's another great example of restrained type sizes. So you've got your type size up here that is set in a slightly larger font and slightly bolder, but actually all of this, the username, the actual name and the kind of timestamp on the tweet and the tweet itself, it's all set and the exact same size. So the name has a bold weight and a darker color, whereas the username and the timestamp has just a regular weight with a gray text. And then in the body, it's set in a regular way with a dark tag. So we've got three different styles of text here, but it's all one size. And the only other size difference are these little metadata that refers to the comments, the retweets and the likes. And also you get that same size here on the person who retweeted it. But there's really only three different type sizes on this entire page. And if we hide it and kinda zoom in it, it just kind of has a nice and clean look for all of these different components that they're putting into this page. And again, if you drill down, you've got your title, the same exact size for the name and the username, and actually all of this right in here, all of this is the same size, the secondary size, and then you've got a slightly larger body copy for the detail of that tweet. And just to show what I'm talking about, I recreated this and you can see this is 17 heavy, this is 16 bold and 16 medium. And then we've got 16 regular just set in gray and blue text. And then we've got 16 bold and regular for the likes and the retweets. So 17, 16 and this actual body copy is gonna be 22 points. It's only three points sizes for that entire screen. And I've already shown the Instagram example, and so you can see all of these are 15 and then right over here, you have a slightly larger type size for this navigation. But again, it's only three different sizes basically in this entire app. And if I scroll down to Facebook messenger, I actually quite like the messenger design, and you can see on this first page, there are only three type sizes on this entire page. So we've got number one, a really big title. We've got number two for the search and the line item here. And then we've got a slightly smaller type face for these little stories and this little metadata down here. But that's pretty much here. There's only three types of sizes and it's very subtle, a very subtle change and it looks good. It looks like a nice organized hierarchy of text. However, if you look at the discover tab, you can see that we've got one, two, three, four, five, six different type faces. So if I hide that and we just kind of zoom in on this particular screen, I don't know if you can tell or not, but this screen looks a little bit all over the place. You've got these big all caps tabs, recent messenger, even the messenger technically, I don't think that this should be extended past the margin here. We have margin across right in here and the messenger, the fact that it's breaking that margin, is a little bit odd to me. The 'FOR YOU' and the 'BUSINESS' this is really similar color. So I don't know, there's a few things going on here. And I think that this particular screen has a number of issues, but one of the biggest issues is the sheer number of type sizes. So we've got the big title, we've got the carried over a line item, and then we have the slightly smaller than this size, but set an all caps for the tabs. We've got the small little messenger, we've got a secondary title. And then for the Seymour, it's not set in either one of these sizes. It's a brand new size. And I don't know if this looks like it could be slightly larger than that metadata size, but all in all, you can kind of tell that this page, just in general, it doesn't quite have a very nice cohesive feel and type size is going to be one of the biggest culprits for this particular screen. So for the last example, I want to look at this iOS mail app. Again, we have four type sizes on this main screen right here. So if a hide, everything, we've got 17 point up here in the top, actually this is probably only three. I think that inbox and makers are probably the same 17 point size. And a way you can tell, make sure your screen is set to a one X kind of three 75 width if you're taking iOS screenshot. So inbox set at 17 should match up pretty closely. So you can see that matches up. If I make a copy of that and type in makers, you can see that that's pretty much the same size. So I can actually just call this the same size as that. So we can say, actually, we'll only have three types sizes on this page. We have title for the page, title for the email, and then a slightly smaller body copy size for the actual kind of preview. And then we have our tiny metadata down here that says when the app was just updated. Again, this rule is by no means exhaustive. It is just a very good starting point. And if you look at nearly every single interface that you believe to be well-designed, it's really likely that you will be able to find some kind of combination of a consistent title, subtitle, action items and metadata or body copy. Those are the main kind of common occurrences. And if you can kind of really lock in, like I said, three to four of those sizes, you'll have a much cleaner, more well-balanced interface. If you find yourself having a hard time making things work with your design, and you're using more than four type faces, you may wanna reconsider your choices and kind of scale back to bring it into a much more of a simple system of typographic usage. And it's important to note that this Rule of 4 can easily be extended by changing other aspects of the type. And each of these changes can effectively change the meaning of that particular piece of interface. For example, you saw on the iOS sample, the title and the action item are the exact same size, but one is bold and kind of a dark black, and the other one is blue. And the meaning of those two are completely different. Mostly because of the color change. But the font size is exactly the same. So color is one way to distinguish a title from an action item or a subtitle. So you can make it completely black, whereas the subtitle could be the same size. Maybe it's just like a medium gray or with the navigation item, maybe the navigation is blue and the other thing is black, but it's still the same size and has a nice balance to it. Similar to color, changing the weight can give different interactive definitions to the text used in the design. So in Instagram's example, they're using an incredibly subtle font weight change to indicate actionable profile names. Whereas the app mentions along with the hashtags are treated with color instead of weight. And one of the reasons might be because they're created by user input as opposed to the Instagram design system. So changing the weight and changing the color are very subtle ways that you can change the meaning of interactivity when you keep the font size, the actual like same size. Also simply changing the position of a text along with the color or the weight, can have a big impact on the design. So if you look back at the iOS settings example, you can see the right align text as the value of the larger line item. So it set off to the right, you've got your bigger title on the left with your same size definition value on the right. It's just a slightly lighter color, but it has a completely different meaning because of the position. You can also add decoration to any number of your four type sizes by adding an underline or a background color. And it's an easy way to stay in the kind of Rule of 4 ballpark, but giving your action items just a slightly different treatment. And if that doesn't quite cut it for you, then maybe you do need to go a different size for some of your action items. It's just kind of a rule of thumb okay. For homework, I'm going to have you design a Coffee cup iOS app. So you've connected your iOS app to an electronic coffee cup that monitors the temperature of your coffee or your tea, or any other beverage of choice that you want to keep warm. So we're gonna be focused mostly on the Rule of 4 here, and we're gonna be focused mostly on type size and less about different UI, like borders, colors and things like that. We wanna focus mostly on the typography. So the parameters for this design, I want you to use the San Francisco pro font or some other standard like Roboto or any other font. That's kind of a standard font just to kind of make things easier and assume that this coffee cup has already been connected. We don't have to go through the user experience, flows of connecting the coffee cup. We're just designing a really nice interface for the settings kind of control panel. So we're gonna use no more than four types sizes. You might pick 24, 17, 15 and 13 to kind of stay in the iOS realm, or you might pick something a little bit different, but I would encourage you not to go too much smaller than that because it's just a kind of a standard mobile screen size to go with. So I want you to design either an iPhone 10 size or board, or if you have a different size phone in your pocket, maybe you've got an SE or you've got the pro or the plus max, whatever it's called. A lot of times designing for the phone that's actually in your pocket is a good thing to do, because you can actually monitor that exact app board on your phone through the Sigma mirror app or any other mirror app or your design tool. And it just is a good one way for you to be able to see the actual size of things while you're holding it in your hand. So try to use text as much as possible to indicate action and read only data, things like that as opposed to a lot of boxes or button shapes. So think of this as like a typography nerd coffee cup. So here's some possible attributes for the settings for you to design. The name of the smart cup, the cup led color. If the cup has like a light that you can change from the app, maybe the status of the cup, the last time that was used, like a date and timestamp, the temperature of the liquid and the ability to check for updates and maybe even a firmware version. So I'll leave it up to you to decide which one of those items is more important and you can let the important sometimes kind of drive your decision making process for how large or small to make the type size. For example, the coffee cup temperature. It's probably more important than the firmware version of the cup. So the temperature probably needs to be larger than the firmware version, but again, use in the ballpark of three to four type sizes less if you want, but please post your design to Slack, so we can give you some feedback. And if you're feeling particularly excited about what you've made posted to dribble, and I will give you feedback there and you can just put the parameters for the design, give the description of what you are working towards and like everybody check it out. So I can't wait to see what you come up with. If you have any problems on the way, please reach out and I will get you sorted out.


=== FILE: 2-02 font weight.txt ===
------------------------------
﻿- Font weight affects the perceived hierarchy of information, the readability of text, and sometimes the affordance of action. In most cases, simply changing from a regular weight font, to a bold weight can be just enough to signal different meaning within that usage. You'll remember from our Instagram example that the body copy was the exact same size, the exact same color, but the profile names were made bold, and that was just enough to signal change that you can tap on it to go to someone's profile. So when you're designing interfaces, the type as we have mentioned before, it's gonna to be the most critical part of the interface. So making subtle changes here and there can be the... Sometimes be the best way to emphasize certain parts while also de-emphasizing other parts. Let's take a look at an example from an app that I designed. This app was called Zipper. So there's a handful of designs right here but what I really wanna focus on is this section over here when you're trying to invite a team member. So we want you to enter a team or a username or email, so you tap this input field and you have this send icon not icon, you have the send text that is going to be active, but it's not active yet. So this is the de-active state, and you have your active cancel button over here. And then as soon as you start typing, or you select someone for and for this example, we haven't quite selected that but for this example we've chosen this person Hillary Fox and then all of a sudden now we have this really bold send button has now active and you can see that the weight here on cancel is regular, whereas the weight here is quite heavy. And that just kind of indicates that that is the primary action that if you want to invite this team member, sending it is going to be your primary action, whereas cancel will be your kind of secondary. So we want that primary action to be a little bit heavier, just a little bit more way to give it that primary action. If you zoom out you can kind of see the difference right here between the inactive send and the active send. Now that's a really simple example. Let's take another look at weight change on the streamline icons website again. So you can see on here we have a kind of a heavy hello, and then welcome to streamline. It's just kind of in this particular case, just enough to add a little bit of visual interest, but down here in the navigation, let me zoom in a little bit so you can see this a little bit better. So we're changing the color on hover, then we're changing the weight once you tap it. And so changing the weight, the color and the weight sometimes can be just enough to give it that extra bit of emphasis that it needs when you're designing something like a navigation or some kind of like view switcher or something like that. There's also more to weight in general than just changing the font style from normal to bold or black or something like that. There's also a visual weight, that is created with negative space and color, that can often times provide a lot more total weight than with just changing the font style alone. And we'll take a look at some of those examples in just a minute. So typically on the web, you have font weights that range from anywhere from 100 to 900 according to some CSS properties. You've got your hairline weighed at like 100, you've got regular weight which is set at normal or 400, and then you've got bold at either bold or 600, or you have black that is gonna be your 900 weight. Now this is definitely specific to CSS and not all font weights are gonna be created the same way because a typographer and whoever's designing the typeface has full liberty and creative control to name those weights, whatever they want. So it's gonna be slightly different from typeface to typeface. But this is just a good enough to give you a kind of a general idea of how the weights work within the typefaces. So a big takeaway here is that the font that you're using, is gonna define the weights that you have available. So if the font you're using doesn't include a variety of weights baked in, and you try to force it bold or you try to force it italics or something like that, the computer is often going to kind of generate its own version of a slanted or a slightly thicker font weight, and that's just often times really gonna be really bad because when you create a bold font weight from scratch, there's a lot of little nuance that goes into all the details of the letter forms. So when you're trying to go bold with a font, don't just rely on a computer to bold it for you, make sure that you're choosing a font that has an actual bolded weight style attached with it. So that's gonna be much better, it's gonna look more proper and more look so forced and just kind of not good, so don't do that. As far as light and hairline weights go, they should mostly be avoided and user interface design. It's just really hard to read and most contexts that actually it starts looking like really thin and crisp and hard to read. And unless you're gonna go really big like the weather app with its big display of the temperature, it's in those cases when you're using like 60, 80, 100 point size font, light and hairline can be a cool option because the actual letter forms are thick enough to be visible. But if you're trying to use 16 or 18 point body copy with light or thin or hairline, it's just not gonna work very well. So I would just definitely avoid that use case. So in most cases regular book and medium are gonna be used for body copy, whereas like semi bold, bold, heavy, black, those are gonna be more reserved for headlines. However, if you're going for like a big thick chunky style, that might change up the way that you use those typefaces. And sometimes you can use like a semi bold or bold for a body copy, if that's kind of the style you're going for. And if you check out Pinterest for example, Pinterest is a really good example of kind of using that bold font weight. So you can see like up here and the navigation they're using like a bolder font weight. So if I go into the inspector, if I choose this navigation thing, you can see that the font weight is set to 700. So 700 is pretty bold in terms of CSS. Normally a normal font style, a normal font weight would be 400. So if I change that to 400 here, you can see that this has, it's now turned into like a regular weight and it definitely feels thinner and crisper, but it doesn't quite go with their brand. They kind of have this chunky bold brand. So if I go back in and select that guy again, change it back to 700, and you can see it's a little bit thicker. And you can even experiment with this if the font weight is available, you can even see what 800 looks like, you can see what 900 looks like. It's also affecting these right here, 900 you can see as super bold, but it's looks like a little bit too much. So go back to 700 here, maybe 800 again, honestly I kind of like the 800 for this. Another example is the Shift Nudge Beta page, which you've probably already seen. I'm using this font called TT Firs Neue or Firs Neue, if you're not pronouncing it in the snobby typographic dialect. I'm using, I'm pretty sure I'm using semi bold for the entire thing. We have bold weight 600. I'm pretty sure that I only have one semi bold font called for the entire thing. And I'm using semi bold for every single instance of the typography here. So I just wanted it to have a thicker kind of chunkier style just to look a little bit unique. So if there are specific examples like that, it's totally fine to use a bolder font style, but it's not usually gonna be when you're creating an app and you want this big system. Most of the time you won't use semi bold in that way or bold in that way. But you know, from time to time, if the situation calls for it, go for it and explore. So back to creating visual weight with techniques other than just the font style like negative space and color, you can use negative space to your advantage to surround any particular amount of text to give it some implied weight and significance. So if you look at this example on my own personal website, I'm using a quite large type size here and a very heavy weight for these titles. But it's also accentuated by this very large block of negative space. So if I go into one of these same thing here, I'm using a pretty large and beefy headline which is set to black, the boldest way that this typeface has. But I'm also using quite a bit of negative space here, so it really kinda adds a lot to it. And you could even go in and kind of experiment here, you could change the typeface down to say two RAMs, which would be about 32 pixels, and then give it some more padding on the top and bottom. And you can see that would be another particular style where the type size is much smaller, but it's still has a pretty big impact because there's so much negative space around it. Now there's some issues I just kind of hacked it together, but you can kind of get the idea that more negative space around the title is gonna give that more impact even if it's a smaller type size. Another example of visual way can be found on the Flowkit website. So if you scroll down and you go to this purchase section, I wanted the purchase section to be more visually heavy, I wanted it to kind of stand out amongst everything else. So I gave it this dark blue background, and I have this bright orange call to action and bright blue call to action. So it might get, it kind of matches the background of these other modules. If I just had like a light gray module here, it wouldn't be quite as impactful. So I have these heavy, visually colored and weighty modules, which gives this typeface Team and Solo here look much heavier than they would, if they're on a white background with black copy. So they are using a bold font but they look even heavier because I'm using a darker color for the background. You can compare it to some of these titles like this, like this looks heavy, but it's not quite as visually impactful as these large blocks of color with reversed alt text on top of it. Okay, for this last example for creating some interest and visual impact with font weight, I want to show you an example inside of Figma. So I've got this block of text that I've copied and pasted from one of my favorite books called "As a Man Thinketh." So I went to Google fonts and I searched for Serif fonts, and I wanted to make sure that it had lots of weights associated with it. And just kind of scrolling through, I wanted to find something that was kind of nice and ended up on Crimson Pro here. It's got a lot of weights and it's just kind of a neat looking typeface, so I decided to give it a go. So inside of Figma, I've got this body copy and this title pasted in. It's kind of all run together, I've got, there's a title here, and there's a paragraph here and a second paragraph there. Now inside of Figma, you can actually use all of the Google fonts without having to install them locally on your machine, because it's all web based, so that's another cool feature of Figma. So what I'm gonna do here is change this to Crimson Pro, actually Crimson Text is what I'm gonna use. I'm already at 100%, so I'm just gonna bump this up to maybe 21, just so we can see it a little bit better. I'm making sure that I don't have this too wide that I have at a nice kind of width here. You can see that even if I you know, everything's kind of run together right now. And even if I just simply give it a line break on these two lines, that alone is giving it negative space between the title and the paragraph, and the paragraph and another paragraph, that alone is giving it, that alone is giving more weight to each individual section. So if I go in here and I add a bold weight to the title, I mean, that is pretty nice. I mean there's not a lot you have to do beyond that. I mean, I know that we're, this is kind of designed in abstract form, we're not really looking at anything in particular. But if you're looking at this, like that's a pretty nice, it's a pretty nice body of text. And that's the thing about body copy and font weight, font style. It doesn't have to be so over the top, it can just be really nicely set and it doesn't need to scream for attention. It can just be nice and properly set and just like that blog post that I pulled up earlier, it can be superbly ordinary. That's a lot of what text does. It just, it doesn't pull a lot of attention. It's just enough, it's set just enough and it's the right size, the right spacing that you can read it, and there is emphasis where that needs to be and there's not where it's not. So it's kind of a fine delicate balance. But you can see all I did was add a couple of line breaks, and change this heading and that looks pretty nice. Now you could also play with the line spacing, if I give it 135% maybe tighten it up a bit, maybe if I went to like 150 that could also work, 125 could probably work, it just kind of depends on the content and the length of everything. Think I kind of like the 135% not that, there we go. And if I wanted to go even heavier with the title, I could go here so like all of that and go to these text options, and then change the the letter case to all caps right here. So that being the same size and making it bold, but also making it uppercase or all caps, that gives it even more weight. Now if this was like the main title of the page, that might make more sense, you have to think about what this particular headline is doing in context of like the entire novel or whatever you're working on. So in this circumstance I think either one of them work. And if you wanted to give it even more weight, you could give it another line break. And then that alone is creating a lot of weight just because we've given it two line breaks, a bold font style and uppercase, like that's a lot of weight compared to if I go back, that's definitely weightier than the body, but it's not quite as much weight. So it really just depends on what you're trying to accomplish with that headline. Both of these styles are good, it's just a matter again of what you're trying to accomplish and the context of what you're designing for. So for your homework on this lesson, I want you to go back to your coffee cup design, from the previous lesson. And if you haven't done that, go back and watch that and do that homework first. But now instead of using three or four different type sizes for your interface like I asked you to do in the last lesson, now I want you to revise your existing design to just use one type size. And save it as a new file before you get started, I don't want you to delete your original. I want you to use one type size, and you can use any weight of the typeface that you want. If you wanna go into Google fonts and pick something really nice that has a lot of weights, so you have a lot of different options, that's totally fine. But I want you to use one size, and really experiment with bold black hairline, things like that. You might you know, be careful with a hairline especially since you're using one type size. And I want you to create that additional weight using the negative space and some color for some of the different areas. So post your work into the slack group, get some feedback, and again if you're feeling up for it, post it to dribble, write down the parameters and description of what you're kinda going for, and tag me and I'd be happy to give you some feedback. So I can't wait to see what you come up with on this font weight assignment.


=== FILE: 2-03 hierarchy.txt ===
------------------------------
﻿- Hierarchy is a system or an organization in which people or groups or in our case interface elements are ranked one above the other according to their status or authority. So to echo the importance of typographical hierarchy, check out this tweet from Matthew Sanders, one of the lead designers on the UI version team. He says, "If you truly want to improve your worth, as a graphic web or application designer, cover your basics first, typographical mastery is crucial. We shouldn't have to correct work on such a fundamental level." And then Noah Levin, who is currently the Design Director at Figma. He says, "Totally agree. Type and hierarchy are the two biggest issues I noticed in design portfolios and it matters so much for comprehension and usability." So why is hierarchy so important? Well, it's important because it elevates the significance of one UI element over another in the context of general layout. And hierarchy is typically created first and foremost with your typography size and style. Now this doesn't mean that all titles should be necessarily larger and more important than body copy just because it's the title. And it doesn't mean that all interactive elements should be colorful and more pronounced and way over the top more prominent and higher of a hierarchy than all the other elements just because they are interactive, it just means that hierarchy is important to consider while creating your design. There's not gonna be a single right or wrong answer until you have the full context of the design. So here are some things to think about when considering hierarchy for your screen design. Number one, what do you think the user is planning to do on a particular screen? Number two, are they planning to explore and browse or did they come for something extremely specific? Number three, what are you hoping the user does or can do on a particular screen? This will be slightly different than what you think they will do. Number four, what is the most important piece of information on the screen? What is the second most important thing on the screen? And what's the third most important on the screen? That is basically hierarchy in a nutshell, just ranking things one above the other. And sometimes not always the most important thing should be the most prominent thing. The largest, the most visually heavy thing. So for a quick reference, let's take a look at some examples. On this apple.com homepage. They just announced the AirPods Pro and it's very likely that this will be changed by the time you're watching the video so bear with me here. Now AirPods Pro, that is the biggest piece of information on this screen. AirPods Pro magic like you've never heard. Learn more, buy. So they're ranking this number one, the giant image. Number two, the name of the image. Number three, the tagline. And then fourth is gonna be learn more and buy. So that's this hierarchy on this particular section. And then if you scroll down, basically have the same kind of thing, but things are getting a little bit more crowded. Now we have number one is the image. Number two is the title, three is gonna be here. And then the fourth thing is gonna be learn more and buy. And then they have this little pricing information right in here that they do not have on this main screen. And you can see the main image has more power and has more gravitas associated with it, because there's not that extra line of text. And also, if you look closely, there's more negative space around the top of this, so that's right at maybe 100 pixels tall of negative space. And then if you look at this one there is only about 60 pixels of negative space. Now to get these cross hairs, I'm just hitting Command Shift + four, which takes a small screenshot. I'm just hitting escape and not taking a screenshot. But you can see just between these two the hierarchy is different because there's less information even though it's the same size. This is obviously kind of the main most important thing plus it's on top, so you can't argue with the hierarchy if you're just using a single column layout. And then on the third section, they have the same exact typographic styling, but it's on a white background with black text and it doesn't have as much weight when it's reversed out. So as simple as this seems, there's actually a lot going on here, there's more negative space. This is still reversed out but then when you get down here, it's the exact same size but the colors are slightly different and the white background kind of takes the power out of that title. And then as you scroll down here, you have slightly smaller secondary headings for each one. All right so next, let's take a look at a simple text message app, just the messages app on the iPhone. So if you look here, you have a giant messages title, lots of negative space but then as you scroll, you get the messages title is much smaller in the top. See how it goes to like 17.5. It goes from like the really big to the smaller. And actually the message title and the name of the people that you're texting with is the exact same size. And then you have the smaller, more subdued text to kind of show you a preview of what that message was about. But then if you go into the detail, every piece of text is the exact same size, except for the name because you already know... Okay in this case, I'm chatting with Sam, but every other piece of text is a large, just body copy text except for the smaller, you know? The timestamp on each one. And so, as simple of an example of this is, it's kind of powerful to understand. Okay, I'm on this screen, I can see the messages, I have... You know that's kind of number one, these are my messages. That's kind of like the most important thing on the screen in terms of typographical hierarchy. And then secondarily, there are the names and the avatars, with everyone that you've texted with. And then as the third thing, you have the preview that is showing and you know the timestamp for when it happened, whereas when you go to the detail screen, it's all kind of completely flat because you're just reading messages back and forth. But you'll notice that the emojis are actually larger. Because if you think about conveying emotion in an interaction with someone, sometimes that's a little bit more important than the actual text. So if you just do one emoji, it's actually larger. And that's kind of a design decision based on hierarchy. And what's more important in that context because they're putting in an emotion into this conversation. So if we're just doing one emotion, sometimes emotion is more powerful than just simply like writing, haha. A crying laughing emoji is a little bit more powerful than saying haha or LOL. So in that case, they're choosing hierarchy in that particular case based on that emotion. Okay, so let's take a look at another example. I'm gonna pull up gosquared.com here, this is what I use for analytics for a lot of my websites. So we're looking at the traffic on useflowkit.com. And typically you get put into this now category. So currently, if you kind of zoom out and look at everything, really this circle here and this number is one of the largest things on the screen. And so in their minds, they're saying, "I bet the user wants to know how many visitors are online right now." And that is the largest thing. And then you have all these other headings that are similar in terms of engagement time, visitor number, devices. A lot of these numbers are flat and not larger than the other because it's more of a kind of a browsing overview type of situation here. So if you go to trends, it's the same thing, you got a big number right here, you got your graph, and then these little view switches here, are affecting the entire page. So these are actually treated a little bit larger fonts than the individual smaller panels here where you're just kind of only controlling what's inside of that particular module. Now, they did kind of keep their larger numbers for switching between here but I think that's a little bit more consistent with the larger numbers that they're using already and some of the other modules. But you'll look these modules all have titles, sources, content, devices, engagement. And you could technically call these H2s or secondary headers, I was just gonna say, yeah, they haven't put as H2s in here. But they're much more reduced than the rest of the content because they're just titling a small module. So just because something is a secondary header doesn't mean that it needs to be the secondary priority on the entire screen. A lot of the information here is more priority. Just knowing the information inside of here is a higher priority than seeing a giant title on top of everything. Now, it's not to say that the design couldn't work if they used bigger titles, but it's just a design decision that they made when they laid this out. And I've been using this for a long time. I think it works well. It's got a nice design to it and I'm happy with it. Okay lastly, I want to pull up a project that I worked on for a client based out of Toronto called Fiber Stream. Now I did their marketing site. And this was a project that we did a secondary project after a few months have passed. So I've got everything kind of broken up into features here. But what I really want to focus on is this dashboard section. We designed all this mobile first and you can see some of the larger screens here were really just an expanded version of the mobile screen. We wanted it to be super clean and just not a lot going on. We wanted it to feel very simple, very easy to know what your services were, what your billing was like, you know? Even even paying your bills. And a lot of this is made possible with just heavy use of negative space. A big typeface and just a really clean layout, there's not a lot going on. So it's easy to kind of accentuate and make the hierarchy very apparent. So it's like title and then content, title and then content. And that was kind of the simplistic hierarchy that we wanted to go with. But if you look over here on the mobile dashboard, one thing that we did was we decided to use... Let's see, I think this is... Yeah, 16.5 here. Five is avant-garde. And this is kind of like the main title size 16 point. But we wanted to have these larger titles that mimicked some of these interior pages. This is like a 30.2 size. And we're mimicking that here. We wanted these modules that were kind of more of a call to action based module, we wanted them to be larger. So this is something that the client really wanted to accentuate, you know? Set up your Autopay this would allow people to set up an automatic payment. So there wouldn't be as many credit card, misfires and things like that, things that cause them like a lot of support headaches. So we're using typographic here to call out this to be a little bit larger. Even though that might not be as important as your balances do. Look, you got this much left on your May 7th invoice and you have this much left on your April 7th invoice. So the biggest priority here is this giant orange button, we want you to pay your bill. But beyond that, we've got set up Autopay, "Hey, why don't you upgrade your router?" So you can see just glancing at 16 and then we've got 32 and 32. And then some of these smaller autotype sizes are 14 point inside here. And so once you've got your Autopay set up, then we reduce the title size to be similar to the rest of the modules got service status, and we're kind of giving enough space over here to make room for these icons. So lots of negative space, kind of big and blocky. And then also for your service repair that you have upcoming. We're bringing that back in. So we're using a double size of the typeface to give certain modules more hierarchy. The modules that are slightly more important are getting larger titles. It's based on hierarchy, we want these to be ranking higher than the rest so they have a larger typeface. So it's less about header one, header two, header three, it's more about the context that a business or a user would find... Okay, what's important on the screen. Well, it's important for the business and for the customer to pay this bill. And it's important for the business to be able to set up Autopay and upgrade a router. And everything else is still there. And the portal is really primarily for just setting up your internet service. So it's not like there needs to be that much more going on. So that's just another simple example of using typesize to create specific hierarchy based on the users needs and based on the business needs. All right, for homework. I want you to design a leaderboard module. It can be like dribble size shot, or a mobile shot or a website like a larger screen website. But I want you to design a leaderboard, that's gonna have five to 10 people with a little avatar, their name and their rank. One two three four five six seven, all the way down. And some kind of arbitrary score, like number one person earned 1500 points or whatever some kind of maybe it's a time whatever kind of theme that you want to put on it. Make it fun for yourself. And I want you to give the module some filters at the top, like all time leaderboard, last seven days leaderboard and last 30 days leaderboard. So it adds a little bit of an interactivity like a view switcher. And I want the list of people or the module itself to have a title. So you come up with a title like top race finishers, whatever you want to call it, it's fine. And it can be a large title or a small title, it's up to you. You decide on whether it should go above or below the filters. And maybe the first place person's name is the largest on the screen. Maybe the title is the largest, you decide what works best for your particular leaderboard. And the biggest thing that I want you to think about here is just using a lens of hierarchy. Is it is this gonna be where somebody really needs to come see the first person and that's the biggest goal or is this just a scannable list of 10 people. And for this particular piece of homework, I want to show you a couple of tips and tricks inside of Sketch and Figma that will help you go a little bit faster. So let's take a quick look. All right, so I've gotten started here with a couple of avatars and some names, some very long names that I don't know if I can pronounce. But basically, the way that I created these was inside a Sketch, just draw a circle. And all I'm gonna do is come over here to data, and then go to faces. And then it's gonna automatically generate a face for you. And I'm gonna create a text field, and it doesn't matter what I type, or even if I messed up the case. I'm just gonna make it blank for now, and choose the name and I'm gonna come up here and do Sketch data again and do names. So it's gonna give me a name. You're gonna have to play around with the avatar size. I'm just gonna start off with 48 to see how that works. And we've got one person here. Now you can go in here and just option drag and then duplicate this by hitting Command D. And you can actually select all of these and hit refresh data. And then it's gonna give you all of these different names and images. So that circle was put on by default, but I'm just gonna make a little border here with maybe a 10% fill. That way for images like this, there's a little bit more of a border. And with an image like this, you don't even really see the border because the image is so dark. So that's one way to do it. You can also copy these names, option drag. And then you could type in one two three, so on and so forth. I'm not gonna do all of them. And you move it around, you decide what needs to go where, you decide the typeface. You're welcome to stick with San Francisco Pro. And then also you want to give them like a score over here on the right. So you might select these and the right aligned align them over here to the right. Whoops! And you'll have to decide too, if you're gonna use this typesize, test it out with... Okay, if we're gonna do 10,000 points, and this person has a really long name, are we gonna truncate their name, you know? And that would be like a rule against a development rule. Okay, if it's more than 25 characters when you truncate it and add like dot dot dot or maybe the rule is you break your name into a double line and you have to have a special component in that instance, or just kind of a slightly different version. And you might decide that these need to be smaller, so no big deal. And you can always select this again, and hit refresh data if you want to change those. And another thing that you might consider doing once you have one design that you really like. I'm just gonna pull this down here. Maybe give it a background and send that to the back. And make sure you have some good spacing here and there. Let's see make that 16 all the way around just for now, or maybe we'll get down to 12 or the top and bottom. 'Cause once we start stacking these up, we don't want a ton of negative space in between everything. All right, so that's good enough for now, I'm just gonna make this white, I just wanted to have a background. So we would be able to create a symbol here. And I'm just gonna call this person. And then if we look on our symbols page, we have this person here. And now we could just duplicate the symbol, Command D. And now we can grab everything again and hit refresh data again. It's only trying to put names on all of the numbers and everything as well. All right, what we could do is temporarily take these out, I'm just gonna hit command X, and then go and do refresh data. And then we could go back in to this master component, and paste that back in and then we'll have all these numbers. And then you could change these as you wanted. You can double click on this child element, or you can go over here and change it there might be a little easier to change it over here. Okay, so let's take a look at how this would work inside of Figma as well. Inside of Figma there are some plugins that you can use, go to plugins and go browse all plugins and type in avatars and grab this one by Dylan Feltus. And then also you just click installed and then do names. And we'll do random name generator and install that one. And then once we have that installed, then we can just draw our circle, we'll do 32 by 32. And I'm just gonna make a few circles. Let's just kind of give ourselves a grid. And now I'm gonna go to plugins, avatars and it's just gonna populate everything using the uifaces.co/api. And then once you have zoom, you could just choose five or 10, however many you wanted. So let's just grab... I don't know, let's grab this guy, drag him down here. And I've got some text here. I'm using San Francisco using 16.5, you can use whatever you want. And this is where the align tools that we worked on in the first module come in handy. So I'm just gonna select these two items and hit Control command + Slash, and that's gonna align them how I want. and then same thing here we could just draw a little bit of a background. Send this all the way to the back. And I'll leave it gray for now. Okay. Maybe I'll make these 20 from the edge and like eight from the top and bottom. See how that goes make that white. Now I'm gonna hit command option K to make it a component. You can see here that under object create component is command option K. Can't remember if that is default, or if I actually set that up as a custom quick key. Then I can do the same thing, duplicate this. Just get rid of all these. And again, I can grab these, don't know if I can do avatar. Yeah, I need to select all the individual avatars and then hit avatars again. Those will repopulate. And then I can select the names and go to random name generator. So now we can make an assumption to the female names and male names. So now we have a component. This is the master component because it has this little filled in icon here. And the rest are instances of the main component. So you can see if I move this it's gonna move all the rest. And that's the same thing that we have here in Sketch. If I go here and change the component, all of them are gonna move. But that's the big difference between Sketch and Figma. These components, you can't edit them in place the same way you can inside of Figma. So if you want to edit a symbol, it's gonna have to be on the symbol page when you're using Sketch. But you don't necessarily have to use symbols. This can be something that you just design and you don't worry too much about components. It's just wanted to show you a little quick way that might help you out. So please share what you design in the Slack channel. And if you're feeling good about it, as always posted on Dribble, happy to get feedback there as well. So let's get started designing and I can't wait to see what you come up with.


=== FILE: 2-04 titles body.txt ===
------------------------------
﻿- Titles and body copy are easily the core component of most websites, most applications. Now, it is mixed in with other components, call-outs and little interactive pieces. But overall, the principles that you derive from titles and body copy are gonna be pretty fundamental to the way that you treat texts throughout your interface designs. So let's take a look at the five main principles that I like to keep in mind when I'm dealing with titles and body copy. Okay, so first of all, we're gonna check out size, size for both titles and for body copy. Now, the most common title sizes for websites are gonna be a little bit larger than your application. And that's kind of what this line indicates, that a lot of these titles would be more commonly found on desktop apps, mobile apps, and kind of more specifically mobile apps because desktop tends to be quite a bit smaller. But for websites, like large article-based longer form with bigger headings like H1s or big call-outs, this could easily be like on the apple.com website as AirPods Pro or things like that. So these are gonna be a lot more suited for those big kind of like marketing headlines. And the only time you'll see bigger titles like this is in some of the apps, like you'll see the 34 point size on like the Apple messages app, or it's kind of their bigger headings. And as you scroll, those end up becoming like a 17 point title in the header. So this is kind of a general rule of thumb for the title sizes, it's definitely not a law, but it's just a good starting place when you're just trying to make, kind of get those first pixels on the Canvas. This is a good sizing reference to look at. All right, second, we're gonna look at weight. Now, on all of these titles, I have the way it set at extra bold. You're not always gonna use extra bold. I just happened to, I really like extra bold weights. So I'm kind of a fan of that. But you're gonna typically be in the bold category here, and every now and then you might have like a medium title depending on the look and feel of your type and how everything kind of works together. But in general, bold is a really good place to start. And as you get heavier with your titles, you have the ability to go lighter. So if we did regular or even kind of like this extra light, you can definitely go extra light with a large title. But as you get smaller, these lighter type sizes are not going to work. So you can see if I'm using light... Let's just change all of these light so you can see the difference here. I'm gonna do extra light. Extra light, viewing this at 100%. So this is a title set at 96 point font. That looks pretty nice. And even at 80 point, it looks still pretty nice. 60 is like borderline. It could still work, but 40, you're pushing the boundary of whether or not light could work here. And definitely at 34 point down to 13, I would just strictly avoid lightweights altogether. So if you're gonna be in the 60 or higher range, you can experiment with type sizes that are a bit lighter, but I would definitely completely avoid the smaller sizes. And you're gonna wanna stay in the medium, semi-bold, bold range up in here. And sometimes regular as we get into more components that have titles, we'll look at more variants within that category, but this is just a good rule of thumb to get started with your titles. And now we're gonna talk about line-height for titles, and we'll circle back through all of this for body copy as well. So line-height is going to not really affect much when you're just looking at a single title, but as you get into longer titles, just make a longer title that spans two lines here. And I just have the aligned bottom on the text that allows it to kind of go up as I'm typing, as a little trick there. so basically, you can see I've got my, line-height is set at 100% here. And a good way to check against your line-height is gonna be typing like a descender, which is like the lowercase g followed by an ascender, which is like the upper case A. So let's see, go longer title. And this is gonna be a good reference. So you can say between the capital A, and the top of the l or the k which are ascenders, there's plenty of space right in there, but as you get to the lowercase g, and A is getting a lot tighter. So you have to be careful if you have the lowercase descenders hanging out in your titles, this might not work. So we might wanna bump it up to 110, 120. And this also depends on what casing that you're gonna use with your titles. Are you gonna use title case, or are you gonna use sentence case where only the first letter is capitalized. So in this case, we might wanna tighten them back up to 100. But definitely a big mistake that I see is where your body copy might be more closer to 150 or 175. You definitely don't wanna go that high on your titles, unless it's like a standalone element, and you have a really good reason to do it. But if you use 150 on your body copy, and 150 on your titles, it's gonna look very, very strange. So for body copy, for titles, I like to stay in the kind of 100 ballpark. I mean, you could bump it up to 120 for certain cases, but if you go with an all caps letter case, you have more flexibility because the letters are a little blockier. So now we could get into bumping this down to 90 or even 80, basically as low as we could get it before they started clashing with each other. And sometimes you might want them to clash depending on if that's the style you're going with. But in this particular example, it looks a little bit too tight with those letter forms clashing. So I could get away with 75% capitalized here. It's pretty nice. So width. Width and alignment are gonna be the last two things we talk about here with our titles. So you can see right now my width here is the exact same as the body copy below. But you can see that this looks kind of weird, especially if this is my title. So I don't like having this long text here. If this text was above the first, if it was more like that, then it might not be as weird, but overall, this size and this line spacing, it's just a lot of, kind of a, let's see if I can get my pencil tool going here. There we go. So you see this negative space, it's just kind of creating a weird thing here. So I either need to adjust the size or the width of the title to make that kind of look better, or even change the copy. But you can see if I just make this a little bit larger, that's a lot nicer. And ideally, maybe it's something like that. Or if I really like the way this double line looks, I could bring it back in here and then just reduce the size until it's only like that. So you can kind of play with how this is gonna work, play with the width a little bit. It's totally okay especially on a website, if your title is extending past the body of the text, or even kind of coming in a little bit as a stylistic thing. So that's something that you could play with. The one thing that you just would never wanna do is have this, a huge, even if you aligned all of this, like that just kind of looks weird. So keep it reasonable in terms of if you're overhanging this or not, and if you're gonna change it. And the last thing here, you can see I'm playing with the alignment. Most of the time, you're gonna wanna align your text, especially if it's longer form copy, you're just gonna want to left align it. It's gonna be a little bit odd if you end up using center alignment on your titles. Let's go up a little bit larger, so you can see more of a dramatic difference. And let's also change this back to a title case there, there we go, and then we'll kind of bump up our, get back into the 100, 100 range will work. So this is centered on the art board, and now I'm gonna center this on the art board. So you can see this is, it's not the worst thing in the world, but it just looks odd to have a centered title and then a left aligned text down below it. Now, one way that we could make this work technically is if this was like a smaller block of copy, and then we had maybe like two lines and it was more of a stylistic left or right kind of magazine style. But even then, it just kind of feels odd to have the center align and then this left aligned. And actually this is too much copied to be center aligned technically. You could get away with center aligning this amount of copy, but usually you would only want to center align a smaller amount of body copy. Something like that could work, because then you have this nice... You kind of have this coming in, this coming in, and you have the same kind of downward momentum created by both title and the body. But if we bring that back to left align, you can say that if I go command option L here, and this is all left aligned, then that just has kind of a nicer cleaner line because we It's always nice to get these strong vertical lines, especially for websites, it just kind of helps you, it just feels more balanced, and that things can line up a little bit better. So getting those strong verticals. And a lot of times, if you're doing something maybe a little more stylistic and say you're a little bit smaller title here, well, a lot of times you can get away with having some extra negative space over here, and therefore to be a little bit more stylistic. A lot of times you can balance the entire thing by having a border on the bottom of the title. And then maybe you have like a date or I don't know, whatever. Let's do like a date over here. So I'm making kind of like a right aligned and a left aligned on top of this, so it kind of has like a nicer balance to it. So now I've got a stronger vertical edge here, and I didn't quite align that up. 14, there we go. You would always want to line up your baseline here. Don't necessarily rely on trying to align it up like that. You would always want your titles to be aligned to the baseline. And that goes for most copy, including titles, especially your baseline is gonna be the best. So you can see there's different ways to play around with these titles. And again, it depends on the context for what you're designing for. This is not always gonna make sense for an app, but it might make sense for a news article or a marketing blog to kind of have just some fun variation with your titles. The one case where it would make sense to have a centered title with maybe left align text is gonna be in the context of a fixed title bar that you would see in an application like this. So you'd have your iPhone title bar up here, something like that. And then as you scroll, this stuff's gonna go down below it. That's not gonna be as bothersome as having a huge centered title like this on a website. It's a slightly different use case. So I think in the mobile format, that's gonna make a lot more sense than doing something like this on the web. So let's get into these five things for body copy. Starting off with size. In general, body copy is gonna be set at 16 pixels as kind of like a baseline minimum. And this is definitely for the web. The web's default paragraph tag is going to render at 16 pixels. So you can see I've got 16 pixels here. And depending on the typeface, you might wanna go up to 18 pixels. It's kind of your call, 16. You could get away with 13 if there was gonna be like a secondary kind of smaller like tech specs or a smaller kind of area that didn't have a lot of copy. Usually, the rule of thumb is the lower the amount of copy, the greater flexibility you have with experimenting with size, width, line-height, all of those components. The smaller amount of text, you have greater flexibility to play around with those kind of variables. But the greater the amount of text, the more you wanna stick to the tried and true sizes, because it's just all about readability. If we go back to 16 here, that's gonna be set up against a 24 point title here. So that's kind of a general sizing rule for body copy. Now, let's talk about the weight here. So you can see on this one, I'm using just a regular weight. Like I said, if you have smaller amount of text, for example, if I get rid of all that, you can get away with going bold or semi-bold, and it's more about like a call-out. We'll cover more about call-outs. Unless you have a very specific reason to make your body copy bold, you're typically gonna want to avoid it unless it's being treated as more of a stylistic element. So we're talking strictly body copy here. So we're gonna keep it at regular. The weight, largely depend on how you use it with a title as well. So you can see on this title, I've got this bold, whereas this is regular, and these are gonna be like two or three steps apart from each other. So I've got regular, medium. So this is one step down, two, three. So if I wanted a true bold to stand out from the rest, you're typically gonna want to be at least two to three steps darker to have an actual bold. So you can see if I go, let's see, if I go... Let's see one, two, three. So if I went semi-bold with my body copy and I needed a good bold, then I could go black. And it would be enough contrast between here and here, that it would actually look like a bold. And again, the bolder body copy is gonna be more for stylistic renditions, depending on the direction of the thing that you're designing for. And as always, if you're gonna have more of a traditional actual body copy that's intended for people to actually read, then you're gonna wanna stick to some of the recommended sizes for all of that. So next up for body copy, line-height and width. We'll tackle both of these at the same time. Line-height for a body copy. Your standard kind of go-to line-height is gonna be like 150% for your body copy set at 16 pixels. Depending on the typeface, you can go a little bit tighter, like 135, you can even go 125. It just depends on the amount of text and the kind of field that you want it to give. You can go as low as 124 body copy, or you could even go as high as like 220, that ends up looking like a college essay that you wrote on skipping a line just so you could fill up more room. But it's not necessarily a bad look, it's just depending on that sweet spot for the legibility, the readability for the particular thing that you're designing for. So a good baseline is gonna be like 150% or 1.5. And then depending on the typeface, this is a sans-serif typeface set at 150. But you can see on this example, I've got this set at 160, and it actually doesn't look too much larger than this one. So if we zoom out and look at these two blocks of text together, make this a little bit larger. So this is set at 16 point with 150 as the line-height. And because this, I changed this to Georgia and bumped it up to 18 point and bumped it down to 160, just because this particular typeface felt too tight. So if I went back to 16 and 150 here, whoops, 150%, well, those are going to go, there we go. So both this font Enter and this font Georgia are set at 16 point, and they're both set at a line-height of 150%. But look how much tighter, let me just get, this is the exact same block of text. The letter forms are wider, and they're also a little bit taller, which is gonna extend that body copy down, and even in the same... Actually, this is set at 471. Let's set this at 520. Now they're both the same width. So it's a little bit more of a realistic difference. But again, you can still see that it's breaking down almost two full lines below the other one. So it just really depends on the typeface that you're using as to the size and the line-height that you really wanna use. So for this particular sans-serif it's kind of small, and I think it just reads a little bit better when there's a little bit more breathing room in here. And again, this is kind of designed in abstract. So it depends on, are you gonna have a huge thing to read or is it kind of a tight quick moment of information that would allow for a tighter line spacing? That's something that you'll have to decide when you get into that specific context. So last, let's look at width and alignment together. This is gonna be huge. So in general, there is a timeless graphic design principle that says body copy should not be less than 45 characters wide, and it should not be more than 75 characters wide, which means somewhere between 45 and 75 characters is gonna be your optimal body width. So I have made this a little bit easier for us, and I've made the 44th character red and the 76th character, somewhere between here is our sweet spot for the line break. And the reason for that is if you extend it past 75, it's gonna be quite cumbersome to read this entire thing, and then come back over here and read it all the way over here and then come back. And that why there's a cap on 75. And it's definitely a principle and a recommendation. No one's gonna come and arrest you if you go over 75 and you go to 80, that's not gonna be that big of a deal. It's just, when you start going too much further past that, it looks very unprofessional to go much past that. I've got an example here where I wanna show you this body copy where it's a little bit too long. I was browsing through the web and I found this website, and I thought to myself, I bet you, this is longer than 75. And also the line-height on this call-out is a little bit, it's kind of a little bit too large in my opinion. So if we get into our inspector here, I'm gonna grab this paragraph. And actually, let's just double-check, see how wide this is. We'll grab the second line. I'm gonna open up iA Writer. You can use any, like Sublime Text, anything that will give you the word count, look down here at the bottom. So this is 102 characters. So let's select, let's copy from our team just so we can get a better gauge on what the 45 to 72 mark would be. So if we break it in the middle of developers, that would be 75 characters. So what I'm gonna do is put a little max width on here, and then just make it go up. So we wanna break it right here inside of developers, 'cause that would be the 75 mark. So we're gonna leave it right in there. And since there's not a ton of tags, there's only three paragraphs, they have this set at 170, which could work, I'm just gonna tighten it up a tiny bit to 150 here. And then now if we look at this, this is technically a paragraph, so we could make it a bit longer. Right now it's breaking at a, which is gonna be 41 characters, which is below the minimum. So if we put it at after of at least, that would give us at least 50. We could still even break it after passionate 'cause that will be 62. So let's add a max width to this call-out. Max width. So what do we say? A group of passionate. So we could go all the way out. Well, I guess it's not gonna break group, oh, that's fine. But also, the same body copy, line-height was set on this call-out. You can tell, this is more of a title, and that's just a little too large. It has too much breathing room in there. So we set the paragraph to 150. And if we set that to 150, that's better. But I think we could tighten it up to like 130, maybe even like 135. And even though this is at like, I think that's close to 75 characters, this particular context, it just feels a little bit long to me even after we've made those changes. So that's gonna be 83 characters, yeah. So I think having that inspector open changed the width of that paragraph a bit. So let's tighten up the max width a little bit more. It's starting to feel better. And you can see that there's also these different sizes. We talked about font size in another lesson. But I don't think that this exercise is doing any extra favors. So forget what message we're trying to say here, I just want to take this out for now and see how that works. I like this hanging over, but I think it could be accentuated a little bit more if we tighten up those smaller paragraphs even a little bit more. So let's take those to 60 Ram. The Ram is based on 16 pixels usually. So if you did 16 times 60 round, it will be 960, but that just depends on what your Ram is set up. Now this is looking better, but now I'm looking at the negative space here versus the negative space in here. It doesn't have to be the same, but it's worth looking at, see if we're gonna add a little more bottom margin here. Let's see. All right, that's a little bit better. To me, this is looking a lot better. I'm gonna command return and load this page again into another tab, scroll down. So you can see a big difference here. There's not a lot of negative space and there's not a lot of, all of this is set to 170 line-height, which makes this little call-out title be a lot higher than the 170 on this. Because it's 170% of the actual font size, not 170% of the base size. There are ways to do that with code and whatnot, but we're just talking about just the overall look and feel. So if you cycle back and forth between these two, this is just a much cleaner, more easily read webpage than this is. Right now this is kind of a block of text. It doesn't look horrible, but it just looks like it could be tightened up, and that's really what you're doing with type design with your body and your copy. You have to make those small tweaks to get it really tight. Whether it's a title or a body copy or call-out, any text that you're using, you're gonna have to make these incremental changes, like your line-height, your weight. And you're gonna have to play every element off of each other to make it really nice and professional. You're gonna have to get into all these little details, size, weight, line-height, width, and alignment. Those are the gonna be the five most important things that you can look at when you're trying to lay out your type size. So if you can take the title and take the body copy as like a good strong foundation for those five different components for how you're designing it, and extend that into the rest of your design, that's gonna give you a huge, just kind of a clean foundation to use for your type of graphic usage throughout your entire project. So for homework, I want you to lay out three different layouts lay out three different layouts. I want you to lay out three different art boards in your design program. Let's go with a larger size so we can experiment here. I want you to do a title, a body copy, a secondary title, and a little bit more body copy. And I want you to experiment with three different versions. So one version is gonna have a certain type size for the title, certain type for the body. And then your second one, if you use a small one in the first one, go really big on the second one, and play with 15 point body copy and up to maybe 18 or 21 point body copy. And then on the third one, do something completely different. Maybe the body copy is 24 points and your titles are 16 points, but just come up with three different designs. Like I have here with just a simple one line title. Maybe another one has like a two or three line title. The body copy is up to you. Just pick something better than Lorem ipsum. I'm using this dummy text that I found online. You can just copy and paste this down below, or you can grab your own self, it doesn't matter. So just come up with three, post it in Slack, let's get some feedback, let's get some discussion going, and take it from there.


=== FILE: 2-05 truncation.txt ===
------------------------------
﻿- Truncation happens a lot of time in interface design because so much of the data that we designed for is often user generated. And they could be anything from usernames to video titles to body text. Most of the time if you're designing an interface that has some type of account, user account, they're signing up and they're doing things. There's gonna be a user generated text. Think like tweets, names, I mean video titles, podcast titles just all of these things that are interfaces house, are going to be user generated content. And that can be one word or it can be 40 words. So we have to figure out where do we draw the line on truncating text? Whether it's titles or body title, body not body title body text. Let's take a look at a couple of examples starting with the Apple podcast app. I've got a number of podcasts here. And what I want to pay attention to here is the truncation of the title. So you can see on the very top number 38. Stillness is the key with Ryan Holiday. Now that title breaks into two lines and it doesn't need to be truncated. But if you look at the one below, it's a lot longer becoming a niche reviewer story behind bagworks with Chase re and then dot dot dot. Now that one has three lines with a truncated title so the designers here are making a decision that it's gotta be truncated at some point, and it's better to be after three lines than four lines because if the thing extended past four lines, then the text to the right of the image would not even, it would kind of break the format of that little component. But what's really interesting though if you go down. And I think there's one. So if you look at crimes of passion right here Harold Nokes part one. That's a very short title, and there's no more content to break into two or even three lines, so what they do here is they're bringing in the description two lines of the description, and then they're truncating the second line of the description and that kind of makes up for the content that wasn't able to be filled with a title. And then if you look at this one for how I build this, Evite Selina tobaccowallah. That's a two line and then they're only bringing in one line of the description where they truncated description. And all of them you know, kind of occupy that same amount of room. So there are these little rules here, where you know if it's a three line title, then we're gonna truncate it and we're not gonna bring in any description. Or if it's a two line title, then we're gonna bring in one line of the description then truncated the description. And that way, you can see that every single one has a nice block of text related to the cover image. So there's three or four variations here just to get some consistency with each one of these episodes. And then if you go into one of the details here of a larger say I open that up. In order to show the entire title, they're just having this big marquee kind of scrolling thing. And, you know I don't know that they don't really have a lot of other options here because they don't wanna mess with their controls you know you wanna be able to kind of play and pause this, more than you wanna be able to read the title. So they're kinda making some trade offs there, based on you know the title links and then what's most important. 'Cause like once I'm in this view, I don't really care that much about the title, I'm care more about being able to control the podcast and things like that. So that's just one example, looking at this Apple podcast app. Alright, now I want to show you four different personal projects of mine or client projects, and we'll take a look at some different ways where I had to truncate different titles, different things in the app so let's look first at an app called Skyscanner. Okay inside of this app, there's tons of screens all over but I want to focus right on this guy here. This is an older file, so some of my icon fonts that I was using that I do not have on this machine, are screwing up so just ignore this, this is also pre iPhone 11 so there it's like a smaller screen. But what I really wanna focus on here is this part down here. So, and just to sec, a quick stage for what you're looking at. This was an iOS app and a web app, that allowed multiple people from the same company to all book their flights together, and then they could send their information to the manager, and they could see which of their other colleagues had booked certain flights, you could all book a company wide flight, and you could get on the same flight with other people. So it was a way for business travelers within the same organization to book their flights together. So in this case, say I'm looking for flights, and I'm searching from Scotland to Singapore. And I can say okay well on this flight, Ross is, he's on that flight he's already booked it. But what if other people in the company have also booked that flight? So one thing we're doing here is we're changing this component, to just show that Ross has booked it. We're changing it to show four people here. So now we have, we have Ross, some guy named ET, we have this guy, and MS. And so, while not even though this isn't a complete truncation of text, it's just a way to show more information in a smaller kind of screen. So in this case if we tap this drop down which has kinda indicated here that this is gonna expand. Now we have this component here where Ross is fully expanded. Now we have that same version of the component here as a list item. And now we can see okay that's Ross, Edward Taylor, Steve Skyman and Matt D. Smith, and these are gray circles because they're pending and these are green circles because they're booked. So maybe these people, you know have a slightly different status. But it's one kind of small and interesting way to truncate information and in a smaller space so you know we are, we do have the title for the person's name, and there's no way we're gonna fit more than one of these on a row. So rather than clutter up the entire search results with everything on there, we can kinda make use of clever truncation and you know, we're also accounting for avatars that are missing. Maybe they haven't uploaded an avatar but at least we can bring in their initials, to kind of have supplement that material so the user knows what they're looking at. And then if you look at some of the other ones you know it's just not there because no one's booked this yet. Another kind of interesting way that you that we're truncating text here is that, this particular flight from Scotland to Singapore, it's stopping in London Heathrow, and I guess that's turkey... I'm not sure we'll call it Turkey. And then in Singapore so it's, these are airport codes, and we're trying to signify like the amount of layover time here, that was the width. And we also wanna show like what airline is gonna be showing on these particular search results. And a lot of this information I got from the team, it wasn't like I just knew. You know a lot of research went into this as well. So, but we knew that there are gonna be multiple instances where the leg of a flight would be handled by another carrier. And so, we're saying British Airways and two others, and we're showing that two others can be tapped on because it's a slightly different color its that call to action color. And so we know we're not gonna say British Airways and Air Turkey and Air Singapore, so we're saying British Airways which is the first logo shown and then we have two others, which is the active text. So in a way, we're truncating those three airlines into one plus a little bit of link, like a call to action that can expand that. And this is really commonly seen on Instagram or Facebook where it says, or even Twitter where it says, liked by your best friend and three others or liked by Matt and 20 others or it might say like by Matt and Ross and Dan and three others, something like that. There's, it's kind of an easy way to kinda condense a bunch of names show a little bit of relevant information but then also have the have a way to show even more information. All right, next we're gonna take a look at MyMonero which is a desktop application that holds cryptocurrency in a digital wallet. So in this case we're using Manero, which I had never heard of until this project, it's kinda like Bitcoin but apparently more decentralized and whatnot. Anyway, let's take a look. Okay, so I'm just gonna hide my toolbars here and let's zoom in on this kind of wallet area. Alright so with these all of these crazy long wallet addresses, they're super long. So if you, if I scroll over here, and I show you like this is an actual, the length of an actual wallet address. And there's just no way that we need to show all of this by default, it's just a lot of information and no one would really ever read all of this. It's more gonna be like copy and paste. So, the way I'm handling that here is, so this screen, this screen is like your wallet. So like you can have multiple wallets. So if I gotta spending cash wallet versus my savings wallet. Click here, go into this big wallet. And I've got these color coded so you can you can choose different colors for your wallet so that's kind of nice. So whatever wallet you're in it'll show like you know that color for that specific wallet. A lot of times, people just wanted to copy the wallet address so I can, so they can send money or receive money. So we're just giving them an easy way to copy that wallet address, without having to look at the entire thing. So our active text here is blue we're using blue as kind of like our active link color. But you can see we're truncating this at a very specific place. So if I went up to here it would just be too much, but I wanted enough negative space in here, to kinda give copy its own breathing room. We could have gone maybe slightly longer. You know right in there. To make it even with the space on the left and the right of each one. But we're not really gaining that much information by having a little bit more so I chose to kinda truncate it right there. That way, you could click on copy. And then now if we expand this just like on our Skyscanner, I'm adding like a little kinda drop down here. So if you click on that drop down, it's gonna give you the full address, and it's gonna give you the view key and the spin key these are other things that, I actually can't remember what they even do but it was important to the project at the time, based on my research and talking to the guys who were developing this. So just know that it was a lot of information that didn't really need to show up on the main wallet. I think this is another reason why I decided to go with that particular width on that. The truncated version on top because I wanted it to kinda match. So if it was closer it would just be a lot of information. And I knew a lot of these were gonna be two or three lines. So these are two lines and these are three lines. And then you can see again on these, there's a transaction detail where it's also the same wallet address. But if I go into this section with the arrow here. That's gonna take me to the transaction detail screen, which is right here. And then you got transaction ID you got all these like longer long longer information that is a part of those line items but, you know, a lot of that stuff just like in the podcast app, you can kinda suck in that information to a list view to show just a slightly more relevant version of that. So you can always kinda think about what are all of the ingredients that I'm working with, on a search result for a plane trip or flight? What are the ingredients that I'm working with? In a cryptocurrency wallet you know transaction so you list all of your ingredients out and you say, Okay, I can take a part of that and put it here and then link it to show the full thing. You don't always have to just show everything all at once. Because a lot of times it's not that relevant and you wanna have a scannable list. The same way on the podcast app you wanna have a scannable list that you can just go through quickly, you don't necessarily need to see the whole entire thing at all times. But it is helpful in the podcast example that you see a lot of the title and not just one line of it because otherwise it would be hard to read. In the next example I wanna show the beta page for Shift Nudge which you've probably already seen, but you might not remember. On this you know, I wanted to list all of these lessons out. But I didn't necessarily want to show them all at once I just felt like that was a lot of information, to pass when someone first landed on the page. So I wanted it to be, I wanted it to be a little bit intriguing so you you know that it's there and you know there's maybe a little bit more, but not kind of overwhelming. And so all I did here was I added a rectangle on top of this, and a gradient that went from zero percent opacity to 100% opacity of the background color, and that way it just kinda faded it down. And then I just adjusted the height of that gradient, based on what I thought looks pretty good. And so like you can see one, two, three and then four is kind of, you can barely see what the four is which kinda, hopefully you can tell that there's more there, I did not add a read more or you know, a little plus button which would have made it a lot more explicit, 'cause I thought it was, there's not much else going on on the page so, if people are on this and they're curious enough, then they're going to tap or click this to see it. So that's another way just kinda adding a gradient where it fades out. And then lastly I wanna look at this, this is like a red camera design idea that was kind of a concept. And on the information page, you can see it's basically the same exact idea that I have this gradient here, only on this one I have more, so you can click this and then it would just expand into more information. And it works you know, whether it's dark or light. That's just another simple way to kind of show, you know that there's the ability to read more. So whether you're truncating titles, truncating Bitcoin addresses or travelers body copy, truncating text and kinda dealing with bits and pieces of the text is gonna be a big part of how your interfaces come together. So I'll post links to a lot of these files down below that you can get into and check out, but for homework I want you to take some screenshots of the Apple podcast app. I can also provide those down below. If you don't have access to it, or something like the YouTube sidebar. Like if you go to youtube.com. Click on a video and you'll see the sidebar, something some kinda app, and you might discover one on your own that you enjoy that has some version of like truncating text, where the titles and body copy or you know, one or the other. For the Apple podcast app will be great, and I want you to go through and try to really pixel by pixel recreate at least three to five of those components, if not the entire screen. And you'll get an idea for the line height, and where the truncation takes place, how many characters it is, and just get a feel for truncating the text, and maybe even playing with the way that one component can handle multiple versions of that. Or do you need, do you need one or two components? And again you don't all you also don't need to use reusable components for this necessarily, but it would be a good way to kinda break into that and start discovering some ways to handle that information. So don't worry about posting this to dribble because you're just kinda copying this for practice, but definitely post it into slack and let us take a look, let's get some feedback. And let's see how it goes.


=== FILE: 2-06 callouts.txt ===
------------------------------
﻿- Call-outs, add visual interest to typography based layouts and pretty much every layout is gonna be typography based. So call-outs are sort of important. The call out is more of a term that comes from the graphic design world and not quite as much in the interface design world, but the principles kind of still remain. On the web you might have seen something more like a block quote or a pull quote or something like that that is typically thought of as a call out because that's definitely one of those examples. But call-outs can be used to literally call out attention to any specific information that you'd like to highlight. Call-outs can be created with other elements, like background colors, borders, arrows, and more, but specifically we're gonna look at creating call-outs with typography just kind of by itself. And we'll look at some other stuff too, but the focus here is on the typography itself, the letter forms and all of that. So another way to think about a call out is giving special attention to any particular piece of text that grabs attention for a very specific reason. In a magazine layout, like a call out might be a pull quote because it's like a really kind of a very impactful kind of quote. On a website, it might be a testimonial or something similar that just has a lot more visual impact because the statement alone has more impact based on whether you're trying to influence a viewer or just call out some kind of functionality. So despite all of this, when you're constantly battling between form and function, you have to make sure that you're not overdoing the typography so that your functionality is hindered. So there's kind of a trade off that you have to go in between form and function, where you do really nice beautiful type, but also it needs to make sense in the context for the design, because if you're doing a marketing site, you have a lot more leeway to do block quotes and big typographic things. But if you're doing an application, an interface, you're gonna be a tiny bit more limited to what you can do so you just kind of have to keep that in mind. A call out by itself is typically not referred to any specific functionality though it's definitely, if the situation warrants a call out in an interface and is tied to functionality then that's perfectly fine. It's just not traditionally meant for that. So let's take a look at some examples all across the board. First, we're gonna look at the Apple Clock App on the iPhone. Okay so we're gonna go to the clock app. And the first thing I wanna call out here is the 4:00 PM, 1:00 PM and 8:00 AM those, wait a second. Is that even right? That's not even right. This is currently 4:41, but it's showing 4:01. What the heck? Anyway, regardless of that, I don't know why it's showing the wrong time. Lets try to quit the out and see if that does it. Alright, it's still, still wrong okay anyway, the hours here and the minutes and the time is large. It's quite large. It's even larger than the world clock title there. And it doesn't overtake the title though. The title is chunky and bold. It set in that I think that's 34 point size. And again, the title goes to 17 at the top, but then the time itself those are quite large, quite possibly 68 or 48, somewhere along in there, we can check in a little bit, but there are large and they're called out because after all this app is for telling time for setting time alarms and things like that, and it's intentionally larger. Now the app could work as well. If the 4:02 PM was in the same exact size as New York, but there's plenty of room and it just makes it a lot easier to glance at the time. And so in this specific use case, you just wanna glance to see what the time is, and there's really not an easier way than giant numbers. So you can see even the alarm, you know, they're kind of taking that big number across from the clock to the alarms and then on bedtime they've scaled them down a little bit because they want to be able to kind of put that into its own kind of line item with two numbers. And so two numbers that large beside each other are not gonna quite work. So there would be the temptation to kind of make them all this size, but it's kind of a different context, whether you're displaying them one at a time or two together on the same row. And then you've got the same size on the bedtime schedule there. And then stopwatch, you know, you have an even bigger number. So these aren't necessarily the traditional graphic design call out ways for kind of, you know, calling out a quote inside of a body copy. But it's a way that the kind of call out mentality can work in interface design. And you know, this particular screens they're not calling out the time quite as large because there are three numbers and it's more of a utility, but once you start the timer, you know, that is a big time now, you know, that's probably as big as the lock screen time. And that's probably the biggest number that you'll ever see Apple use on the app. And that's because it's very important. That's like the biggest concern is how much time is left on the actual app. So these are some decent examples for single call-outs inside of an app. Alright next, let's take a look at the Apple App Store on the Mac. So I've got it open here. And I'm just gonna click on any one of these kind of big tiles here. So this right here, exciting news for gamers. This could technically be considered a call out because it's kind of a title, but it's kind of called out within the body of the text. This is definitely the title of the screen. Great with controllers, exciting news for gamers. This is just kind of a fun way to kind of add a little bit of spice to the text. Add a little bit of texture, kind of pull you in with that darker contrast between the white and the background. It's also worth noting that they have this nice all caps kind of secondary title above that. That's pretty nice right there as well. So I'm just gonna go to another one, same thing here, "Carrot whether gives you a detailed hyper-local "minute by minute forecast." So it's just kind of a way to make a louder statement. And sometimes, you know, the app store is an app and they're using call-outs in a pretty subtle way. I mean, they're not gonna do a giant huge pull quote, but it is worth noting that they are calling that text out in the position. And you know, they're making it bold, they're giving it a higher contrast color. So they're doing a few just subtle things to do it, but they are doing it. Alright, next up I wanna show you these pull quotes that I designed for a course that I made a long time ago called AIUX. Now this is the sales page and I've got multiple call-outs going on here. And this is a really long form sales page. You know, it can get very, very boring to scroll through all of this and read it unless there was a lot of visual interests. So, I mean, look how tiny this scroll cursor is. I mean, this is a very, very, very, very long page. And so I wanted there to be lots of visual interest here because otherwise just a boring, it would feel like you're reading a novel and that's not really what you're trying to do here. So the first thing I'm doing here is I'm pulling in like a little bit of a block quote, same font, but it's bolded and it's orange, and it's just kind of sitting inside of the content here and I'm giving it like a very subtle little dotted line border, kind of wanted it to feel, you know, a little bit kind of like a nice magazine layout. I'm also calling out you know, kinda not really buzzwords, but you know, I wanna call out this is super fast, I've used these techniques, and step by step process for strategizing and designing. I'm trying to like emphasize what this particular course is all about, with the call-outs on the side and with the bolded emphatic pieces inside the body copy. Now you can easily overdo this and I might've gone a little heavy handed with some of the sales copy, but again, I mean that's what it's for is you're trying to check this out, check this out, check this out. People really have short attention span. So I'm doing the same thing here. And this is even like a call out within a call out. So I'm taking larger text... So okay number one, larger text Number two, I'm combining it with the giant quotation. Number three, I am also bolding another piece of text inside of that text. And then number four, it's also combined with that bottom border and with the logo and everything like that. So this is kind of like its own little component design in and of itself. And so same thing over here where I've got you know, it's basically the exact same component just reversed. And so I'm calling out the name, making sure that the logo is nice and prominent because these are important you know, so these are all a bunch of block quote call-outs. And so when you're trying to show that someone has used something and that you might find it useful as well, it's worth putting some more visual weight into that. Otherwise it's just this tiny little thing of text and someone might overlook it and it's you know, it could be quite important. So if you scroll down through this a little bit more, you can still see these you know, pieces of tags being called out. But then we have a bigger version of what I did in the very beginning here. So I'm using the orange and the border, and then I'm doing the same thing with just like a huge, I'm breaking the format. So you're trying to scroll along and then all of a sudden it breaks. So it's you know, I'm breaking the format over here off to the right, and I think I'll do it later on in the website, a little bit to the left, but then for the really big impactful call-outs, I'm doing it in the center with a lot of negative space and these borders on the top and the bottom. And I'm also kinda mimicking my breaking the format a little bit with some of these images. 'cause I'm just instead of putting them directly in the scroll view, I'm breaking it slightly just because this is a long page it's you know, probably three to 5,000 words, it might take you a solid 10 or 15 minutes to read all of this. So it's gotta be a little bit more interesting than just one of the same format over and over and over. So again with the pull quotes, I'm doing this again on the right, another big one broken up. And then this is another example of some pull quotes that are not quite as large and impactful, but only reason I didn't want to do this huge is because these are kind of like answers to a survey and there's it looks like about eight of them. And I don't really need eight giant things altogether when they're not quite as impressive as maybe one of these bigger pull quotes. So as the importance of the text elevates, as it's more important the more design and the more impact that I'm putting on it with negative space, with bold colors, with combining it with images and little quotation symbols things like that. Here's the smaller quote kind of sticking out on the left and on and on. So I've got probably four or five different call out elements on this page. And they all kind of have their own little partS in designing the full layout. And I'm even, I was super proud of this particular thing where I had a bunch of designers from Adobe try this course out. So I just wanted to over the top pull this module out and say 30 designers from Adobe, 30 designers. I think I probably could have made the... Perhaps at one point I might've had that 30 even larger. Looking back on this now, I mean this course is probably I don't know, five or six years old at this point. And I was probably a little bit gratuitous with the giant call-out, but it's also kind of like a personal critique, you know? So you know, you have to kind of take it with a grain of salt because something that you think worked really well, you might kind of cringe out later. So it's just one of those things where you have to strike a balance. Okay, let's move on to the next example. Alright, we're gonna check out basecamp.com. They have a lot of different little call-outs going on. You can see that they have the before Basecamp after Basecamp call-outs. And then they've also got these little handwritten call-outs, they're trying to just make it seem kind of personable and friendly more handwritten call-outs, more bold in place kind of call-outs. And then if you get down here, they just have these huge testimonials. So CEO from Shopify, you know, just a bunch of big testimonials, that's great task complete. Whoa it's just a lot of big bold call-outs. And I think that theirs does start to... Theirs start to compete with the headlines. I would say it's kind of borderline, like they could possibly use a little more negative space. And I'm personally on the fence about if this is too much text to be center aligned, but that's not the point here we're talking about call-outs and Basecamp uses big blocky call-outs so that's a good takeaway from this. Alright, next example is this mymonero.com website. This is the actual little marketing site that I designed for the cryptocurrency desktop app that we looked at in another lesson. So I'm not using any call-outs here just yet, unless you wanna kind of consider these emojis that we're using as somewhat of a call out with a headline. But these are I mean these are technically titles. What I wanted to do is scroll down here to these quotes right here. So this is another example, you know, it's a pull quote or a block quote. It doesn't have to be a block quote HTML tag per se it could just be its own thing like a testimonial. But again, I'm combining this quote with larger typeface. I mean this type face is even larger than the titles. This looks like it's probably close to 20, whereas this looks like it could be 28 or 32, something like that. And I'm using background color, size, locking it up with a logo and putting an avatar with it, with the name and the name of the company. So kind of the same type of elements that I was using on the AIUX. But this one is just kind of stripped down a little bit more to match this kind of sleek and clean cryptocurrency app, but yeah using color, type size and locking up with other elements, those are all great ways to make call-outs. Okay next example is going to be inside of the sketch file where I design these screens for 12stone.com. And 12stone.com is a large church in Southeast Georgia. And I designed their mobile app and their website. This is their website. Alright so let's take a look at this. This is a quote from a video. They publish new videos every week, and this is a quote from the video. So rather than only having the video up here, I wanted to have a way to make it really nice and big and typographic and kind of give it this chunky friendly style. So we've got lots of negative space around here, but just a big chunky quote, and then the ability to Tweet. So you can see this is kind of our normal title and normal body copy. And so that breaks away from that size, just having that big nice and chunky chunky style. And again, I think this is... Yeah so this is bold. Gibson Bold is just a really big, bold typeface. And I just think it works really well for that. And then over here on the home page, you can see that I'm kind of using that same, same style here big and bold and chunky, but this one's more of a quote directly from this could probably be a little bit better but these are older projects I'm not gonna change anything right now. And then I'm doing the same thing again with background color, avatar, and then adding the name and the title in a smaller kind of lockup. And I wanted these to kind of break the format a little bit. I thought it would be fun to add since we had so many tiles going on in the website, I wanted to break the format a little bit and have these avatars kind of offset. And the floating tiles with the kind of the background pattern that they already had felt like it just kind of provided a nice, fun, fresh look to it. Alright, so let's take a look inside our Figma really quick to see how a few different examples of what you can do to type and interface to give it that call out feel. Alright, so we're gonna look at size, case, style or color and then locking things up and then breaking the format. So first of all, I've got this block of copy here. I'm gonna go ahead and make the whole thing black, because in another lesson made these red, so you could see the 45th and 75th character. Let's go ahead and click that, okay. So I'm just going to snag some of this out of here I'm gonna cut and then I'll just kind of make that spaced out a little bit. Sometimes it's actually easier to work with multiple blocks of copy versus one, because you can kind of get yourself confused when you're dealing with multiple weights and styles and things like that inside of one block of copy. So let me delete this out of here, okay. So we've got two of the same blocks of copy and then now I'm just gonna paste this one in here as well. Just so it's on its own thing. So like if I wanted to change any of these. I could just click on it versus getting in here and having to highlight and move stuff around. That's just kind of a pain. So whenever I'm dealing with lots of text, I like to isolate it so I can get it going here. Alright, so first let's just play with changing the size. So this is a set of 18 already. I'm using Georgia serif font. So let's just bump it up to like 32. And our line height is gonna be too high when we do that, we don't want it to be so crazy high because then it feels like it's just kind of not as nice. Put that at 130. And then I mean honestly like even this. Even this by itself is a pretty nice little call out, but if we wanted to make it, you know, even more of a call out, we could break the format a little bit, which I'm skipping ahead to number five, but that's one way to do it, it's just by size. Size and the negative space around. You might wanna put that at like a nice evenly spaced kind of thing there, but that's it right there size. You could even go bigger see what it's like. If you go bigger, you might wanna reduce your line height each time. So you can just kind of do some experiments. Alright, next case, just changing the case. So if we go here to the more options you can change the case to upper, lower or title case. Lower case and title case are not really gonna work that well for a block quote. So I would just recommend going with sentence case or upper case can be kind of cool. And remember on uppercase you can get pretty tight with your let in. That's actually kind of looking cool with the way the serifs play off of each other. Maybe hard to read but if you were, you could potentially use this as, you know like a theme of your, well you actually might have to have all caps for that to work, but that could actually be like some kind of text treatment, some kind of stylistic texture you meant that is like unique to the way that you handle titles. But again it would have to make sense for the context for what you're doing. I don't know, you know, if it would work well or not until you kind of try it and it makes sense, but that would be changing case. I mean you could go really tight or you could go a little bit more open and that's another way to just call out that text. Just make sure that you're paying attention to the line height and you're not going too crazy. And you wanna make sure that you have your spacing around pretty nice. You wouldn't want it to be like all up on each other. And another thing along with size, you could even go smaller and go like narrow in the width because you're using a smaller font and that would give more negative space over here. And that could be another way or you could even try right aligning. That's kind of cool like that. Okay, style or color. So style would mean you know, like let's change it bold or let's change it to italics and let's go back to regular case. Certain fonts are gonna have better italics than others. Georgia in particular has a really nice italics compared to just slanting the letters. It's basically all new letter forms. So this will you know, the font that you choose will impact your ability to have options to do these call-outs. So that's pretty nice. I mean that Georgia italic to me just kind of looks really good. I like that, bring this back down here you know, and if we wanted to kind of call out within the call out. You know, that's starting to look pretty nice. And again, you know, you're not limited to only changing this. You're kind of manipulating it altogether. So as you have this nice big, maybe we go a little bit, maybe we got 32 right here and maybe this goes down to 16 and then maybe we go up to 175 and just kind of play with that. And then there's absolutely nothing wrong with just grabbing this and duplicating. Do you have something that you kinda like just leave it there, duplicate it, and then make some more changes because if you change the same thing over and over and over, you're gonna end up with only one option to look at, even though you've spent like 30 minutes fiddling with it the whole time. So make sure that if you're making things and you kind of like it that you're gonna leave, you know, make some duplications so you can see the difference between the things that you're working on. Alright, so maybe we wanna lock up these quotation marks. So let me paste in this quotation mark, and let's make it like 120. And you know, we could... We can honestly just stick it onto the edge maybe it's breaking out like that, maybe this comes in and this is broken here. It's really just about moving things around until you like the way it looks. And if we're using a grid, you know, you can play with the grid a little bit more. This is kinda of more like what I had on the AIUX. So maybe that's like 20% opacity or maybe 10% or you know, you can even make that slightly different color, opacity, try different percentages just hitting the two, three, four key to give it 30%, 40% opacity. And if you didn't wanna go with the traditional, traditional kind of quotation mark, maybe you draw a little tiny rectangle and you give it you know, like your block quote kind of format there. So that's one pixel two, three, four. That's another nice, that's a pretty nice way. Like a little sliver of red just enough to give it that look, maybe especially if red was like your accent color for the rest of your website. That's actually kind of nice right there. So let me make sure this is spaced out 32 there and let's do 32 on the top as well. Let me bring that down. But you know, we use all of the elements together, look at the title versus the block quotes and look at all of it together. Maybe your title has end up becoming bold italic titles because it just looks nice with the rest and maybe not, you know, just go back and forth and have two different options if you wanna see it. Just trying to give that some more breathing room. I like to kind of zoom out and then zoom back in to a hundred percent and then just kind of check it all out. So you can imagine like if we had a little logo up here and maybe we do these all caps do like quick little sample navigation, let's do that. Let's go down to like, let's say 12 might be a little small, but let's try it. 32 let's do about blob I'm meant say blog. Contact and let's just say work. Alright, so we're gonna tidy these up by zooming in and clicking that button. And I'm gonna space these out to be like 40, maybe work should be before blog and contact so I can just grab this purple dot, bring it over there, group it. Let's bring it up here, group all that. There we go. Line this up a bit. So I'm just messing around here. We're talking about call-outs, but just very, very quickly with Georgia, this negative space and this little like red logo thing, whatever it is that I just made, you know, that's the beginning of something that kind of works nicely and it's kind of started would this red sliver and making this block quote every now and then you'll kind of stumble upon something that just like, oh I like the way that looks. And then you just try to expand that more and more. And a lot of times it might start with something like a call out. And lastly you know, you've seen this, but if we broke the mold on the call out like that, that could be another way to do it. And if you really wanted to go all out and actually, you know, before I do all that, let me duplicate this. So I don't lose what I really liked already. Let's make the text white and let's put this guy in the back. That is not as nice, but it does have a lot more it's pretty bold. See what this contrast is on this red and white. So it's almost double A I mean it's fine if it's that big and it's passing double A large, but you know something like this could work better if there was more like if we had you know, sign up for a newsletter or something like that. It's an another way to call out. Maybe it's you know, you've got some form fields and a white button or something. Add a little quick call out for some kind of newsletter sign up. Maybe this should be bold italic, maybe bumped that up a bit, maybe that's email and not all caps 'cause you don't typically type your email in all caps, unless that was gonna be like a little label or something that floated, but we'll do almost typed that in in all caps, email. So anyway, you might expect this block to maybe even be on the bottom of something like this. This is 520 wide so let's make this module 520 wide as well, just to make it a little bit better. So very, very simple, you know, and you could at this point you might make a copy and grab all of these red colors and try it with something else. Maybe you really love blue or you know, green. I'm not sure you could try any number of colors and it could potentially work. A couple of ways to pull out quotes, to call out kind of like larger components. And all of it is going to kind of go back to doing these five things. You're gonna change the size, you're gonna change the case, style or color, you're gonna lock it up with other elements. And you're gonna oftentimes break the format. For your homework assignment. I want you to design a call out, highlighting a specific sentence within a longer form article, just like we did. So you can use those documents as a starting point and use your own typeface or your own article text. And if it's something of personal interest to you, it might be a little bit more fun, it might be a little bit more enjoyable for you to know what to accentuate. You could pick something from Wikipedia or something like that. It doesn't really matter. Pick one or two sentences to try to call out and then try multiple variations the same way that we just did and you know, make some changes until it feels right, and then duplicate it and then try something completely different. I want you to do that like two or three times for that particular exercise. And then secondly, I want you to make sure that you design another call out, which is specifically like has an avatar and it maybe aligned with a logo and a title, maybe design two or three of those together. Kind of like those AIUX examples, but try to you know, play around with small avatar, big avatar, try different lockups to call out that information. And then when you're done, you can kind of put those, the two exercises together. So you have a article of copy and then you have your text call-outs, and then maybe your pull quote call-outs with the avatar and the quotations,. You want to you know, try one where you're changing nothing but the font, weight and the size. You might wanna try another one where they are alternating between all caps and title case, try one with typography differences using only negative space as your divider. So you saw like in my example I'm using negative space, try some with a border and then try some with negative space and see which ones you like. And then lastly try one with more elements like backgrounds, or even like big drop shadows, you know my example was pretty formal, but you could make it super friendly, rounded edges, big drop shadows, just try a couple of different versions, post them in Slack and let's get some feedback on those. And if you've come up with something that you really like post them on Dribble and put your work out there, can't wait to see what you come up with.


=== FILE: 2-07 definitions.txt ===
------------------------------
﻿- When you read a legal document pertaining to an agreement between two parties, typically you'll find language like this. "This statement of work number one, SOW is dated today's date, effective date, "by and between Awesome Client LLC "and studio MDS, LLC, "and is executed in accordance with "and subject to the terms and conditions of the parties. "Today's date, Master Services Agreement, MSA, Agreement." Now at first glance, this might seem like overkill to have additional descriptions like this and parentheses like MDS, the service provider. But this is in fact the clearest way to describe certain words that are used in the contract so that it's extremely clear that everyone reading it knows the exact words of the language that's used in the entire document. So the entire purpose of definitions in a legal document or even language for that matter is for clarity's sake. We have to mutually agree on the definition of a word before we can agree on any concept that that word might be used to describe. Therefore, it is also imperative that we define our text styles, font choice, size, weight, style, treatment, all of those things need their own definitions. So as designers, we have the power to assign and define any textile or treatment however we'd like. But one of the worst things that we could do for our topography and our designs is just to mindlessly throw around styles and sizes and treatments without regard for their systematic impact. So let's take a look at style definitions in action. So first of all, we're going to take a look at a very meta example here where I have screen shotted, screenshot, screenshotted, screenshot. I have taken his screenshot of Figma, the dashboard and the properties panel and I've just put it in here. We're looking at the particular instances for when these particular text styles will be used. For example, this title right here is the biggest on the screen. And it looks like that is particularly reserved for the project title. So if I change to any of these others, oh wait, that's not actually Figma. If I go back, go to Shift+Nudge, and I changed to these others, you can see that is the biggest title. Now there is this as well but they want to show a list of contributors, which I don't have a lot of contributors on these. You can see here's Sam and I on here. You can add a description. So that's like your home base description area. So this particular title is the biggest one they use on the entire app and it's reserved for a titling this sidebar. Even this one it's slightly bigger, but this is more referring to all of the inside of it. Whereas this is the actual project name, this is more referring to all of these individual things. So back on our actual document here. You can see there's not a lot going on. If I extract all of the sizes and the definitions that are being used here, you end up with these five different use cases. Now this does start to violate the rule of four, but only by one. And I think it's okay because there's a very specific use case for that. This one is 14 here, this one's 13 and that one's 12 right there. So they're all serving a slightly different purpose and they're titling different sections. So I'm gonna let them slide with it there, okay? And really the way that I did that was just adding these text layers right on top. So if I actually hide this image, you can see I've just typed in all the individual pieces. And I'm just like, okay, that's 11 regular, that's 11 semi bold. So just a very simple definition right here would be, okay if there's a section for a team, for example, this is my team MDS, it's gonna be 11 point semi bold, and this is gonna be 11 point regular. So that is the definition for that section. And it might be for a team, but it actually might be for the component. Because if you look over here on the properties panel, if I hide that, you can see the exact same section definitions being used. So we've got 11 point semi bold, 11 point regular. So every one of these text fields, text paths, or whatever you wanna call it, every one of these are 11 points. And the ones that are titling a section are semi bold and the ones that are interactive, they are regular. So this is very, very, very minimal. There's not a lot going on here. And it is a design application after all, it's a desktop application and applications are gonna tend to be a little bit more restrained with their text style usage. So if you look back that is enough to get away with what they need to get away with. Now, if you look at figma.com, the marketing site, if you're not logged in, you're gonna have a lot more variety. Now, if you look at their marketing website, you're gonna see a lot more styles and sizes, and there's a lot more variety that you can put into a marketing site and that's for good reason. They've got these big call-outs, they've got the little combined call-out features here with the avatars, lots of different colors, but you're not gonna find that inside of an actual application. It would just be too overwhelming to use. So they are defining their text styles on their website, it's just slightly different. So they're using much larger type sizes, but it is very consistent. So it's like every second, every header or H2 tag, or whatever that ends up being, is gonna be that style, that width, and then all of their paragraphs and their calls to action are gonna be a certain style, a certain size. So you have a lot more flexibility on websites and marketing material than you do on actual interface design for an application. But again, I just wanna point out it's very, very simple. If you're designing apps that are intended for some type of utility, you can scale down your variety and you can get away with using very simple, very restrained headings. The subtle change between semi bold and regular, that's just enough to separate it. So now we're gonna take a look at a design system component overview that I designed in conjunction with a super-friendly team a couple of years ago. This was called Unity, the design system for the internal ExxonMobil team. And just zooming in here, this large title here, that is going to be reserved for headings that are the main heading H1's. And then our navigation item, they're gonna be this certain size. And then the global header, it's gonna be scaled down a little bit. And it's not to say that you can't use these particular sizes anywhere else, but it is saying, I am defining this navigation item as 14 point font, and these are gonna be 12 point font, and this is gonna be 32 point font. And the navigation item, even though it might have that particular style and that definition, it's okay to use it somewhere else, but we're just not putting it on red background and white copy when it's just supposed to be paragraph copy. But it is very specifically defined. It's not just a haphazard usage of like, oh, let's use 15 points over here in navigation item, oh, it can be 15 or 16, whatever you wanna do. It's just once you've designed something and you've explored some possibilities, then you say, okay, now I can make some clear decisions about what this should actually be. So another example here is on these little gray background headers. We came up with this style for, they have tons of tables and tons of data that they're dealing with and we wanted a style that was defined as this is the table header, the editable table header. So we're defining this gray background as the control panel for the header. There's not many other places that we're using that gray background unless it's a rollover element here. And some of these more generic styles have gray backgrounds, but you can see even here, this gray background here, is like the toolbar for that editing and adding section. Just scrolling through here. We are using the gray background in this footer example. Just because you define it in one area doesn't mean that it's completely off limits everywhere else. But this particular instance, it wouldn't make sense to have these table headings and other items, like a big parent group name with the exact same style. So we've got this gray background, and anytime you can add or edit or filter or sort, it's gonna have that background. And so it's defined as a style. And I know that's not necessarily typography in itself, but the background is supporting the topography on top of it. The same way that the light gray button shape and those hard edge darker gray borders on that button supports the topography inside of it. And we're also saying, okay, any action button is gonna have this ExxonMobil blue. And that defines, it's the same exact size for the label, but we're defining it to be an interactive button by the color change versus the label only, which is gonna be dark. So just that simple change from dark gray to color can indicate action. And we could have done something other than color. We could have used font weight, and we could have had maybe option one could have been dark gray as well, and maybe the sort by was bold, or maybe you tried the other bolt and the other regular. And as long as you have some type of definition to differentiate the interactive elements from the non-interactive elements, you're going to just start thinking about, okay, I'm saying here that blue is an active color. So where else on the components am I gonna use that exact same blue for links? And other suggested interactive elements, like this big call to action for the search bar. And then for more of a primary action, we have the full blue background with the white reversed out text. So we're defining that color blue as interactive. So we wouldn't wanna have a big blue headline somewhere because we're saying blue means interactive. Now on the flip side, we do have a big blue header here, but it's not the typeface itself. We're using the color in a slightly different way. So a lot of these are rules and we're defining things, but it doesn't mean that it's completely off limits for somewhere else. So for this example, we do have buttons that have this blue gradient, but it's also okay to use that as a background on the header, because we also have interactive elements on this entire big thing. So it's not like we're completely doing the reverse. It's just a slightly different use case. It's like the cousin of the original definition. Another example here in this stepper, if there's a long wizard stepping form. There's the default style for these buttons, there is the active state that you are actually on, and then there are the inactive, to be determined steps that you haven't gotten to yet. So this shows the past, this shows the present, and this shows the future. And you'll notice this is all the same type size. One, two, three, four, five, six. You could change it more, but you don't often need to because you can just change the color or just changing one element oftentimes there's plenty of change. For example, step four here is bolded, and the four here is bolded, even though it's reversed out. It's not to say that you have to do exactly this for everything, but it's just pointing out that these subtle changes have an inherent value and meaning when you put it on there. And so in the back of your mind, while you're designing these things, it's helpful to think to yourself, okay, black background means active. So where else might I use black background as active? This 12 point font is more of a label and where else might I use that exact same style as a label? And you don't have to define these right as you begin designing, but it is helpful just to start taking mental inventory. Once you've designed something, then you can abstract out those choices that you made, and then you can use that as a lens to view your future designs to see if there's any holes in the definitions that you've made, or are there opportunities to apply that or extend it for other designs. And a lot of times you might have to design four screens before you get a picture of all of the definitions and the styles for how you wanna use it. It's not something that you have to lock in right away. You'll see a lot of times people will try to define four or five text styles and colors and then use them to design. I find that to be quite restrictive. I like to design and move things around and let the definitions expose themselves as I'm moving things around. Then take it back out abstract it a bit, and then I can apply that to new objects in future screens. Okay, so the next example I wanna show you of text style definitions is an app that I worked on for GoDaddy called SmartLine. And if you look here, I've got just a bird's eye view of all of these screens. I actually designed all of this in Framer, but I made an overview section inside of Figma. So let's just take a look at the onboarding here for a second. And I do wanna take a quick opportunity to show you this fun animation that I made inside of Envision Studio. I'm not covering a lot of Envision Studio 'cause I did make an entire course on that called switchestudio.com that is free to go check out if you wanna really check it out. But I just thought this was fun. They provided these elements for the brand, but I was able to chop them up and use them in an intro animation. But the first thing I wanna point out here is we're using the good old rule of four on our type sizes here. We've got our bold font in a large size. We've got our secondary size here for the subtitle, and we've got our third size as these call to actions, and then we've got our fourth size, which is this helper text. So these are right at 16 points. This is right at 14, this helper text, and then the subtitle, I believe that is set at 20 points, and then this one's probably at like 32 or something like that. So if we look back at the onboarding section, I wanna point out here that I am using this same subtitle text as a description for all of the onboarding screens. So this as a second line of your business call, text, voicemail and more. Well, there's quite a rigorous onboarding process. All of these are the onboarding screens. And so it's pretty important that we have helper text to help the user along. And I tried a lot of different variations here, but I had the initial helper text was just a small 14 point font. But it just felt like it needed more impact. So for this onboarding, I wanted to take that subtitle text and use it as the larger helper text, because this was an unfamiliar process for a lot of people and it warranted a little bit larger of a voice, a little bit louder of a voice, whereas the smaller, like try it free for one month, that's more of a quiet voice. And oftentimes the larger text means louder visually speaking. So I'm carrying that over, searching the US area code, and it's not quite the same size as the titles here. I just wanna point that out. And then we're introducing some controls. But now we get into, okay, small helper tags, like, by the way, this is the number that you chose, but let's get your account set up. It only takes a minute. And then you've got this huge input field that would dynamically size based on their input. but I'm just pointing out the fact that I have defined that particular placement and center alignment and size as the helper text. And so I did try lots and lots of variations, and there were lots of explorations that I'm not showing here, but at the end of the day, I did choose that and it felt like it made the most sense when we ran this through some user tests and things like that. It was a lot easier for people to understand. So just scrolling through, you can see that now, even once you have everything set up, you have your information to review, and then you have your dropped off on the last screen before you have to commit to starting your free trial or not. And even after you've started your free trial, this is post paywall, we still need you to do a few more things like set up your contact, set up your voicemail and things like that. So I'm just reusing this style over and over. And it would be very, very odd to use different size text for this one definition. Same with the helper text on the top and the bottom and these call to actions. Once I've defined those styles, those really just three or four styles, I'm going to exploit them over and over and over. And it's not because you're lazy and you don't wanna design extra things because when you're designing an application, you want things to be consistent, and not just for consistency sake, you want it to be consistent because you want it to be predictable for the person who's using it. So if you see the same text over and over the same size, that's gonna be like, okay, this tells me what to do. Okay, this tells me where to press. Someone's gonna understand that a little bit more because it is consistent, and it ends up being a Pavlovian type experience. When you hear the bell ring, the dogs start to drool and they get ready to eat the food. That's a weird metaphor, but that's honestly what it is. Once you do something over and over, it becomes a little bit more memorable and easy to use and easy to understand. Okay, for homework, we are going to design a little mini, like restaurant menu module here, and we're gonna do it in two different content formats, but using the same text style system. So let me just give you a quick demo here. I'm going to hit the F key and go to, I wanna go to a dribble shot HD, 'cause I'll just make a module out of this. And what we're gonna do is define a title and a subtitle, some body copy, and a call to action and maybe even a link. All right, so it's not that common where I define these upfront. Like I said earlier in the video, I don't often design these upfront, but I'm doing it this way just to show my thinking behind it. So I might do, let's say 20 for semi bold. And we're gonna actually look down below for the information on what you need to include in this. I'm just gonna paste in my description here just so I'll have a quick little reference. Control+Command+Shift+Four will copy that to your clipboard that way it's a little bit easier for you to... If you wanna do the same thing, feel free. Sometimes it's easier than jumping back and forth. So I'm gonna have a title, a subtitle, and let's go ahead and maybe we'll make this 16 text. Why don't we do 16 as well? And maybe our subtitle is like a grayish color. And then our link. You can actually hit Command+Option+C on your text or your object and hit Command+Option+V to paste the same style. And I'm just gonna go with a blue for the link and then for a call to action, I might do 14, and go bold because this is gonna be like on a button background and let's make the button blue and the link white. Whoops, come back over here. All right. View at a hundred percent so we don't get too lost. And I might want around these corners just a little bit for fun. So I'm gonna do maybe 12 margin on the side. I'll make that a slightly different color so you can see that better. It's not that much better, but I'm gonna do eight on the side and let's say 16, eight on the top 16 on the sides. So we'll do minus three right here, and let's bring that in. So there's my button. I know that currently Figma has said on social media that they're planning on adding the automatic expansion. Like when you type text, it will change the size. But it's not active just yet, so we're gonna have to do it the old fashioned way here. Okay, so the last thing I'm gonna do here is go to the Unsplash. Let's go to here, let's go to plugins and let's browse all Plugins. And we're gonna grab this Unsplash plugin. I thought I already had it installed, but that's how you install it. Now we will go to Plugins, Unsplash and we're gonna search for a hamburger. That one looks pretty good. Insert one image. That is a big hamburger. Let's make that a lot smaller. Okay, so I've got all of my little things here. So according to my homework, I'm going to go ahead and go here right beside text and I'm going to create a new style. I'm just gonna call this Title. I'm gonna click this one, create a new style, click the plus icon, we'll call it Subtitle. Click this one, boom, plus body. Click that text style plus and we're gonna call that Link. And then for this one, I'm gonna hit Command+Option+K to change that into a component. If you have not set up your quick keys yet, you can just, let's see, right click and hit Create Component. All right, so now we have all of our stuff. Now we can continue to lay out this stuff, put in the copy. Maybe we make a background module and maybe that's why it's got a drop shadow. Whatever you wanna do to create a fun little module. If you wanna change this, you can always click here and go to the settings icon and change it to 40 points. That way, if you get ready to duplicate this and you wanna do a couple of different versions. And now if I wanna change that back to like 32 or something, I can do that, and then the other one over here is gonna change as well. So I can work with different content. And change one or the other, and it's still gonna work out. So if I've got a 24 both of them are gonna change. Now again, if you don't want to define your text styles upfront, that's totally understandable. I typically don't define them upfront. I usually design one thing first, then abstract it into those text styles before duplicating the content. But if you find yourself duplicating things more than once or twice, usually you need to go back, set up some styles, even if they're temporary, because they might change. You're gonna be changing these all the time. But the main idea here is that we're gonna set up the styles and we are gonna get a feel for, when should we set up a style and when should we maybe experiment a little bit more. So it's not a onetime event, it's definitely a continual process. So even though you've assigned a definition to a particular style, you might find that as other design problems arise, especially in projects where you expand on that, that you might need to go back and revisit it. So keep in mind that there's scenarios also where you might wanna extend the style. So just because you've set a definition, doesn't mean it's got to be only that. Sometimes your active CTA color, that indicates primary action, could also be the active state in your Tab bar. So it's not mutually exclusive, but it's just something that you really need to keep in mind is that you're defining interactions by the way that you style your text and the way that you use certain colors. Let's dig into this homework and post your work in progress to Slack if you want to. Post your final pieces into the Slack group. And just get some feedback and let's see what we can come up with and let's get started.


=== FILE: 2-08_1 interactive text.txt ===
------------------------------
﻿- A user needs to know what's clickable and what's not, what's tappable and what's not. And the way to signify what is and what isn't clickable is with interactive text. That can be links, actions, buttons, input fields, really anything that you can start manipulating with, something that's not read-only, something that can be changed I would consider interactive text. And the meaning of your interactive text, that's gonna typically vary from project to project. But as long as you have interactive text, you're gonna let people know that hey, you can interact with this. So let's take a look at some examples. All right, first thing I've got here is the super-friendly design Dot Systems website. And we're just gonna take a look at basically a black and white layout here with a little bit of color to indicate navigation. Now that's probably the simplest form of link color on the internet aside from maybe Google. But in any case, we've got these navigation items, and it clearly has a rollover effect and some active links going on. Nothing too crazy groundbreaking here, but it worth to note that these, this navigation up here doesn't necessarily look like a clickable body of text. Just because it's black, it doesn't necessarily mean that it's clickable because they actually look, the actual visual style is the same as some of the body copy. But because it's simply at the top and there's a row of items, we've become accustom to that pattern enough to know that that means clickable text. Up at the top, that's gonna be a navigation regardless of what it looks like or not. So you kinda get some passes with certain components and certain elements because it's been around for so long. It's just kinda inherited that meaning. So even though we have these nice blue line effects, if we were to put lines under all of these, it wouldn't be as nice and clean 'cause you got this nice big block of negative space and it just kinda has like a nice, clean look. So these are just a simple navigation example. And if you scroll down, you have the actual link styles which are underlined with blue. So it's more of a box shadow that's probably animating versus a border. And then the same kinda styles here. So kind of a nice simple navigation style and then the same thing down here. Okay, so that's just a quick look at interactive navigation, some navigation elements. What about an application that's not a website or a marketing site? Let's take a look at Instagram change password website webpage. So you can see here all of these links are actually, they don't really look like links. But again, because they're in the sidebar, and they're in a row, we kinda know that they're gonna be links. And you have the bolded font here to let it know that it's active. This is a screenshot or otherwise I would hover over that. And then for here, we have forgot password, which is gonna link to another page. So this is treated slightly differently because it's kind of going somewhere else versus links in this section. These are more like, they're almost like tabs. Even though they're not necessarily designed as tab elements, that's essentially what they are, so just changing this view over here. So they're interactive based on their position and some of the active state versus adding a huge amount of color or adding a big giant tab around it. Whereas if you were to just put black text here, it's not really gonna do the same, even though we are defining black text over here as interactive, it would be out of context right here, and it would almost seem like just readable text. So they're bringing in that primary kinda blue color, which is reversed out for the change password, a big call to action. And so we've got one interactive text, two interactive texts right in here, and then down here, it might be a little hard to see, but it's like a dark blue. It's like kinda the Instagram brand color. So there's three different interactive text colors here and that doesn't even necessarily include the interactive text inside the input field, which would be another one. And it's interactive because there's a field around it. It makes more sense. But it's only interactive because it has that border and that background. Otherwise it would just feel like a label. So there's different little tweaks you can make in different context to make things feel interactive depending on what the component is. All right, looking right here at the Medium.com settings. This is another example of just kinda a black and white setup here. And same thing. There's a bunch of links here on the left that if it was in a paragraph format, you might not necessarily think to click on that because these are actually lighter in color than the body copy. But they are larger so that helps a little bit. And the active is bold. And actually that's not the active. That is the title for this navigation. But yeah, so all of these are, all these are interactive because they're in a sidebar. So you don't really necessarily have to go crazy with your sidebar elements as opposed to hyperlinks where you would need to have an underline or color kind of differentiate them. So down here you can see where they have deactivate account and delete account. In most applications you would see this as like a red color because it's more of like a danger zone kind of area. But since this is Medium, I guess they're wanting to stick with that kinda nice newspapery feel, they've decided to go with this light gray, deactivate, delete account. And then some of their other ones are you know, light gray with that border around them to let you know there's more of an action associated with it versus kind of a link to another webpage. And in this example on github.com, this is if you go into a repository settings. This is where I have the beta webpage hosted. They have a sidebar that is, it's very apparent that you can click on these because they're blue. They have a hover state. It's a lot more, there's a lot more of an affordance that you can actually click on these. In terms of accessibility, this is a lot more usable. Someone else might get confused with just a black and white sidebar. So these are some things that you have to keep in mind when you're designing what audience you're designing for and what level of accessibility do you wanna hit. And if you look at these buttons, these are other examples of interactive text, but it's extremely interactive because it's got the border around it. It's got a gradient. It's got a color. It's got a border, and they're bolded fonts. They're a little bit larger. So you can tell that it's interactive because just because it's got a background color. It looks like a button. But down here I do wanna point out, they make their destructive actions, which are also interactive. They're using the same button style by just making the text red because they wanna make sure that you know that this is the danger zone. Depending on the context for which they are presenting the button, they're gonna use a slightly different style. They want you to upgrade right here to enable certain things. For the issues or the sponsorships, they made this very called out so you can get set up with that. And then down here they also have another upgrade now, call out. But then down here it's very different because you know if I click this, it's going to delete the repository. And actually, it's not going to. They give you a, are you absolutely sure? Unexpected bad things will happen if you don't read this. This cannot be undone. So you actually have to type in the name of the repository and click this to actually delete it. And again, it's the same interactive color, that red with the red background. Those subtle changes make you know that this is, something very specific is about to happen. And they're doing that with red color. And if you were completely colorblind, this would work as well because you know, it's gonna be a dark contrast, and you can still read the text. It is worth noting though with links specifically, there are some guidelines for the web content and accessibility guidelines. So they say that use of color is not used as the only visual means of conveying information. Indicating an action, prompting a response or distinguishing a visual element. All right, so now I wanna pull up another example. This is from an old client project of mine called Rivalry. And if you look right here, you can see that there's kind of a rainbow of colors going on. And the way this app would work is, it's kinda simple, almost dumb in a way. And the people who made this would also admit that. But you basically pick your, you pick your college football team that you are a fan of. And you then heckle your most rivaled teams with your friends. And so basically any time you click one of these buttons, it sends a Push notification to your friend that has your call. So if I had a friend who was a Florida Gator, I could send, go dogs, to him or her and she could send go gators back to me and then it would keep score as you can see on here. Very simple, kind of a playful like notification-based app. But the one thing I wanna do is point out the interactivity in this app. So first of all, pick your team, it's black. So it's kind of the standard position for a heading. And then log in. I mean blue is gonna be a go-to color for interactive text and honestly, even if that was black, I think the position alone in the top right and because it's surrounded over there, it would still be enough to know that you could log in. But the blue definitely kinda helps it out. All of these other ones are just simply based on the college team. So it's kind of a very simple and kind of a oversimplified layout with just huge text. And then another kind of fun thing that would happen would be like whatever team you chose, your team's colors would then become the title bar color. A way to make sure that the interactive text on those title bars was truly interactive, I made it so the actual primary color would show up as that interactive color and then bring in that secondary college football team color behind it. So for example, if you were to choose Army, your text would end up looking like, the secondary color would be like that, and your primary color would look like that, even if your background was completely a different color. So that would be kind of like how that would work. Primary and secondary. So there's subtle things that you can do to kinda make sure that primary text or secondary text that actually it stays looking interactive. And one of the surefire ways to do that is gonna be put a border around it with a reversed out color. It doesn't matter if you're using dynamic color or some other examples of just using kind of a lighter color, which I'll show in just a minute. But just something that kinda sets it apart from something else, that make sure that it looks interactive. And you can see like down here, this text right here is intentionally kinda gray and not interactive-looking because I want it to just be more read-only kinda text. So you're not gonna get confused necessarily. Now this might be a place where I bend the rules a little bit because I'm highlighting the label as blue when you're typing in it. And it might be better to make it white as the highlight, but I wanted, even though we don't really have that much usage of the color blue other than maybe like forgot password, and also on the login or change your team, you could cancel. When we're not currently in a team, we're using that blue as the interactive text color. So technically if our blue text is interactive, that would mean that this is interactive, but it's actually not. So there's places where you can bend the rules a little bit when it comes to interactivity, but you do wanna be mindful if you're bending that too far. Because if I started making a lot of things blue, then you would start to diminish the value of that color as an interactive color. All right, so next I wanna look at this app for 12 Stone. They have a really big database of people that exists already in their system. So they wanted to be able to, if someone had signed up at a certain even, and someone had given their information at a service, and then they were signing up again on this app, they wanted a way to reconcile those multiple accounts. And they had some backend systems that would monitor those people and just try to reconcile that. So I wanted to show a visual way that someone can kinda help that process along. So this is what we came up with. Sorry, so this guy Douglas, is signing up and we have this kind of burgundy-red as our primary color. And that's one, you know, one pretty easy way to make sure your text looks interactive is to pick a primary color, and anything you can tap on or click, it's that color. And that's kind of what we're doing here. Even though we do have these secondary actions that are tappable as well, but they're not so primary. So picking a primary and secondary color for your text, we'll dive way more deeply in our color lessons. But it's just a great way to just start off with a primary and a secondary. And let it be different than your regular readable, read-only text. So we've got our burgundy text. We're gonna sign up. We're gonna either put in our phone number or skip. And it is worth mentioning that it's kind of a bad form to ask for a phone number without telling the person why that number is being asked for. So right here we're just say, if you're already in the system, providing your phone number will help keep your info in sync. So this is a way that we can kinda match you up. So if you do enter it, it's like oh, I wanna know if I'm already in the system too. So maybe that's more encouragement to get in there. But it doesn't look like interactive text. Our interactive area is right in here where we're asking for the phone number. And we're gonna go ahead and pull up that number pad by default as well, so it's a little bit more intuitive. So they enter their number, and then we say, okay, is this you? Now, this text is really read-only. So it's not necessarily interactive. But this module is interactive. So this is kinda one of those gray areas again where it's like okay, it's technically interactive because you can tap on it and select it. But at the same time, it is read-only as well. So we're not gonna make it read as our primary color and we're not gonna make it kinda toned down to our secondary color. So it's gonna stay as the read-only color. But we're introducing a little ring around the avatar, and that's gonna be kind of like a souped up checkbox as opposed to just having a square with a check in it, we'll just say okay, if this is selected, then we'll put a red ring around it, which is our primary color. And I can check, okay well this is me, this is me and actually this me too. And then once I have selected that, then I can hit yup, that's me. But you'll notice like if nothing is selected, this is not interactive. So we can subdue this interactivity and make it based off of a previous selection. So only then are we gonna change it the same way that this is gonna change. So right now my primary action is nope, that's not me. But if I start selecting people, now you can't select not me and when we're kinda toggling the interactivity between multiple elements based on that use case. So another thing to keep in mind is just that you're not gonna be able to just design one static thing and that's gonna be it. You're gonna have to keep in mind the scenarios of past, present and future as you design these things, and what different states things can take on, that's gonna change the interactive colors that you're using in the designs. Check out a little bit more of this. We've got interactive text here for editing the picture. But it's not a huge, in-your-face text size. It's a little bit lower. So typically speaking, the larger the impact of the interactive text, the larger and heavier and the most contrast that that particular action needs to have. So if it's a primary action that's save password, it's gonna be a huge button. But in this case, edit profile picture, it doesn't need a huge amount of contrast because it's a very low level interactivity. So we can just simply use the red color but keep it the same size as these little labels here. And that's just enough to let you know that you can edit your profile picture. Okay next I wanna look quickly at this project called Shiplify which has a whole lot of information going on. So these are just a couple of exported screens and this app is a commercial transportation logistics application. This is probably one of the most complicated projects I've worked on. And this was probably five or six years ago, so I can't remember all of the lingo necessarily. But one thing that I do know for sure is that in this app, people are looking for carriers to ship their product from point A to point B. So in this example, the one I really wanna dig into is gonna be this mobile version here so it's a little bit easier to kinda digest and show what's going on. Okay, so we've got point A to point B. This is user input, and they've hit search. And they've also added some filters. I'm not gonna go into all that too much. But you can see here like, there is a lot of stuff going on here. We've got the title of the carrier who is going to send that information. We've got this kind of like code that the entire industry uses for the carriers, almost like airport codes. And then there are specific definitions about what that carrier is able to produce, like truckload, intermodal, those are all things specific to that carrier. And it's all read-only text. All of this is basically read-only. And this price is gonna be the price for the shipment. And it's gonna start in Dothan, Alabama. And there's also gonna be a lot of other terminals. It's gonna make a lot of stops. The goal here is to get someone to click this entire thing because that would mean, I wanna choose this route. But there's a lot of other variables at play here. They might wanna call this particular city to ask them some questions about pickup. And then right here, they might wanna call the destination to ask them some questions about drop off. And there's other information like this is gonna take two days. It's 545 miles. It is a delivery. This is the date when it needs to happen. And this text is definitely not accessible. I'm pretty sure that that's gonna be a failing kinda thing. Like I said, this was done five or six years ago before I was a lot more into accessibility. And you can see that definitely fails with gray on this white. It'd have to be quite a bit darker to pass Double A. I think it's 4.5, yeah. So that had to be a little bit darker. So that was my mistake there. But you know, things happen. That's a simple CSS change. But one thing I wanna point out here is in addition to clicking on this entire thing to select it as the choice for the carrier, we've also got this like show all terminals link. And in retrospect, this should probably be green because it's kind of important. And I want that to be known as a very clickable item. I do think that with it being bold and because it's surrounded by this line and this dot, that it has a lot of implied interactivity to it. It also says show all terminals. But I do think if this was green, it would be maybe a little bit better, especially if that's an important thing to see. But basically, if you tap show all terminals, it will expand and then you can see, okay, this is gonna stop in Louisville. It's gonna stop in Memphis. It's gonna stop in Little Rock. It's also gonna pull up a little map of the actual route. And then you could close that out as well. But it's just another example of an interactive module which has a lot of read-only text, but the module itself, because it's got a border and it's a different color, it looks interactive. And there's also these blue interactive icons for making a phone call. There's also this interactive piece, and all of them do slightly different things, so they have to be styled in a slightly different way. Now not everything you design is gonna be so complex, but there's definitely gonna be times where there are multiple things that someone can do within the same thing. And sometimes it makes sense to put them all in the same style. And other times when they're completely different, like choosing a search result versus showing a few more details, versus making a phone call, those are probably going to be styled a little bit differently just so it will help out the context about design. And last but not least, I wanna show this Smart Line app again. And we talked about this helper text in our previous lesson about kinda textile definitions. But I also wanna point out that this is another example of where I'm just simply using this kinda teal color to show the interactive nature of that button. So I mean, that's basically the primary color for interactivity, whether it's a checkbox active or it is changing a time on when your voicemail goes away. And this is another kind of example. Instead of using an underline, kinda use this kinda subtle background to imply a little bit more interactivity between bigger actions and lower-level actions. So like for example, recording a greeting gets more of kinda that teal background color in addition to the teal action color because you're recording an actual voicemail. So that kinda ends up becoming the secondary action versus this primary action, which has a lot more contrast that's basically dark gray with a white text that just kinda takes you to the next page. Then we're bringing in that same teal background to show you kind of like a version of a message that you might not have read yet. But it's not a full-on action the same way record greeting is. We're reusing that background on top of the read-only text to show you a little bit more of a meaning. So we're kind of slightly putting that like color behind read-only text to give it a slightly different meaning. So your interactive text is going to be defined by the following properties. It's gonna be defined by position, size, color, weight and even the surrounding elements like borders, backgrounds and icons off to the side. All of those things are going to add to whether or not your text looks like it's interactive or not. And remember, as a general rule, the larger the impact of the action, the more drastic the change in color or contrast or weight should be. So if you have those big actions, they're gonna have more contrast. If you have lower-level actions, maybe a little bit less contrast. And I don't always mean, like when I say contrast, it might not be color contrast necessarily. It might be all black and white. But it just has more visual impact. The higher the level the interactivity, the higher of impact, kind of visual impact it should have or probably will end up having. So for homework, I'm gonna get you to design an RSVP form. And I'm actually gonna do a quick little wireframe in Figma that you can kind of go off of. And that'll help me kind of explain what to do. So let's get that pulled up.


=== FILE: 2-08_2 homework.txt ===
------------------------------
﻿- All right so I've taken a screenshot of some of this instructional text here. So what we're gonna do is, we're gonna have a reservation title, and we're gonna have a little bit of subtext that lets people know what's going on. Add one or more people to your party. And each person's email will receive a ticket for the event. So you're gonna have a party lead and you're gonna have their name, email, if they have any dietary restrictions, then you're gonna have additional party members that are going to be invited as well. And then the ability to add another person. So let's get started here with a simple wire frame. So we're going to do make your reservation. And I just started with an iFont 10 or 11 size here, and I'm going to use enter font just because it's open source and everyone will have no problem opening this font, especially if you're using Sigma. All right so I'm going to just go with like a, nothing too fancy here, just gonna kind of wire frame it out. All right so we're going to have, add one or more people to your party and copy and paste that and then I'm going to change that to regular party lady, there's going to be subtitle. So just to change title and subtitle, I'm going to go 20 with my main title, 16 for body copy 16 for my subtitle. And then I'll also have, I'm just going to make myself the party lead. So I'm going to make a circle here for an avatar. And instead of trying to find myself, I'm just going to use this avatar's plugin and pop it in there. And because that just feels weird, not being me, I'm going to change the name with the, there's a name plugin, where is it random name generator, here we go, and then we'll do cris@calzoni.com. There we go. And technically, since this is a wireframe, I mean we could do like a blend mode for that, Where is it? There we go. So we could do luminosity to kind of make it black and white. It could even maybe make that gray more of a kind of wireframe style. And if we wanted to, we could even just make it gray and put an X through it or something like that. There's different ways to kind of do the low-fidelity design, the big ideas that we're just, I'm already fiddling with it too much, do something like right in there, and I'm just going to make a quick little line segment here duplicated, shift H to flip it horizontal. And then I'm going to center that, maybe scale that up a little and kind of give that a lighter gray color. there we go I'll use a white, maybe a two pixels that's a little bit easier to see group that together. Let's group this align them vertically maybe make that like 16 for now. All right so there's our party lead, lets group this as well. I'll play around with the width and kind of tweak this later right now I'm just trying to get it all on the. So there's the party lead I want additional party members and we want their full name, email and actually, if you're just filling this out, you probably wouldn't even have the image. We'll just leave that one for now, assume that you've already signed in and you've got an account. So for the additional party members, maybe they don't have an image. So maybe we know that if you're just filling out people's names and emails, you're not going to magically have an avatar for them. So we will just take their initials, programmatically from the name and put them kind of like that. And I'm going to do another random name or are you Botosh apologies in advance if these websites are weird or inappropriate, I'm not gonna check them a little bit lighter and I'm also going to probably use 16 here. Okay, I'm also going to send her a line that, and then horizontally centered this. Okay, and now we want a dietary restrictions thing. Probably just use this same font for now font size, and I'm going to make a little, maybe like 16 by 16 checkbox here. And let's go just going to make that white with an inner stroke to make that and this is a little bit weird to have this kind of hanging off over here. Want to make sure my alignment is I want to make sure that all of these names are nice and readable. So we want this kind of like readable line that kind of goes right there, even if it's just implied. So dietary restrictions and actually, maybe we'll use the same color for that, but then put a and do our stroke. That's good enough, alright. Dietary restrictions, and then let's do another one that has this kind of blue color. I need to take the luminosity somehow I copied and pasted the style from this thing, and luminosity was still selected. I don't really need luminosity on this now because we're not using that image anymore, so they're back on normal. And I guess while I'm at it, I might as well put this guy's initials here too. Now I could totally make a component of this, but at this point we're not worried about getting all designed system me. And I'm just going to draw a quick little check icon by making a rectangle and then duplicating that and then rotating it and then stretching out a bit, making it white unionize that rotate it. And we've got a check icon, at least a tiny one that will work for now. Eventually you might want to pick out your own icons, but that's a quick way to make your check. So let's give dietary restrictions to Jocelyn, but none to Christopher on that up. Okay, what else here? Add another person, okay. So I'm going to take the same text, maybe even this name text, and we'll do plus add another person and to show that it's interactive, we have both the plus and the blue color. So that kind of just shows us, that you can add someone else. You might decide you don't want these, little avatars and maybe it doesn't make sense right now it does look kind of weird if we're trying to use a form and there's a lot of, different things going on, maybe these, if these are going to be here, maybe they look better on the right or not at all, it's just kind of, play around with it I'm going to take them off for now because I don't really love them. But I do want to, I'm going to indent this a little bit, just to show that these are headings or another option would be to make these even smaller since they're not really that important for these to be huge and big, we'll make these like 12 points and we'll do like a gray and maybe like all caps. So a secondary header that doesn't really need a lot of attention. Maybe we'll do the bare minimum contrast nine, five, nine, five on white. And we're using, we're using 12 point font so technically we need it to be white and then the 75, that should be just slightly over the contrast. Then you could do seven, six, and that would still be accessible. All right, so we'll do 20 points there and 20 points there. All right, so now we're going to also, we need to decide where to put this thing. Should this be a button? Should it be a link? that is for you to decide, its given up space here so we know that these are different things. Kinda say we do like 24 line all this stuff up where they each other. And actually that might be too much, I'm going to make this 40 and see how that goes. Alright, 40 there. So you can kind of decide here, whether or not you want tighter or tighter or more spacious spacing between the title and there, but I like the spacing here, but I think that we need to space this out a little bit more, just so there's a little bit more room to kind of see what's going on. And then our final kind of call to action would be, I'm gonna do a button here that has 40 pixels of margin, and we'll make it this blue color just for now, because this is a wire frame and I'm going to make that white and center it. And we'll give it a little bit of roundedness and we'll call this a actually center line the tags by hitting command option T really quickly save and review. And I'm going to group that. So we have our button. So we have our CTA we have additional party members just clean this up a little bit, and then we've got our party lead and I'm going to go ahead and group that and call it title plus text. And then I'll, I'm gonna rearrange these layer groups by hitting command option down, just so they're in order from top to bottom, you don't have to do that, but sometimes it's a little bit helpful. Okay, so that's a pretty good start, for an additional screen. I want you to design what it would look like if you hit add person. What'd you get a inline, input field for name and email, or would you trigger a full screen, a name, an email with a save button. And then when you hit save that closes down, you can experiment with going either way. Both of them could work, the modal might be a little bit better because it's a lot more focused or you might just have a really good idea for expanding it right in place, and then just hitting save right there in place, and then it popping in, but try to show an additional, in addition to designing that first screen show a design of an input field and a save button for an additional member, I think I should have done input fields. Okay, I messed up. All right, so I think I made a little bit of a mistake. This is more of like a, I should have done input fields here so this is more of like reviewing what it looks like versus having actual information in here already. So I'm going to do something I'm gonna move these out of here. And what I really want to do is create a text field. And I think what I'll do is make this a little smaller, like 48, and then I'm going to copy the same block and I'm going to copy the styling off that check box and paste it onto there, and I don't want it to be that, let's do like a light gray here, And actually I like that better for this too do six on that so let's bring Cristofer name back over here. Let's give that, let's say 16 pixels of padding. So I gotta do a little bit of refactoring here, but that's fine. This is how it goes sometimes you just gotta move things around and this is going to be his email. And so I'm actually going to, for my wireframe purposes, I'm going to make these have a rounded edges on, all of the sides, but not in the middle. So it looks like two things put his email back in there and we don't want our, we don't want our input fields to be different, necessarily the read only version of this could be different but for the actual input fields, we don't really want that to be that different. And now I think it might be nicer if I left aligned all of this stuff together. That way it's a little more scannable. Some people like to put their titles like this, and that's totally fine too. It's more of a personal preference, I kinda like it. I like the label and the text align up in most cases okay, now I'm going to group that, move that, and we'll probably want some labels on here, make these semi bold, Okay. And actually, maybe we'll maybe we'll make these flow labels just so it's so I don't have to do too much out. You're welcome to do top labels outside or little float labels like this. not, not a huge, not a huge deal, kind of however you want to do it. This might be a little bit too tight, 10.5 is really small. But again, this is a wireframe, so I'm not that worried about all the tiny little details. This is really what I want you to kind of figure out while you're doing it. But these are the types of little decisions that I will be making while I'm trying to, lay this stuff out. Okay, so maybe this one has been filled out and there we go. So this one let's switch these again, because that one has been filled out and this one has not. There we go. And then now I might shift that over to be left aligned with that, that way I have this nice implied line of continuation right here to scan across, move that up to ... So there's our wireframe quick little wireframe, make your reservation add one or more people to your party. Each person's email will receive a ticket for the event. So I'm going to put my name, email, dietary restrictions. One thing I forgot was if your guest has dietary restrictions, we will present additional options for them at the event. So let me just quickly pop that in there. You can go pretty small with that. I'll do, I'll do like 13, I guess. Now this doesn't necessarily have to be out here, we could say we could add like a question Mark or something with the blue color, and then that could kind of pop up this little information could pop up on every single time. 'Cause we definitely wouldn't wanna repeat this over and over and over. Or we could put this at the top as more helper texts and maybe we do a center this, no, that's not looking good. Maybe this could divide, this could technically be a, you know what, since this is a party lead module, we could technically put this here and just leave it there. And then that way we've already set it once here so we wouldn't have to keep saying it for every single guest. And you're welcome to kind of come up with a different way to present that information. I'm just going to leave that as is right now. Maybe you want a line to divide this stuff, maybe you don't, maybe this is left align over here, or maybe it's aligned right there, or maybe it center aligned with this button. It's kind of your call to make, especially with your design, you might end up with something different that might warrant a different layout. All right, so that's it. That's your wire frame, so design this screen, this form for this reservation design another screen where you've added three people, bonus points if you show like an aero state or active state with the keyboard showing, and then thirdly show a final screen, that is the review screen that has all of the same information that we put into the field. But now it's like a read only version. So there's no interactivity except for maybe like an edit button that you wanted to go back and edit the step before. So this is kind of like a big crash course and interactive text, so, we're going to use checkboxes input fields, links to add things and calls to action so use this wire frame to get started. This is a bit of a hefty amount of homework, but I think this will be really good to kind of explore and get exposed to some different situations that you may not have before and, post your work post, posts your work in progress, and I'd be happy to check it out, give some feedback so get started and can't wait to see what you come up with.


=== FILE: 2-09 combining text.txt ===
------------------------------
﻿- Combining text with other elements is really starting to get into interface design in general, I mean, there's never really gonna be just a single line of text. There's always gonna be text plus something else. It might be text plus other text or text plus an image, text plus a border, and then times infinity basically for any screen design. So let's just take a look at a handful of examples that explore combining text with other elements, and then we'll dive into kind of a live process of kind of how to balance all of that while looking at the bigger picture and zooming into the details. So let's take a look. So first of all, we're gonna look at stripe.com it's a great example of just really good design. And the thing I wanna point out here is the combination of all of these elements right in here. So we're looking at this little kind of kicker title thing, the big title, paragraph, and then these buttons. And the thing I wanna point out is the two, probably the two most important things when you're combining text elements is the variety. So you've got small, big, medium, and then kind of, you know, medium, large, it's just nice variety. It's not all the same, it's not, you know, it kind of all compliments each other. And the other thing here is going to be the negative space, nice use of negative space. See they've got an even space between this and this, and then maybe half that for right in here. The lighting is nice, that mean to take a screenshot, the lighting is nice and there's just nice variety. So variety and negative space are gonna be the two biggest factors that you want to think about when you're combining multiple texts, multiple texts paths, multiple titles, subtitles, paragraph variety and negative space. Alright, so now we're gonna look at an example from one of my older projects. This is a project called babycents which was a baby the product comparison shopping site. And kind of the same thing I wanna point out here is variety and negative space. So I've got, you know, we've got our four fonts here. We've got one, two, three, actually probably only three, three sizes in this main area. So if you look, I've got 32 points, 14, 14, 14, and 14. This is a Museo Sans or Museo Sans kind of a rounded font that I chose just because this is a baby site and basically when you have a baby, you want every edge to be rounded. So I thought it made sense to have that type of typeface, but again, it's not quite as airy and breathable as the Stripe site. But again, this is an application that's more of an eCommerce application. So we have things a little bit tighter in here, but again, it's variety and negative space. Like look at all the space in here. Even in these tiles here, we have a little bit of variety, we've got the title, the price, the description, but you have to be careful not to use too much variety. You only want, you know, three or four different styles based on the information at hand. And, you know, in these cases, we wanna see the big title for what it actually is. We obviously wanna know what the price is, and since we're a comparison shopping, we wanna know how many stores has this available because the detailed screen would show the different stores that you could purchase the product. But again, I'm just trying to emphasize variety and negative space. All right, back to stripe.com, this is their checkout, kind of their checkout template that you can have access to through Stripe links to all of this down below. But I just want to point out again, variety. We've got the smaller, you know, since this is a checkout page, you're probably more interested in the price as your main kind of largest piece of information versus what the name of the article is. So they've made a decision to make this price a little bit larger, but again, look at the generous use of negative space, lots of space right in here, lots of space in here, and you know, over here. The one critique I have and they changed this a lot, so it could be different by the time you're watching this video. But some of the spacing in here is, it feels like it could use a little bit of work. So if I open up this inspector and I go to this label here, this form field group, what feels tight to me is this space right in here. And, you know, this is just a gut change. It's not necessarily something that I feel like has to absolutely be done. But if we just add four pixels of padding on the bottom of that, and another thing that I like to do, I do appreciate that this is all left aligned, but whenever I'm pairing text with a rounded edge like this, it's kind of similar when you pair a circle to a square, the circle, a lot of times should be a little bit larger because the perceived weight is smaller with a circle if it's exact same size as the square. And we'll get more into that and the layout and alignment sections but I do wanna point that out here, I'm going to move this over to the left four pixels as well. And so now, even though that our text is not aligned, we can still kind of consider this entire thing as a block, as an object and in this particular instance, pay with the card is the parent of email. So I'm fine with moving this in a little bit. A lot of times I might even move this all the way over to be fully left in line with the input field. And again, this is a matter of preference in a lot of cases. Let me go back to, there we go right there. So it looks like they probably have about 12. Yeah, so if we zoom in here, you can see that's what it looks like if our input text is aligned with our labels. But if we zoom out that might feel a little bit too, there might be too much negative space, kind of blobbing in and out through here. It might be too much. So if we leave that at four, you can see just changing it from four pixels to 12 pixels, it's a very small change, very, it kind of makes a big difference when you're paying attention to those little details. When you're applying text with other elements, like how much of a negative space is going to make a difference. And to me, this feels a little bit better. So if I open that up and I go back and forth between these two, four pixels of padding on the bottom of those labels and then four pixels to the left, and you can see it's just a very subtle change. But those little things, paying attention to that at a such a granular level and then you zoom out, it kinda gives it a little bit more of a balance. Okay, another thing I wanna point out, in addition to combining text with things like border radius on input fields, I want to talk just quickly about combining text with little accents, like hash marks or lines, or just something to give it some decoration, whether it is an interactive link or an icon, just something to give it a little more interest to jazz it up a bit, or to make it pop as some people would like to say. And to do that, I wanna look at dribbble.com/rally. Rally Interactive based in Utah, Ben and his team, they are absolute masters at layout and typography and design, and it's always really good to find people that are really nailing it to kind of take inspiration from. So what I wanna do is scroll down here and check out, let's go with this one here, Snowbird Lodging Detail, and just gonna open up one of these attachments and maybe zoom in on this one, this a little bit larger. All right. Scroll down here. Okay, so in both these examples, you can see that Ben is using this like M dash on the end of the title, and it's not really necessarily for any particular important reason other than it just kind of has like a fun little accent. So Relax at The Cliff Spa M dash. And notice also this 01 hanging out way out here. So he's titling these sections with, and it's an accent, but it's also a typography. It's very small and it's got lots of negative space. And it's just something to kind of add a little bit of balance, a little bit more visual interest. This is something that Ben and Rally do a lot. Just find those little details that they can pop in to give things balanced on a little bit more interest. Even these, I know this is a little pixelated, but you can kind of get the feel anyway. These are probably not even links, or actually they might be because this says Book a Room, but he could have just put a list of buttons with, you know, something a little more boring, but he has these little accents kind of off to the left, and when you roll over them, it's very likely that they might kind of hover in. So you can just kind of see that this little M dash, these little kind of matches the style of these arrows, and then going back to this larger one. You can actually, you can see this a little bit better. These arrows, this M dash or actually this is probably not even an M dash. M dash is typically only as long as an actual M character. So he might actually be drawing these little rectangles by hand and popping them in there. So just trying to find those little things that you can add in, like a little hash mark under the title or a little arrow. Sometimes it's easy to overdo those things, but if you wanna kind of bump up your text usage, especially in marketing sites and sometimes even in applications, you can add those little features. As long as it has generous negative space and there's variety, and it's kind of well balanced, it can really add a lot to your designs. All right, so the last example here that I wanna show is this kind of section in here. This is kind of like your feed, where you've got calls and text messages, and a lot of things going on. And this is in framer, which I don't use that often, but it is kind of nice to be able to create little prototypes like this, where you have the native kind of bouncy scrolling and whatnot and you can add little things, but I don't wanna cover all of that just right now. I just wanna mostly point out the text information right here. So we've got our avatar here and this thing is 60 by 60. So if I just do a quick hold of the option key, you can see I'm going 16 pixels from the left edge and then 16 pixels from this title here. And so my title is 18 points, my little timestamp is 14 points, and this thing is 16 points. And the reason those ended up being those sizes, is because the little kind of missed call, answered call and this text message, that's gonna be text that you're gonna read a lot more often. So I wanted that to be just a little bit larger, but it's not quite as important as the title. So as I'm combining this title with this text, I'm using a little bit bolder of a font 18, and then I'm using 16 here. And you can see I've used four points of space between the two, which gives just enough negative space while still kind of balancing against this avatar over here. Now, if I had the avatar by itself and I wanted to just have someone's name, this avatar and this title, if it was on a completely different page, that might not work as well, because it's only the title with this larger avatar. So I might end up wanting to go like 40 by 40 with something like that, if it was only the name. And you could go even smaller, it's just a matter of like what's going on on the page. You kind of have to zoom out and look at every element all together before you can make those smaller details. So it's about zooming out and looking at variety, paying attention to the negative space and making your decisions based on all of the balance, kind of, so it's all about holding each of these elements kind of together in balance and harmony as you make individual decisions. So key takeaways here combining text with other pieces of text, combining tax with other elements. You wanna pay attention to your overall balance at a high level. You can't just make individual decisions and say okay, my title is always need to be 20 point. It's always going to be dependent on other elements and how it can kind of balance out. You're gonna wanna create that balance at a low level, with the tiny, like four pixel padding. Four pixel padding, you know, increments of four pixels or 16 pixels or whatever kind of makes sense for your design. You're gonna wanna use those little increments as your kind of foundation for creating that balance, then you zoom out and see how it plays with every other individual element on the screen. And you're gonna wanna be generous with your negative space. You know, on the message example, you know, you can see that there's not a ton of negative space in between each one of these, but there's at least close to 30 pixels on top and bottom. And each one of these has its own negative space. So between, fully between avatar to avatar, we've got close to 48 pixels of negative space. And if this was a lot tighter, you know, if these were all kind of crammed together, then it wouldn't work as well because it's starting to get to dense, and there are times when you can make super dense informational layouts, but in this case, I wanted it to feel a little bit more breathable, a little bit more lighthearted. So as you add space, it just kind of gives you more room to breathe. So don't forget to give your elements breathing room and generous use of negative space when you are kind of laying things out. And another just quick little tidbit is, you know, if you're laying things out vertically, you know, make sure you're paying attention to this space in between, you know, are you gonna use two points or six points or eight, you know, and then zoom out and see how that feels. And if they're more closely related to each other, then tighten it up a little bit. If it's not related at all, you know, it needs a lot more space. And then if you're aligning text with other text horizontally, you wanna make sure that you're going with a baseline alignment. So if I screw this over, you can see that the baseline of these text strings here is line and the baseline is gonna be the bottom of these, the lowercase letters and not including the descender here. If I try to grab this and center it vertically, that would be an option but it's just not gonna work quite as well. And it's kinda hard to see this, but a lot of times you might have a larger, let's see you make this a little bit larger. So if I've got a larger type face here and you might be tempted to kind of center that vertically, well if I can do it. As this gets larger, it's just gonna feel, it just feels a little bit, like it's just not quite gonna work. Like it just feels a little bit wrong. It's always gonna be a little bit nicer to have these baselines lined up, creates a little bit more balance. Let me put that back in place. I don't have my quick keys set up in frame, or because it was a little bit harder to do that. But as you make those little tiny decisions, and then you zoom out, it's just gonna create a nice balance for every single piece that's on the page. So I've got all of these, all of these names and timestamps are balancing each other out on this horizontal line. And then all of my names are on this hard edge across here. So I'm aligning things, use of negative space, and there's also some variety in this screen here. So all of those things kind of coming together, balanced with the size of the avatar, balanced with the little icons that are kind of indicative of what that message is, all of these work together to create that balance and harmony when you're combining all these texts elements. Okay, so for your homework on this combining text with other elements, I want you to create a mobile view of some kind of product. It doesn't matter what it is. In my example I'm using Nike shoes, but I want you to create a grid of like six to eight products. So you have two products side by side, some kind of title, and I want you to have an image of the product, the title of the product, the category of the product, number of options, like color, are there three options? Are there three colors? Something like that. And then also the price. So image with all of that and, you know, make sure that you're trying to balance the title with the price and you're paying attention to the space and between the product grid, you know, pay close attention to all of the spacing and all of that to create this balance while you're combining all of the text. So that'll be the first screen. On your second screen, I want you to show one of those products from the first screen as a product detail, and I'm intentionally making it a mobile screen, just so it's not so much to design and you can look at the examples below. It doesn't have to be like an entire tech specs, features, you know, all this warranty, everything, just basically the title, at least one large image for the product detail screen. You can do a gallery if you want, it's totally up to you, put in the category, bring in a short description of the product, an option to select size or color or whatever makes sense for the product that you're using. And also like an add to cart CTA. You can again see the Nike example, but create something of your own with your own products, and if you're having a hard time deciding, you know, try to recreate this Nike one pixel by pixel. But if you wanna branch out a little bit, go for something else that isn't done yet, and just we're focusing on creating text elements that are gonna balance each other out. So variety, negative space, horizontal baseline alignment, and then vertical left edge text alignment. So get to work on this, post your work, let us give you some feedback on it and can't wait to see what you come up with.


=== FILE: 2-10 system fonts-1.txt ===
------------------------------
﻿- User familiarity is probably one of the biggest reasons why you would want to choose a system font. I'm talking about San Francisco pro for iOS or Apple related products or something like Roboto for Android, or also like any number of open source fonts that are easily available and usable. Cause if you think about the way that you use your phone, you're gonna be using it as a utility first kind of tool. You're gonna be checking the time the weather, setting alarms, and scrolling through various social media posts. And the system font serves as a passage way to get you to the content that you're actually trying to see or hear or watch. Or as much as I hate to say the word consume. It's not that common specifically with App based interface design, when there's a big opportunity to go super custom with big super custom fonts, interfaces over the web is a slightly different story. And it's not to say that you can't have super custom fonts on an app, it's just maybe a little bit trickier. But we'll dig into some of those nuances in just a minute. Learning to design with the system font stack is a great way to tiptoe into the world of typography. As you get more confident and you want to venture out, then you can start experimenting. And in fact, I encourage you to do that using new and unique fonts are amazing ways to stand out from other websites and pieces of software, you just have to make sure that you don't overdo it. And you kind of want to learn the principles of solid fundamental type design before you start relying on elegant fonts to kind of serve as a crutch when you're missing some of the fundamentals. So using restraint InDesign is often a foreign concept for new designers. So don't be afraid to consciously not over design something especially when it comes to crazy typography. It's tempting to choose something big and crazy. But if you're you really need to make sure that you have the context for what you're designing for and nail down before you start making those decisions. And one less decision to make when you're designing a new project. By using a system font is a great thing to do sometimes, because there's so many other decisions to make. Sometimes you're designing for a brand that already has a specific font that is custom for them. And it's their brand font, and you just use that and you have to make it work. Other times you're designing specifically for iOS and Android, so it just, it just makes sense to start with the system font. So using constraints, even if they are self enforced constraint is a great way to make great designs, and having an endless possibility of fonts and colors and pictures and graphics, it's an easy way to get really overwhelmed. So starting with system fonts can be a strategy to just make it a little bit easier on yourself. So if you if you want to make it easier on yourself when you're getting started then just consider going with straight up tried and true system fonts. It doesn't make you any less of a designer. So I want to encourage you to use hammer Cisco Pro, if you are designing for Apple based things or even even like a web based application because Apple's using it in all of their products and a lot of their products are really great. So there's not a problem with going with that. So you're completely okay to use system fonts as long as you're able to use them in a very nice way. You know setting line height, setting line, margins and alignment and spacing all the proper fundamental techniques can be easily applied to any of the system bonds and make them look great. Performance is another really big factor when it comes to choosing a font and especially going with a system font. Speed and performance is typically pretty key when you're making apps or websites. So baking a font set into a downloadable app isn't that big of a deal in terms of overall app size and performance. But when you're using custom fonts on the web, oftentimes, there's JavaScript that must be called and there's a third party server and load times can be a little bit slower, it can easily get bloated and can slow down the speed time of some initial loads. And slower time means visitors bouncing visitors bouncing means fewer conversions. And at the end of the day, we're designing websites mobile apps, For people to use. So what's the point of designing something that's hard to use? And I'm not trying to slam custom fonts. I love custom fonts. You just have to be wise when you use them. But there are so many considerations to sift through. So again, don't feel bad to start with system fonts, it's totally fine. Costs can be another huge factor. Are you or your client willing to purchase a custom font or pay for an annually if there's some kind of views per month views per year associated with it? I did one time even convince a client to spend over $1,000 on the complete FF Mark font family. And I really did believe that that was gonna be an awesome font for their project. And I thought it turned out great. It was the Skyscanner project. I've shown you in some of the other examples. And there's been plenty of other occasions where I've suggested specialized fonts for a web design projects and mobile app projects. It's just a matter of doesn't make sense for that brand. Doesn't make sense for that project, and are the other factors kind of covered when you're considering those costs and fonts. But I will say all of those would have been also it would have been fine to use system fonts. I've designed so many projects with San Francisco or Roboto, or a version of a font that's already pre baked into iOS like avenir, or any of the other pre baked in Apple fonts. So remember, system fonts and their various weights can take you very far. You know, look at the look at San Francisco. It's got black, bold, semi bold, heavy, there's italics, there's a number of different ways that you can use it. And at the end of the day, I want to drill into you that system fonts are a good thing. And you really only need to venture outside the box when you reach a point where it just feels like you need something different. And that might be on the very first that might be on your very first project but I I want to recommend to starting with system bonds and and that's okay, but if you you know if you want to put it aside, that's okay too. You are the designer so unless there are specific font requirements for your project, whether from the client or whoever, you should decide to use a system font. And when you feel like going custom talk to the developers talk to the client, talk to whoever's involved, and have those discussions up front. So for homework, I've been assigning most of the homework with the Enter font, because it's kind of open source, it's working works well on both Mac and PC. And there's a lot of projects that have also had San Francisco pro that you've used possibly. So for this assignment, let's do something a little bit different, slightly different. I want you to if you've used San Francisco pro or enter for a lot of your projects, I want you to just switch it up and try Roboto or if you've been using Roboto, try San Francisco. But I would assume you've probably been using Enter or San Francisco. So if that's you go with Roboto. And you may want to make a slight change to the sizes or the way that this font is being used, but I want you to redesign the stripe checkout and have this be An extension of some of the homework from the previous lesson where we had the E commerce grid, the product detail. So now we're gonna, we're gonna kind of redesign the stripe checkout. And it doesn't have to be a complete rethinking of the entire thing. You can copy it basically, as is make some slight tweaks, put your product in there and use the Roboto font and just kind of see how it feels. And you can do the web version or the mobile version, like we did in some of the other ones. But I just want to the big takeaway for this lesson to be system fonts are totally fine. And you you can learn a lot of the principles without having to make decisions on custom fonts and only only venture out when you feel necessary. And and you know you're not any less of a designer, because you're using San Francisco or you didn't come up with some awesome fancy font. So let that message empower you and let's get designing this homework with some good old system fonts.


=== FILE: 2-10 system fonts.txt ===
------------------------------
﻿- User familiarity is probably one of biggest reasons why you would want to choose a system font. Now I'm talking about San Francisco Pro for IOS or Apple-related products or something like Roboto for Android or also like any number of open source fonts that are easily available and usable. Cause think about the way that you use your phone. You're gonna be using it as a utility-first kind of tool. You're gonna be checking the time, the weather, setting alarms, and scrolling through various social media posts. And the system font serves as a passageway to get you to the content that you're actually trying to see or hear or watch or, as much as I hate to say the word, consume. It's not that common, specifically with app-based interface design, when there's a big opportunity to go super custom with big super custom fonts. Interface design for the web is a slightly different story. And it's not to say that you can't have super custom fonts on an app. It's just maybe a little bit trickier. But we'll dig into some of those nuances in just a minute. Learning to design with the system font stack is a great way to tiptoe into the world of typography. As you get more confident and you want to venture out then you can start experimenting. And in fact, I encourage you to do that. Using new and unique fonts are amazing ways to stand out from other websites and pieces of software. You just have to make sure that you don't over do it. And you kinda wanna learn the principles of solid, fundamental type design before you start relying on elegant fonts to kind of serve as a crutch when you're missing some of the fundamentals. So using restraint in design is often a foreign concept for new designers. So you don't be afraid to consciously not over-design something, especially when it comes to crazy typography. It's tempting to choose something big and crazy. But you really need to make sure that you have the context for you're designing for nailed down before you start making those decisions. And one less decision to make when you're designing a new project, by using a system font, is a great thing to do sometimes because there's so many other decisions to make. Sometimes you're designing for a brand that already has a specific font that is custom for them and it's their brand font. And you just use that and you have to make it work. Other times you're designing specifically for IOS and Android so it just makes sense to start with the system font. So using constraints, even if they are self-enforced constraints, is a great way to make great designs. And having an endless possibility of fonts and colors and pictures and graphics, it's an easy way to get really overwhelmed. So starting with system fonts can be a strategy to just make it a little bit easier on yourself. So if you want to make it easier on yourself, when you're getting started, then just consider going with straight up tried and true system fonts. It doesn't make you any less of a designer. So I want to encourage you to use San Francisco Pro if you are designing for Apple-based things or even like a web-based application because Apple's using it in all of their products. And a lot of their products look really great. So there's not a problem with going with that. So you're completely okay to use system fonts as long as you're able to use them in a very nice way, you know, setting line heights, setting margins and alignment and spacing. All the proper, fundamental techniques can be easily applied to any of the system fonts and make them look great. Performance is another really big factor when it comes to choosing a font. And especially going with a system font. Speed and performance is typically pretty key when you're making apps or websites. So baking a font set into a downloadable app isn't that big of a deal, in terms of overall app size and performance. But, when you're using custom fonts on the web, often times there's JavaScript that must be called and there's a third party server and load times can be a little bit slower. It can easily get bloated and can slow down the speed time of some initial loads. And slower time means visitors bouncing. Visitors bouncing means fewer conversions. And at the end of the day, we're designing websites, mobile apps for people to use. So what's the point of designing something that's hard to use? And I'm not trying to slam custom fonts. I love custom fonts. You just have to be wise when you use them. But there're so many considerations to sift through. So again, don't feel bad to start with system fonts. It's totally fine. Cost can be another huge factor. Are you or your client willing to purchase a custom font or pay for it annually if there's some kind of views per month, views per year associated with it? I did one time even convince a client to spend over $1000 on the complete FF Mark font family and I really did believe that that was gonna be an awesome font for their project and I thought it turned out great. It was Skyscanner project. I've shown you in some of the other examples. And there's been plenty of other occasions where I suggested specialized fonts for web design projects and mobile app projects. It's just a matter of does it make sense for that brand, does it make sense for that project, and are the other factors kind of covered when you're considering those custom fonts? But I will say all of those would have been... Also it would have been fine to use system fonts. I've designed so many projects with San Francisco or Roboto or a version of a font that's already pre-baked into IOS like Avenir or any of the other pre-baked in Apple fonts. So remember, system fonts and their various weights can take you very far. You know, look at San Francisco. It's got black, bold, semi-bold, heavy. There's italics. There's a number of different ways that you can use it. And at the end of the day, I want to drill into you that system fonts are a good thing. And you really only need to venture outside the box when you reach a point where it just feels like you need something different. And that might be on your very first project. But I want to recommend just starting with system fonts and that's okay. But if you, you know, if you want to put it aside, that's okay too. You are the designer. So unless there are specific font requirements for your project, whether it from the client or whoever, you should decide to use a system font and when you feel like going custom. Talk to the developers. Talk to the client. Talk to whoever's involved. And have those discussions up front. So for homework, I've been assigning most of the homework with the Inter font because it's kind of open source. It works well on both Mac and PC. And there's a lot of projects that've also had San Francisco Pro, that you've used possibly. So for this assignment, let's do something a little bit different, slightly different. I want you to, if you've used San Francisco Pro or Inter for a lot of your projects, I want you to just switch it up and try Roboto. Or if you've been using Roboto, try San Francisco. But I would assume you've probably been using Inter or San Francisco, so if that's you, go with Roboto. And you may want to make a slight change to the sizes or the way that this font's being used. But I want you to redesign the Stripe checkout and have this be an extension of some of the homework from the previous lesson where we had the e-commerce grid, the product detail. So now we're gonna kind of redesign the Stripe checkout. And it doesn't have to be a complete rethinking of the entire thing. You can copy it basically as is, make some slight tweaks, put your product in there, and use the Roboto font, and just kind of see how it feels. And you can do the web version or the mobile version like we did in some of the other ones. But I just want to... The big takeaway for this lesson to be system fonts are totally fine and you can learn a lot of the principles without having to make decisions on custom fonts and only venture out when you feel necessary. And you know, you're not any less of a designer cause you're using San Francisco or you didn't come up with some awesome fancy font. So let that message empower you and let's get designing this homework with some good old system fonts.


=== FILE: 2-11 alternate fonts.txt ===
------------------------------
﻿- There have been entire books written on typeface creation, typographic, style, fonts. I mean, it's gonna be incredibly difficult to cover choosing and using alternate bonds in just one lesson. So I wanna paint a picture and give you the idea behind it, more than give you specific step-by-step instruction. Because the truth is there is no specific step-by-step instruction up to a certain point because fonts are like music, or movies, it's almost like an artistic expression. Now, a lot of them are done for a very specific reason. And a lot of them have specific styles that are done for a very specific reason. But, just like music, everyone's gonna have a different opinion on it. You're gonna like classical or you're gonna like rap or you're gonna like country or both, or none. Maybe you hate it all. I don't know. But it's a very subjective kinda thing. So, I wanna give you the tools to make your own subjective decisions, and sprinkle in a little objectivity along the way. And I love this subject, I love fonts, I get emotional over fonts. I like looking at them, the letter forms the way they make you feel. Some of them are big and bold, and other ones are just very discreet and minimal. And I just love fonts. And I've been designing for a long time, almost two decades or so. Probably, I'm gonna cut that part out. I've been designing for a long time and I still love poring over fonts and looking at them and playing with them. It's just kind of a weird, nerdy obsession that I have developed as a designer and I encourage you to get nerdy with your alternate bonds. So let's talk about a couple of reasons why you would not use a system font. Why you would use an alternate font. Why you would find a new typeface. Well really, it's gonna be kind of like a branding decision. It might be because you want to stand out in a specific way. And it might be because you. Maybe there's a lot of competition in the marketplace and you want something that's really unique. That's exactly what I did with Flowkit. I originally released Flowkit as a, I was using San Francisco like just a system font stack. But as this has evolved, there have been a lot of other tools that have kinda popped up that are similar or in the ballpark. And I just really wanted this to be super friendly and kinda round maybe with the edge of like kinda techie vibe but very friendly. So I went with this font called TT Round, I believe is the name of the font. And, it's just got rounded edges and it's got these fun little, I don't know. It's just like a fun fun and I wanted to use that font. So it did stand out and it works. It's not too over the top. So it works for headlines. It works for paragraph structures. But there might be some people including you that just doesn't like the font and that's fine. So it's part practical, branding, positioning, and it's also very part, a large part subjective to the person who's using it and the person who's making the decision. So the same way that every song doesn't have the same guitar riff or the same drum beat, not every website needs the same typeface. And typeface is a huge differentiator between one website and another and a lot of times the biggest diff-- A lot of times the biggest differentiator is the actual typeface. So this one decision can have a profound impact. And it's not always as easy as just scrolling through and then just saying that font, a lot of times you try font, you design it, you spend a week or two and then you try a different font, you switch it out sometimes near the mid part of the project, you might change it out and it again, it depends on your situation and a lot of times you don't have that option, but it is kind of this artistic search for the perfect kind of thing. But no matter which font you're using, I really like this quote from "Elements of Typographic Style." It says "a face of modest merits should be handled with great discretion, formality, and care. It should be set in modest sizes with the caps well spaced, the lines well leaded, and the lowercase well fitted and modestly kerned. The line length should be optimal and the page impeccably proportioned. In short, the typography should be richly and superbly ordinary, so that attention is drawn to the quality of the composition, not to the individual letterforms." So that's talking more about individual letterforms and also if you're using, just fonts in general, it needs to support the content. It's not all about the crazy typeface, sometimes those flares are fun. But at the end of the day, the typeface supports the message and the content and that's what this quote is getting at. So make sure you're not just using a random font without purpose. And absolutely do not use a font in your designs before you know whether or not it's even available as a web font, or if you know that it has an app license or something like that. So, let's dig into some of those little objective details before we expand on some more examples. So what kind of attributes of a custom font are you looking for? Are you looking for a sans serif font with just clean and simple? Or are you looking for something a little bit more sharp with serif edges or even like a monospace that has like a really techie vibe. There's lots of different, you kind of want to come up with adjectives that would describe your project or the thing that describes your brand, when you're looking for a typeface. The same way that you would wanna listen to a music track to set as the soundtrack to a certain scene in a movie. It's kind of like, you just kinda have to listen and look and wait for that moment when you're like, oh that's it! It's almost like this aha moment. Sometimes, and other times you just like a font, you pick it, and it's not that big of a deal. And other times, it can be kind of a magical experience. Sometimes you want to decide upfront, do I want to use a custom display font for only the titles? So I've got a title, all of my big titles are a very custom, unique fonts, like a display typeface that's not necessarily suited for body copy. So I'm just gonna use a system font for body copy, and kind of these big ornate titles, and it doesn't have to be ornate, it could just be a different typeface with standard body copy. Or you could use one custom font for everything the way I just showed in the Flowkit example. I'm using that for the title and the body copy. And then there's other times when you might choose a very specific display typeface, and then another custom body typeface. But there's gonna be different type styles that are used for display only, or ones that are body copy only or monospace, like the different styles have different use cases, depending on how you want to put it into your designs. So another example of a custom font that I used in a project. This was a client project called FibreStream. And they were kind of rebranding a little bit and also redesigning this marketing site. And we kind of landed on this idea of, since they are an internet company, that can be kind of boring if you just use system fonts like okay, just give me my internet. But to kind of differentiate they wanted to kind of be like the Nikey of internet service providing or the Adidas of internet service provider, so I actually use avant garde which is the-- Adidas font is actually set in that typeface, so if I just go in here really quickly. So we wanted this kinda bold typeface that made this internet service feel a lot more sporty and new and kind of fresh like this is they're all about superfast internet, super simple billing. So the whole vibe was this kinda black and white orange vibe that you could almost switch out some really nice sneakers in this website, and it could still work. There are a lot of things that support that kind of vibe of the website that we wanted to showcase. But the typeface was one of the early leading decisions behind that particular design. And that kind of drove a lot of the initial design was picking that typeface, experimenting with the thin, the thinner weights and then some of those thicker more in your face kind of styles that we wanted to go for. And so in this case, we're using over on guard for every single piece of text. So we picked a custom font that had multiple weights, and we used it for every single thing. Whereas in contrast, and these MyManeiro designs, I ended up using this was a desktop app. So we're using San Francisco, but it's also a cryptocurrency app and a lot of these big long numbers. I felt kinda needed this monospace font. So I actually use this font called native that my friend Maddox Schuler created they're his type foundry called forte and it's just a fun monospace font that I knew that he was actually making the font when I was designing this website, so he gave me a copy. It was kind of like better than using the standard Menlo or regular monospace font, it just had a little bit more of a personality to it. So I was able to blend the monospace font with a lot of the just kind of the titles and everything. Every single piece of information didn't need to be monospace but I think I made the decision that if it had to do with wallet addresses or the something inside of the cryptocurrency wallet that was gonna be this like techie monospace font. Whereas like everything that had to do with the system organization was gonna be the system font. So you can see like, the wallet balance is set in monospace. And these addresses are monospaced, but I'm using titles and the UI labels with the system font to kinda give it that language that visual language of system font means action and categories, whereas like things specific to the wallet are gonna be monospace. So like even the name of the wallet, the labels, and the helper text and the color like these are all set in those in that monospace font. So I ended up using that monospace font a lot but for some of the labels on some of this stuff, I ended up using the system font. So that was like another way that you can experiment with exploring custom fonts is coming up with a kind of a system. As you design, as things kinda make sense, you come up with a system in your mind like, okay, this section is gonna use these fonts, and this section is gonna use these fonts, and here's why. And a lot of times you are as you're thinking through these decisions, you can share that idea with your client or the people you're working with. To get them to buy into that idea. That way, it's a lot easier when you show it to them, where they're like, Oh, yeah, this is what we talked about. I can see that that works a little bit better now. Another example of when I picked one font and used it everywhere was for this Shiplify project. And again, just to remind you, this was a transportation, logistics, management application. Kind of like a very. It's not boring because it was a fun project, but it's kind of like a bland subject matter like shipping information. And I like to think like if something is naturally kinda boring and bland, I wanna make it a little bit more lively. Like even with user flows, user flows sound boring. So I wanted to use a fun typeface to show off Flowkit, that it's fun. And so the same way with this Shiplify project, I didn't wanna use the system font, so I convince them that we should use this Gotham rounded font from Hoefler & Co. So you can check out Gotham rounded here, I think you can even type in here. And it's just a fun, quirky, rounded font that kind of in some ways, counteracts the the boringness of a shipping application. So you can see that I'm using this everywhere, I'm using the kinda regular weight here some of the heavier weights for the actions. And I feel like for this particular project, it just added enough of a fun soft edge that it just kinda added a little bit of life to the project. And it has a lot of weights a lot different styles. And that's one thing that you wanna make sure that you're that you kind of investigate before you choose a font, is that it has enough weights that you can, you can have regular, bold, demibold, extra black, some of the weights and experimentation. It gives you room for that experimentation. Because if you have a font that only has one or two weights, then you're a lot more limited with how you can use it. And that's not to say you can't use those, you just have to be aware of that before you get started with it. And one more example of when custom font was used for the entire project was this ExxonMobil project. Now ExxonMobil had a typeface called EMPrint, which I guess did for ExxonMobil print, and they had it adapted for websites but it was kind of this sansara of that had a slightly kinda modern look to it. You can see the A doesn't have the little extender down there. These big rounded P's with the sharp internal edges. Pretty nice. Pretty nice font, and that was already their font. So there wasn't really any option to go the another custom font because this is the one that is their font. So you might find that sometimes you just have to you have a font handed to you. And that's the font you use. So hopefully it has enough weights and enough expansion ability that it can work. And some, and in this case it did, in some cases you might find that it doesn't. I've had clients in the past where they had set brand fonts. And I just wasn't feeling using that for the web or for their app. And, then I had to make a new kind of case why they should adopt a new font and then that became a little mini project within the project is convincing them to use a font. So creating a pitch deck and outlining the pros and cons for using this font versus that. Sometimes you have to do that if you feel strongly about a certain font, but if you don't have a strong reason to back it up, then you shouldn't try to take on that endeavor and that battle of pitching that font when it's just like, you're not gonna win an argument by saying, Oh, I just think it's a cool font. I mean, if it's up in the air, and people are questioning it, and you're like, yeah, I really like this, then that might be a way to do it. But if you're dealing with a big organization that has brand guidelines, then you're gonna have to bring a little more to the table with your font selection before you can actually convince someone to use something different. So the way that you can do your due diligence for choosing an alternate font to use. Number one is gonna be look at the cost. Is it a free font? Are you gonna use Google Fonts? Because that would kind of eliminate the cost factor. But then that also brings up the fact that, well, if it's a free font, then a lot of other people have access to it. In fact, everyone does. So it's not gonna be the big differentiator that you might want it to be. So that's just kind of a trade off where if you. There are some really good Google Fonts but everyone has access to those so you might find yourself maybe wanting to go something a little bit more exclusive or premium. Another thing you need to look at is this a subscription font? Sometimes web-based fonts have subscriptions, whether it's monthly or annual, like typography.com has their cloud typography. And you have to pay yearly. And I can't remember the specifics. But I do know that you pay regularly to have them host and serve your fonts to your website or your app. And, that also comes with a development issue, as well as like, how fast are these gonna be? Are we going to rely on third party servers to send us our fonts? Or do we get a copy of them? And can we serve them ourselves? So these are some of the things that you need to think about when you're trying to convince someone to use a custom font. Are you gonna be able to afford it? Is the client willing to pay for it? And also is there an ongoing fee? And if so, just make a note of all those things and present that information when you present the font to use. So I'm just wanna run through a handful of foundries that I really enjoy, and I really love their typefaces. This is called Letters from Sweden. They just have some really fun fonts, I've probably purchased, I don't know, four or five of them. And the thing I like about these is you can always get in here and just test out what the fonts look like, you know, if you have a certain phrase or heading or body of copy, you can come in here and paste it and you can just kinda get a feel for, you know, how does this look compared to other things? OH no Type Co. This is, they have a lot of kinda quirky, fun fonts. Just, you know, and I don't know if I've even ever bought one of these typefaces. I just know that this is a fun. This is a fun foundry that I enjoy the work that they produce, and I kinda. I'm always looking for foundries and typefaces that I really enjoy. That way I might have the ability to use something in the future and I know okay, I remember that. So I just kinda make a note to save these foundries and these typefaces. line too or lineto however you pronounce that has some nice fonts. The website is a little crazy, I guess. Let's see if we can find out how to click on typefaces. Yeah, so I mean, a lot of these look really nice. And sometimes you might find one that you really like that is actually like, oh, actually, this doesn't look too different from this other free one. So actually, let's just go with the free one. Sometimes, you might get inspired by one, but then you say, okay, what font looks like this, and you google that and you might find a different one. So it doesn't necessarily mean that just because you find a font that you really like that you have to go with that one. A lot of fonts have very small differences. Some fonts might look exactly the same, but the R is slightly different, or the lowercase descenders curve instead of go straight. There's a lot of subtle differences between some of these custom typefaces. My friend Maddox has great fonts at fortfoundry.com. Lots of different kind of, you know, almost like display typefaces that you wouldn't necessarily use for all of your UI copy. But this would be really cool as you know, headline and an app or it kinda has that news feel. Cola font foundry has some awesome typefaces. Another one that I really love is Klim Type Foundry. Lots of awesome typefaces here. And in the Klim Foundry. You can even go here and you can download free test fonts. Not every type foundry allows you to do this, but Klim does allow you to do it and I've downloaded these before and I've tested them out. And sometimes you need to test them out coz you don't know exactly how it's gonna work. And the type sample tool is not always gonna be adequate, before you can, you know, decide whether or not it works. Okay, so for homework, I want you to pick a screen to design. It can be either something that you've designed in the past for another lesson, or it can be just a simple headline and text and a button. Just whatever you wanna do, you come up with something that you like. And I want you to do it in three different versions. I want you to use, number one, a display typeface for titles only. So something that's kind of like a little bit more impactful for the titles, and then use like San Francisco or enter or something like that as the body copy. Secondly, use either the same font or a different font for everything; use it for the body copy, use it for the titles, use it for the labels, whatever you're designing, use that for everything. And make sure that you're using your example includes at least a body of copy, like three or five sentences. It might be a forum or something, but make sure it includes enough variety of text like headline, body copy, and maybe a few other elements, so you have enough to play with. I want you to use the same design, but use two different typefaces that are custom, one for the titles and one for the body. So you have three designs, but one's using display, and then system body copy. One's using a custom font for everything, and then the third is using two different custom fonts for everything else. And you can use Google fonts. Or you can use Adobe fonts, formerly known as Typekit. Or you can go to Klim Type Foundry and download some of those test fonts. And if you're feeling super, super excited about this, go and buy your own font, go find one that you really love or two that you really love and spend a little bit of money on it and you might be able to use it for this exercise and then maybe use it for your personal site in the future or some other project. So anyway, I'm super excited about this because I love typography. And I'm really excited to see what you come up with, with your custom fonts and kind of introducing this new element. So, post your work, post, you know, post fonts that you find into the Slack channel. Get some feedback on the ones that you find and definitely post your work. Love to see everything that you come up with. So let's get started.


=== FILE: 3-01-1  box model.txt ===
------------------------------
﻿- From this point forward, I want you to think of every single piece of interface as a box with a left edge, a right edge, top edge and a bottom edge. And I want this to be every string of text, every folder that contains multiple elements, every image round are not, considered every single piece of interface as a box. Why do I want you to do this? Because it's gonna make your life a million times easier as an interface designer. And this is really non-negotiable. From now on everything, and I mean everything that you design is a box. Now, if you're familiar with the CSS box model, then this is not gonna be news to you. But even if you are, stick with me here, because it's gonna kind of carry over into just about everything and maybe in ways that you haven't seen before. So what is the box model? Well, it's really made up of multiple parts. You have the content, you have padding. You also have a border, which I not showing here and then you have margin. And that's really the main premise of the box model here. So in this example, we have a string of text. And in the box model, everything kind of starts at the core and expands out. And this is gonna help with different screen size design, responsive web design, mobile design, you know things that are stretchy. Think of it as every piece of content is kind of the the source of truth and then it expands out from there. So padding would be, if I was wearing a big puffy jacket that would be padding. But the margin would be between the padding and the wall. That's like the margin of space so like, nothing really goes into the margin. But things can be inside of the padding. The padding can have different colors the same way a jacket would have different colors. And then the jacket might have a border like a shiny streak or something. That would also take up some space. So think of the padding as a part of the object that kinda insulates it. But the margin is the space around it that nothing can go into that space. So looking at this super quick example, in this CodePen, I've got a little paragraph tag, and I have a container around it. So that means we have a box within a box. So our first box is this paragraph container. And you can see if I just simply got rid of that. We're only gonna have one box. But let me put that back and explain this a little bit more. Now you don't need CSS knowledge, really to fully understand this. But it's just helpful to show this in CSS because it kinda makes a lot more sense. It's easier to show this with actual code than it is with a design file because this is how things actually work. So if we added zero padding to the container you can see that now we even though we have two boxes, they're right on top of each other. But if we add a little padding to the box, then we have equal 4rems of padding, that's padding and margin. You can also see padding around the body. Let's say our HTML has a background of pink. And our body, which is just basically around this, even though it's not shown. The body is actually just kinda surrounding this stuff. So right now we have a 4rem padding on our body. We can change that to 10 and that would be larger. But look, if we add a margin of 2rem now we're gonna have, whatever's behind there is gonna show up. So I just wanna show the difference between margin and padding. It's not too complicated. So once you kinda get the hang of thinking of things this way, it'll make a lot more sense. But let's take a look at an actual example of an actual project. So I've shown this project before. This is called Cinesampler. And this is a desktop app for streaming orchestral instruments. So lots of different screens here, lots of different volume controls, sliders, keyboards, and also like ways to navigate the things that you can download and demo. But every one of these objects right here is a box. So if I click into that box, you can see the actual box, you know it's 605 pixels wide by 60 pixels tall. And I can change the box size and that's gonna. Right now this box is really zero margin except when I have this particular style. So in this style, there's really like no left and right margin, whereas this particular one would have four pixels of margin. And each one of these would have really four pixels of margin from each other. But that's more about. To actually bake that into the component, you would do two pixels on top and two pixels on the bottom. That way, when they sandwich together, you would have four pixels in between. Or you could say zero pixels on top and four pixels of margin on the bottom. That way, the top would line up to the four pixels of margin and it would kinda create the same thing. So there's different ways to either bake in the margin or the padding to the component or you can, you know adjust it differently depending on you know how it needs to be set up. But this is more from like a coding perspective, but it's helpful to think about these things when you're designing it because especially with design systems that will help you understand how everything fits together. So if we look at more of these examples, you can see that this particular component here, it has its title and the number, but then it's also this thing here, which is the solo and the mute button. We've got another block here that is for, I forget what that is, I don't even know what CC1 is. Maybe the channel, I can't remember. Oh, that's the left and right channel. So we have like channel one, channel two. If you wanted this music to come through the left speaker a little bit louder than the right you know, you would adjust these. And then this would be a visual representation of how that channel is a little bit different. You can see that all of these are exactly the same size. These are all 126 by 60. And I didn't start off designing all of these at that size, it just, once I landed on the idea of this particular design for the title, then I went back started backtracking and said, okay, every one of these is gonna be exactly that much space. And the main reason for that is because when you get into here, you're gonna adjust these to be slightly different. So in this case, the volumes all the way down and it's muted. In this case, the volume is up to here. You know some of these have the solo channel selected, some of them are fully muted. So it's different for each one, but it all needs to kinda fit within that same box that exists for it. So if I go into this even beyond this particular symbol, if I click into that, you can see now I have another box, which is the speaker icon. So if I click into that, you can see. Okay, this is icon sound gray, this is icon sound, mute. And these are all exactly 16 by 16 pixels, same as this X. And then if you look right here, we have these circles as well, these are also 16 by 16, 'cause I kind of, am using this pattern for the icon size. So everything is a box within a box within a box. And that just makes it where the symbols can be changed out rapidly. All of the sizing is consistent, it makes sizing icons with titles a lot more easy. So you could imagine if you have, you know two different blocks together, it's a lot easier to align these two blocks than it would be to grab just one piece of text. And then you're trying to align that and it's not quite. And that's kind of how typography works. Typography is within a box. One character is in a box. And that gets centered within that little character box. And then that's what makes different typefaces have different line-heights, different spacing, different kerning. It's all kinda bundled in within its own little container with padding kinda built in. And that's the same thing with these interface components. So if you look over here at the list here, you can see that I've got all of these are their individual components. So if I go into that, this is a kind of a child navigation component. But it also has two components, two boxes inside of it. So this one has its own, you know label and then it has the icon over here as another box. And so this is its own box with its. It has its 24 pixels of left padding built into this component. And then it stops a little bit shorter, so I can fit in the 16 by 16 icon here that lets me know if this is a drill-down kind of top level or if I go back to this, go back to the navigation. So some of these, like these are high-level categories with a drill-down indicator. And then if you get down into it, you have the little icons that let if you're downloading it or if it's been downloaded, but it's the exact same symbol and they all have just a slightly different icons that associate with it. And if you're not using boxes within boxes to line all this up, it's gonna be quite difficult and you might not get things lined up properly. So once you have a good design, then you can kind of abstract those into the different pieces and start lining it up and making those rules as you go and you tidy it up. Now I wanna stress that I don't design this way from the very beginning. It's not something that I just get super organized from the very beginning. There's a lot of exploration, a lot of pixels, a lot of mess, a lot of unnamed layers. And I go through and explore. And once I land on something that seems like it might work, then I will make a component and then duplicate that and then go back in and maybe tidy it up, rename it. Think through the organization like as I'm going. So I'm cleaning and organizing, as I'm going. After a good solid 30 minutes of an hour, 30 minutes to an hour or longer, sometimes days of just kind of mess and throwing things around. Only then will I come back and systematize it and turn it into a component and get really organized with it. All right, so for homework, we're gonna put this box model to the test, put it into practice. So I'm gonna pull up this Figma file here. And we're going to take this. This is the table of contents from the book "Elements of Typographic Style." And we're gonna create like an interactive page. Pretend we're creating an app that would allow you to tap each one of these sections and go to that particular section of the page. So like an interactive table of contents. And you can use this file as a starting point. And I'm just gonna show you how I want you to think about setting this stuff up. To set up multiple components and multiple boxes and kinda go from there. All right, so just to start off, we are going to create a couple of actual boxes. I'm gonna create three here and duplicate it. Put that one over there and make this one a little bit bigger. So we're gonna use this as our section number, our title and then our page number. So I'm gonna use the text tool, gonna type in one gonna option-drag to create the title. And then the thing over here will be like the page number. Technically, I could do number 'cause it's gonna be the section number, the title and the page number. But sometimes it might be a little bit easier just to start with the real example. And for this one, it would be The Grand Design page 17. There we go. Move that over there. And while we're setting this up one thing we wanna make sure we do, see how we have 179, 199. That box is gonna naturally grow wider. So we wanna make sure that our box for the page number has enough room because if this was our confined fixed-width box, and we tried to type 179, then that's gonna happen and that's no good. So we want to make sure that this can accommodate a larger size text. So I'm gonna make it a little bit larger. And I'm gonna hold Command+Option+R to go right aligned and then I'll make this. I'm not gonna worry too much about the sizing and the padding just yet, because we can always go back and change that later. Normally, I would adjust that a little bit more. But for this demo, I'm just gonna go with it. So we can either right click and hit create a component, or I have my shortcut key set to Command+Option+K. So you can see component one, I'm gonna call that table toc, page number. And I'm gonna put this in here. And I'll call this I'll do Command+Option+K, toc, page title or actually section title. And this would be section actually, that would be a page number. And then let's put this here. Make sure that's left aligned. Make sure that two characters can fit. Maybe make this a little wider for now. I don't care about this, the spacing just yet. 'cause we can always change that, Command+Option+K. And this is gonna be section one. All right, the cool thing about this now is we can actually. If we wanted to go ahead and butt these all up against each other and scale them, so they all fit nicely. We could even do this, which is the resizing rules aren't set up within that component, but that's okay because these are our master components right now and we can change this. If we option and drag these to copy it and we just change it with the next one. Let's go back and undo 17 and then we'll put that one at 25. Rhythm and proportion. And then I'll put that at two. This became a fixed width piece of text when I stretched the component. So all I wanna do to fix that is go back in and just make it a non-fixed width component. And I think those are good. So now any change that I make to these is going to affect the one below 'cause it's a copy of that component. So now if I wanted to, I could get in here and say, Okay, you know what I wanna make this number. Maybe it's 12 pixels from the left, 12 pixels from the right. And I want this thing, background to be 12 from the bottom as well. And let's do, let's just do 12 on that side. We can't forget that we have to fit a 10 in here. So we may wanna just go ahead and do 10 and turn that into a fixed width and then pull that over 1, 2, 3. So we have 12 on top 12 on the bottom, and then 12 on the side and then make sure our component is resized to fit all of that stuff. And so now we can add some resizing rules. I want that to stay to the left to the top. And let's go ahead and make that less offensive of a gray. And so now we can just say okay, all this is gonna be 48 tall. Let's make that 48 tall and 100% line-high and let's go 12 there, lets go 12 all the way around on this. And actually I changed the line-height to 100% on the title. So it's a little different now. I'll leave that auto so this stays the same and then I'll put this one back at auto. If you just delete it out, that'll go to auto. So that way it stays at 12 'cause you can see when you adjust the line-height, it's going to adjust the box that the type is in and that will affect the margins. So for now, we will just leave it at auto keep the 12 all the way around. And then so now I wanna update this thing. Remember, anytime you resize that it's gonna change. So technically I could go ahead and I'll make this a fixed width as well that way when it does change, it's gonna change how we want it to. if we add a fixed width, we wanna make sure that we pin it to the left and the right. And that way, if we resize it, it'll work, scaling down and up. Okay, so let's make sure that this is not scaling yet, because we wanna set our 12 pixels of margin all the way around. And remember, this one's gonna have a longer number here. So now we have 12 pixels all the way around. Now I'm gonna make this a fixed-width object. And I need to make sure the component is the same size of the background. So anytime you change the size of the background on these, you can hit this little icon to make the component resize to fit everything inside of it. I'll go ahead and change the background color of these just to make it a little bit better. All right, so now we know that all of this is gonna fit together. So I'm going to kinda just butt these against each other. You wouldn't have to necessarily create three different symbols. You could put one symbol with three different lines of text all inside of it, there's different ways to do it. But for this particular example, I just wanted to show the difference between you know, to have the flexibility to design all these in different ways. All right, so let's change these back to their actual. if you want to you can kinda delete the copy and just bring that in two with the dot Rhythm and Proportion page 25. All right, so I'm not gonna do the rest, but that's enough to kinda get you started. You can just option-drag this and then hit Command+D over and over to make a bunch of copies. And then you can change that out if you wanted to. And so this you would want to you know, you can definitely tell this is too close to the edge. So you might want this to be moved over. Maybe the backgrounds are actually white and you don't have a module. And, you know, you kinda play around with how that should work. And you know should the page number be bold or black you know . And then also for the historical synopsis and the forward, maybe you're using these exact same symbols here. And you want them to line up, because these don't necessarily have sections because they're not actually a part of the sections. But I don't know if it would actually make sense to line this up here because then you're kinda breaking off your alignment. So you can definitely you know if you want to put all of this into one symbol, instead of having multiple, then that's totally fine. You know, you could totally copy this out. Paste it down here and draw a rectangle around it, select it all and then boom, that is your line item. And then within that, you can adjust things as you want it to. And start copying that to redo it. And then anything you change inside of this one is gonna affect all of them. But the reason I started setting it up as three different objects just because I want you to have the control and to know that each one of those individual elements is gonna have its own box properties. So go through the rest of the instructions, you might even get in there and start adding the arrows, you know use different typefaces but try to explore different variations, try to explore like a lot of padding. Maybe the page number has a square around it, but I want you to kinda start thinking really hardcore about this box model and how the, the spacing on the top and the bottom of the content is really gonna dictate the line-height, of that piece of component. So treat that one block as either one component or one component with three nested components. And it might have a fourth nested component, if you add an arrow. Just make a nice kind of finished design that looks interactive. Maybe the arrow has a color. you decide you're the designer, you make your decisions. And just think about the box model. Think about that kinda padding and margin difference. So also, if you wanna add a module, there might be some margin around that module the same way we saw the HTML and the body margin. So you make those decisions, but post your work and slide get some feedback. And again, if you're feeling good about this one, post it at Dribbble and get some real world feedback. And again, if you want to pick a different book that you like more, go for that but if not go with "The Elements of Typographic Style" and I can't wait to see what you come up with.


=== FILE: 3-01-2 box model bonus.txt ===
------------------------------
﻿- All right, this is gonna be a little bit of a bonus video for the box model lesson. I wanna, and it might take a little bit of time 'cause I'm going to just record myself designing my own table of contents for this particular book. For the same homework lesson that was assigned in the lesson. I'm just gonna do a real time version of how I would actually design it. Without trying to give homework so you can just look over my shoulder. All right so I'm gonna delete this outta here, actually I'll save this and then delete the rest. All right, so no symbols exist. I'm gonna paste this text back in. So if I was designing this, I would definitely start with just one line like this. And probably a lot of times, you can go ahead and just duplicate everything and start creating the actual content but any time I know that there's gonna be in this case 10 or 12 of the same exact thing, most of the time in those cases I will go ahead and create a component. So, let's just assume this is a mobile app here. And what I'm gonna do... All right I'm gonna go in here and I'm going to steal this title bar. Right here. Out of this. And I'm gonna paste it in here. There we go. And then I'll make this background white. Really the main reason I created this background is to have that box model. 'Cause you can't really recreate that with padding inside of Figma. So I'm gonna create one with no margin on the side, like no module, you know what I mean? So if I had, I might do if we were doing like a light gray version, we might do something like this if it had some padding and some margin. So the first one I'm gonna create will be just straight up pure and plain. And let's say this needs a little arrow. So I'm gonna draw a square and delete one of the points and then give it a stroke. And click the options here to round the corner and the caps. So it's a little friendlier. And then I'm gonna use keyboard increments to nudge it into a smaller size like six by six or eight by eight. And then select the background and do control command. Back slash to horizontally align it. And also what I'm gonna do is let's create a little 16 by 16 container for this guy. And I'm going to... I need to put this on a half pixel. So it will be a little bit more even in that container. Now I'm going to make this container white. Select both of these and say that is icon arrow. A lot of times I'll do icon 16 arrow because there might be 16-pixel icons and 24-pixel icons. And for this one, let's just say we're gonna start off with like 20, 20-point margins on the sides there. I've got 32 on this side, let's narrow it. Or you know what, let's split the difference, we'll do 24. And... Now when I'm aligning icons you want your icons to be aligned... Actually hide that background. You want your icons to be aligned vertically in the space of the type. You don't really want your, when you're aligning type with other type you want it on the baseline, but with arrows, you're not gonna want your arrow on the baseline, you're going to want it optically centered in the middle vertically. So let's do... Maybe I'll make this like a lighter gray. For now. 20 there, 24 there. Maybe we could even do 16 on there and for now I'm just gonna do. What I'm gonna do is make sure 16 is there and then I'm gonna put 16 right there knowing that when I get down in section 10, the space is gonna be a little bit longer, I'm gonna have to adjust it later, but right now I just want this one to look good. And since these are sections, I think gonna go with a bold on that. And these don't necessarily need this dot. You know, that could be a little distracting to have that dot there. And 17 actually could be less of a noticeable kind of thing because the page number is not quite as important here because as a user, I just know I wanna go to this section, and that's what I'm gonna read, so the page number it actually has more to do with the book and less to do with the actual app. Because apps don't really necessarily have page numbers. It's not gonna be exactly the same. So we could technically make a case to not even include page numbers. In fact, I would probably consider that. But because it is what it is, I wanna have another element in there so we'll just leave it for now. And you'll notice I'm gonna keep playing with spacing all throughout this and it's not really any particular reason other than I think maybe that looks better as a little unit that's related as opposed to a bunch of different things all spread out. So right now this is I've got my number and now I've got that. So now I feel like this is a pretty decent-looking little element here. So I'm just gonna double check my sizing. We'll do like 16 pixels on the top. And 16 pixels on the bottom. Select all of this, command option K. And I'm gonna name this we'll just say TOC section title, something like that. And now we're gonna go option shift drag down and then command D. Let's see that's four, five, six, seven, eight, nine, ten. And now let's go ahead and put this content in really quickly. Two, three, four, five, six, seven, eight, nine and ten. All right, so now you can see that I'm not loving the space between the ten and the title. That's only six points. So let's knock this over to be 32 from the one, see what that is. That's 18 on that one. so if we did 30 there, that would make this one 36, I mean 16. That's looking a little bit better. Another thing we can try to do is right align these numbers instead of left align. And then we will ensure that all of them are the exact same space from the title. The only thing that will change is having less space over here. So it's one way or the other. It's gonna be right aligned or left aligned. You know we may end up changing that multiple times. I think I'm gonna go with right aligned for now. We'll do 24 there and then quickly type in these page numbers here. 25, 45, 61, 75. And you know it can be a little bit cumbersome and laborious to type in actual content, but is gonna give you a much better feel for what the design can actually do. For example, I can already tell that this 10th title "Prowling the Specimen Books" that is gonna be a longer title that is not gonna work with our existing symbol. Unless I give it a fixed design, I mean a fixed... All right so we'll fix that. And actually the line height on this looks pretty good. I think auto is probably, yeah, so it's 24. I will just leave that there. And let's adjust the resize rules on this component. So that everything stays pinned to the top when we resize it. Except for the background, let's make sure the background scales. Usually it scales by default. So let's put that there and then we'll... Get that right in there. I'm not too worried about the exact height of this component as long as it looks about the same as the spacing in here. And I think we'll be good for now. State of the art. So let's go ahead and type these in. Page 12. And fun fact, when you're not, sometimes it can be confusing. Like I've got all these symbols here or components rather and make that 82 before I forget. This one needs to be 82 as well. One thing I don't like, something that Sketch, if you create a component or symbol in Sketch it will send it to the symbols page. Well if you do it Figma, it just stays in place, which is fine. And I do like the fact that you can do that but don't forget sometimes I just like to drag this out and then make a copy and put it back in. That way I know this is like title, we'll do zero zero. That way that is like the master component and then everything else is a copy of that component. And then we can start building our little library here to the side. And then as the project gets bigger and bigger, we can organize that as we go. So that's one thing that I'll do while I'm in the middle of a design is take the component out, make a copy of it and put it back in place and then abstract it like I did here and make it zero title zero. That way it's just a lot easier to have, it's the separation of master and instances. And so now if I have, so for "Historical Synopsis" and Forward, for example, one thing I love about Figma is you can command click on one of these internal pieces of a component instance and if you hit the delete key, it just hides it. And I really like that because there's a lot of times when you just wanna make something invisible in a component instance and sometimes it's easier to just click and hit delete than it is to hit control shift H or whatever the shortcut key is to hide it. Okay so now we have this all designed out, I'm gonna select it all and hit this tidy button in the bottom. Make sure this is at zero or you can even get in here and space these apart. Add a title by copying and pasting some text, we'll just call this table of contents. And for nearly every mobile screen unless you're gonna do a larger title, I would recommend going center line in the middle like a smaller one. Or if you did like TOC or something like, big, that could be interesting, but TOC doesn't make a lot of sense. It's not very common that you would make that into an acronym. So we'll have table of contents, we gotta make sure that we leave room for our iPhone notch here. And let's go ahead and bold the title and make sure we are center lined and everything looks good. And I'm gonna add a title bar background. Pretty sure these, I think, I'd have to double check, but I think the background of these standard titles is roughly 88 points. And 20 could is a bit point size for mobile. Most standard iPhone sizes are 17. So if we wanted to just pull it down to 17 just to get a little bit more realistic of a size, this is where the power of symbols really comes into play so I can just select these. Make it 16 there. And let's just adjust, let's make sure that this is... Let's see. Okay, so 21 on the bottom there. Make sure that these aren't resizing. But I can change that. Okay so I want 16 on the top and the bottom, so it looks like I need to come up five pixels. Two, three, four, five, with my background and that would make that. And now I'm gonna recenter the arrow with the background. And now I'll select the title of the component and click this little guy right here which is resize to fit. Or you can hold the long shift, the command option shift R. Which is gonna suck everything to the bounds of what is inside that component. And then what we're gonna do, now you can see that okay because I changed this back my double lined titles are broken. So I'm gonna, let's bring this down here so we can see things getting changed. And now I'm gonna watch what happens to my layout while I'm messing with the master component. So, this looks fine, but I don't like type is still sticking out there so I think I'm gonna make the max width on this a little bit smaller so even the "Harmony and Counterpoint" even though there's plenty of room for "Harmony and Counterpoint" to live, that's not a bad amount of space, I'm looking at everything together and if this stays here it becomes the longest and it's like, I'm wanting to bring in some of this negative space in here to make the layout a little more clean. So I'm just gonna bring this in a little bit more. You could even go something like that if you wanted to. I don't wanna go three lines. And I don't want "Historical Synopsis" to be on two. I'm just paying attention to everything and again this is why having actual content is good in this scenario. So I'm gonna make sure that all these get... Now that this is 20 points, I mean 16-point font instead of 20, I can make these double lines a little bit smaller, so I'm gonna select all of these that are double lined and I'm gonna go 72 for all of them. Now let's tidy that up again and make sure this is at zero. And notice too how the page number is staying on the baseline of the first line of text. Instead of keeping this, like we could do top and bottom. Oh wait. If this was centered vertically, and also this was centered vertically, center. So look at this one. Where this is centered vertically and this stuff is not. We'd almost have to do, we'd almost have to take everything and do center vertically. But then it's still messing up because of the typeface. Basically I just wanted to point out the fact that having the page number aligned to the first line here, in my opinion is much more pleasing than trying to have the baseline of this type be different than this type and you're trying to align it. If it's an icon, then sometimes it makes sense to vertically align it. Like this particular icon, like if this page number wasn't here, you could possibly vertically center that arrow but I still think it make sense for all of this to be in the same path, I just feel like that weight feels a lot stronger. Like you have these two elements that are balancing each other out, and then the second line of text can just do its own thing while that line gets balanced. So let's bring the page number back in. And all right so that looks pretty good so far. It's nice and clean, but it doesn't look that interactive. Let me group the title here. And I'm going to group these. Maybe I'll give this like 40 points of space there. Another thing we can play with is maybe these should be medium instead of regular and maybe this should be medium as well. So we have medium and then these are regular. Maybe that's a little bit better. You could even experiment with hiding the arrow. Maybe you don't need the arrow and maybe you bring that back. Let's see, we got.... Pay attention to, I must have not paid attention to the left margin over here, it's at 39. I'm gonna put it at, we'll do 32 there. And then we'll make sure I do 32 on this side. So, this looks okay, this looks pretty good, but I think there's some things that we can do to make it look a little bit more interactive. The arrow definitely makes it feel more interactive but sometimes a simple change of the background color can do a lot. So even something like super light gray. And then we can add like one pixel of margin between everything. And now we have these little modules that are floating above the background that gives it... Now these feel like individual elements. Like that thing can be selected. And it's just that simple line. And this is after we've done all of our due diligence with the typography, that simple line gives it possibly just enough to make it feel like that is more interactive. So maybe now I'll move that up and see what that looks like with just that one line there. And you know I think that looks pretty decent. I'm gonna go ahead and click this and duplicate it. Whoops. Let's get rid of that. Just in the interest of time, I'm gonna actually, I'm gonna duplicate this and now instead of creating another component, I'm just gonna detach all of these by hitting command option B, so now each one of these are their own frame. And I can't actually change all of these at the same time again. So this will almost get archived as one option. 'Cause we know we can go back and recreate that. And this is now the more dynamic version that I can still play with. So what I'm gonna do is I don't think I'm gonna use an arrow in this one. I'm gonna go, I want there to be some margin on the left and right. So I'm gonna do 20 points on each side. So we'll close the gap on this thing by going I'm gonna select the title and do command shift nudge left. Once, twice, three times, four times. So now, I know that if I center this stuff I can get 20 points on each side. And to fix these items I'm just going to go in here and change the resizing. And for the title again I'm just go back and resize that the way I want it. And grab these and resize them to be even with that. Okay there we go. So now maybe this title is doesn't have a background. And maybe this rectangle right here has some rounded edges. I think what I'll have to do is I think I have to make my master background have this option selected. 'Cause I only wanna round the top left and right. Or can you not, I guess you can't do that. I thought you could do that. I know that you can if I rounded all of these. So now all of the master has a rounded edge component. You know that's another style. It has this ribbed look to it. It's not really what I was going for right now, but it is another option. I think I can change these to zero now. Override it. Maybe not, I thought you could. All right so scratch that, what I'm gonna do now is make this zero. And what I'm gonna do is I am going to hide this layer. And I'm gonna make a divider line. Before I hide this I'm gonna duplicate the layer and then call it divider now hide the background. And I'm gonna scale this down into like a one-pixel line. And I'm gonna give it like a, there we go, I think I'm gonna bring this background back to white 'cause I was originally planning on doing a gray background and some white modules but the corner radius messed me up. So I'm gonna save that idea for the next one. All right so now what I think I wanna do is see how this looks with the divider line lined up to the left edge of this title. So like right in there. And that looks a little bit dark to me, so I'm gonna bump that up in the light gray. And now there's actually too much space on the left. Let me make those go back, take four. Something like right in there. I like this one, honestly. Another thing we can do here is we could try like what if it was a really big number. That was like super light gray. I don't really love that, I think that's odd, 'cause nothings really lining up. But it does make it easy to experiment with things like that. I like the simplicity of this and the fact that our divider lines, this is an iOS thing with the divider lines lined up with only the left edge of that line height, but I think that I'm a fan of that. I know there's some arguments against it, but I like it. So I'm gonna option drag this. And now a really easy way to just test other fonts and stuff is just command select all of this a good classic Serif font, Georgia. Georgia is often a little bit smaller than other type sizes. So we might have to bump it up a bit. That's 16. If we bump that up to 18. Bump that one up to 18 as well. That's a cool look. Another thing we could try to do is like what if these page numbers had an interactive color, maybe a red or something. So that's starting to look a lot better. Another thing you could do is have a background behind all of this that is white, and then the background of the app itself has this gray. And then maybe the bottom has a bit of padding so it's not so odd. And sometimes on lists like this that have dividers, there's not a line dividing the top, so sometimes you can just say okay on the last the child of this list, the divider is not gonna show up, that way it, sometimes it feels weird to have a divider and then nothing is being divided from the edge of the screen in layouts this way. So. That's another option. And then if you put this right up against it it doesn't have a weird divider. But a lot of times I like to add breathing room, a little bit more breathing room. The same way we have breathing room at the top or for underneath the title I think sometimes having the a little bit of extra little padding down here just gives it a nice weight and it balances out the space on the top as well, to me. And so if we tighten up. If we wanted to tighten this up to like 20, then I'd probably, I might still keep 40 there, but you could also play with adding 20 or 40. It's one of those things that you might keep tweaking. You see how other pages look and you might come back and keep tweaking that. So I think this looks pretty nice. I mean, I think one of the big things that helps us here is the 16 points of type. I mean 16 points of vertical space. You know and you can always make that larger. You can always increase that space. If we wanted to hide the line, and just quickly see what things look like tighter or more open. Select all of these symbols and then just play around with the space in between everything. You know so if you wanted to add a line of subtext that talked about what that section was or if you wanted to add a little accent thing, you may bump up. Honestly the spacing could be that big, it could be 40 points of space between all these. And tighten this up so there's more, so it's just more of an aesthetic. It's this big open aesthetic. And then each one of these is just a giant hit point. 'Cause when you have your phone, it doesn't take much to just scroll the list and I think often we wanna cram things together 'cause we think of it's a mobile screen, everything's gotta be tight. But a lot of times you can take a simple list that only has 10 things in it and just make it nice and breathable like quadruple the negative space and see how it looks. A lot of times it's gonna give you a completely different feel. And this actually looks pretty good like that. I mean it might be a little bit, it's probably a little bit over done. But maybe something like 20, that looks pretty nice. We are starting to somehow I have messed my, I think that one that I just changed wasn't one of the ones that I turned into a 72 'cause it wasn't, "Rhythm and Portion" wasn't actually on two lines before. So now that these are a little off let me tidy that up again. So that should look better. And another thing that we could consider doing here and again I don't know if this is even worth doing or not, but you could do something like a bullet for both of these and make it gray or something. A bullet is option eight on the Mac. Yeah I don't really love that. But you know, sometimes I just have to try things out and see if they like it, most of the time you're not gonna know how it looks until you do it. Let's check it back out at zero. And I would be very hesitant to make any big decisions on this until I got in on my actual device and I did my mirror. Tidy that up and get it back at 20. So to do that I would just click here and then. Okay so now on my screen I'm just going to click the frame that I wanna mirror. And now I'm looking at the phone, right off the bat, it feels like it just definitely does not feel the same. So these are probably still too small. They're either too small or I just need to change basically just need to change the way this looks a little bit. So let's put those back right in there. And then I'm going to put all of these that are not two lines back at 51 I think it was. So not that one. Actually so that one, that one and that one and that one. Those should be back at 51. We'll tidy that up. Put this back at zero. Oh wait that did not work, hang on one sec. Zero, return, okay so now. So this frame title again, so it actually looks, it's looking pretty good, I just. Table of contents title is a little high. And I definitely think that we're gonna wanna use a bolder font to weight here because it just feels a little light weight. And our only option is I don't really love the bold Georgia. I like the bold italic, but that looks weird. So what I'm gonna do instead of this is just going with 20. Maybe I'll go up to 22 actually. And now I'm gonna have to adjust these again. Looks like a two-liner might need to be like 84. Okay, now I'm gonna tidy this up again. 84. Okay. All right so this actually looks huge on the screen, I would not have designed it this big. But on my phone it actually doesn't look that bad. I think the only thing we need to do now is just give it some more negative space in between. I think one thing that could look cool though is because I really like the bold italics for the Georgia, I'm gonna give the page number the bold italic. And now that we've changed the font size to 22, we could either leave these as 18, and then just align them to the baseline, or we could just go ahead and select all of these and make them 22 as well. I don't love the huge page number, so I think I might just leave them at maybe even 16. I need to change this title. We altered our component instances a little bit too far without changing the master component. So I'm gonna paste these styles onto here. I think I also need to make this, I need to update the height of this component just so that it's 16 on top and bottom again. And then now, let's make sure we align this number just give it a one so we can... And then we'll do 24, and this will be, make that 24. And then we'll make this 24 as well. So just a little bit of a clean up thing there on our component. And now that these components are now 57, let's go in and select all of our... Those components make them 57 again. I know that at the time of this recording, Figma is, they currently don't have the smart components where it expands based on the preset padding. If you use Sketch and you use smart layout, you can set that as a top to bottom and it'll retain that padding inside of your symbol which is a really cool feature. That Sketch just introduced. Figma said they're working on it, but they don't have it yet, so. If they have that now when you're watching this video, then definitely use it. But like I said, right now they don't. Okay, so let's check that back out. Select the frame again. Okay I'm liking this, I'm liking the way this looks. But now that we have the smaller page numbers in red, I like the way that the titles are working. The thing I don't like is the section numbers being, for one, they're not aligned to the baseline. I guess somehow... I don't know how that happened. This needs to be 84. But they just, they're floating over there on their own and they don't really look like they're living their best life over there. So what I'm gonna do is I'm gonna make them the same size as this, 16. 16. And let's bring that in. And maybe this is a little bit like a light gray. And maybe it is just italic. Oh for some reason, okay, I need to reset the size on... Reset the text style on just those. Whenever you override a component's style, and then you update the master, sometimes it won't change there 'cause you've made some override changes. Sketch and Figma handle that a little bit differently, but you gotta watch out for it sometimes. I know that, I'm pretty sure this is page like 17, not page one. All right. That's looking okay, I still don't love the way this one looks. Or the way this number looks. Why does it not look like it's aligned to the baseline? Oh because some of these threes drop down a little bit lower. See how much lower that drops? They're just like the old-style numbers. I don't know if Georgia has the ability to override the numbers. Some typefaces provide like contextual alternates. That's just something I'm gonna have to live with for now. Just checking this out some more. It's okay. Maybe if we combine this as more of like a single element. So that's maybe eight and then I bring this back over there. And then that's like... I'm looking at it on the phone now instead of just the screen, so I'm actually making adjustments and watching it update on the phone. So that is 16 and 16. This is 16, 16, just making sure these sizes are the same. Let's go ahead and try that as bold italic and see if that's too much. Yeah that's a little too harsh. A little too much weight for those guys, so I'm gonna undo that. And maybe, you know I'm gonna experiment with bring this divider back in. Bring it to the left edge of that and I'm gonna make it a .5. That would actually translate into a, if you're designing at 1x, a .5 line would translate into a one-pixel line on a 2x screen. But the iPhone 11 is actually 3x. So one pixel on a 1x screen actually is, a one-by-one pixel would look like three pixels on the iPhone. So you can actually get away with doing like a .33 line. And then aligning that to the bottom. But I don't wanna do crazy math. I'll do .5. And then I'll make this at 56.5. And you can hit command Y to see the outline mode of what you're doing. That way sometimes when you're dealing with shapes like that you can't really see that well. Command Y or also if you go to view, show outlines, that's how you do it. All right so now looking back at the phone. I think we need to hold the constraint to the left on that line 'cause I think it was getting shifted a little bit. And now that I'm looking at it, maybe these go inside of here. Wait let me actually, I'm gonna grab this line again, I like the idea of bringing this over so that that lines up there. I feel like that's a nice, that seems like a cool effect there. The negative space there around the... The way that this is working, like the negative space right in there underneath the three, something about this lockup just feels nice. And now that I've done that, I might actually make these a little bit smaller, so I think this 22, let's knock it down to 20. And let's actually, I'm gonna click all of these and do reset all overrides, oh wait we don't wanna do that. Let's do reset size. No, let's don't do that either. Let's command select these and reset the text style. Okay, so that will make it 20. And we wanna make sure that, now we've added two pixels of margin on the bottom here, so what I wanna do is move the line up twice. And move that. So I'm just trying to get 16 and 16, again here. I did something wrong. 16 and 16, there we go. And then our line. Somehow our line got messed up. Fix that guy, put it back. Okay. Also, I need to make sure that this line is pinned to the right as well 'cause we've stretched these out. Okay something's still messing up. Oh I forgot to command click right, so I need to be left and right versus just right. So now the line is staying. Let me click the top here so I can see. I'm just checking it out now to see how it looks. It's looking better I think. Maybe the line is a little too thick still or maybe there just needs to be a little more negative space around these. I mean it's pretty good as-is, but let's just give it... What I'm gonna do so we can see a little bit better is give this background a white color. And what I'm gonna do is select all three of these, one, two, three, four, and move them down four pixels, and then I'm going to grab the title of the component. I'm gonna add eight pixels, oh wait what was is? It was at 55. I'm gonna do plus eight, right there in the height field, hit return. And so now. That should be pretty close, so we've basically added a little bit. When I did that though, it messed up my text fields. So let me undo that. All right, what I'm gonna do is I know right here I need four more pixels so I'm gonna click here, come to the center and hold command which is gonna make this scale without anything happening. That way that gives me my four pixels and then I can move this down. And then I don't have to worry about my text messing up. Let me just make sure these baselines... For some reason the baseline on that one got messed up. There we go. We could also, one thing that I, I always forget to use my guides, that sometimes can be helpful. Shift R to show these rulers. All right so 24 there. And 20 there. Maybe we bump these in to be 24 as well, then we need to change our line. A little bit. All right so now this thing is 59, so let's go in and select, let's just select all of these and make it 59 and then I'm gonna go in and select the double line versions and make them larger. What is that, 88. All right let's clean this up. Select these again, tidy, we'll do zero. Okay, click that again, I'll test it on the phone again. This is looking better. I definitely think this looks pretty good. Maybe we reverse the style of these two just to see what it looks like. So what I'm gonna do is, I'll just make a copy and do command option C on that. Command option C, command option V. And let's reset the text style on those numbers. Reset text style. Oh, I guess there's reset text color as well, maybe. Text, oh reset fill, there we go. And now that we're not messing around with that line anymore, really the thing that needs to be very tiny. And I also think that maybe I liked it better with those hanging off. And maybe it doesn't go all the way to the edge, maybe it just goes to the number there. No, all the way I think. There we go. All right so I could keep playing with this for a long time. I mean that's part of what design is, you just, you design something and you change it and you change it again, you change it again. At this point, I'd probably start experimenting with maybe some other Serif fonts that have a little bit more of a variety of weights, that has maybe a bold, black, extra black, or a semi bold or medium. Georgia only have regular and bold, which is fine for this quick example. And this actually looks pretty good. It looks decent. But I would get into Google fonts and start checking out other serif fonts or just experimenting with some of the other fonts that I have. But that would be how I would actually design this screen and I would probably maybe even experiment with a dark background with the lighter text and play with maybe adding some controls at the bottom for dark mode or light mode. But that's how I would start it off. Trying to get the layout in place. Keeping everything in mind when the box model and just changing those subtle measurements between okay maybe the type needs to break like this, maybe the line breaks need to happen shorter, maybe this needs to float. Just so, it's basically just a lot of questions and you experiment until it just feels good. And if you feel stuck, post your work to someone, send it to someone, get some feedback. That's what our side channels for and that's what having the design community like Dribble, post your work to Dribble and say not every Dribble shot needs to be number one popular. You can post problems like this and say okay I'm having trouble getting these to feel right, does anybody have any type recommendations? What could I do to make these work a little bit better? Don't be afraid to post things like that. I think some posts like that are refreshing, so anyway I hope you enjoyed this extra long version of me live designing this. Like I said, I could probably keep designing this one screen for another couple of hours until it really felt nice and fully set. I feel like it's good now, but it's not like, it's not great. It's pretty good. It's like a B+ or an A-, in my opinion. But there's still something missing that just makes it that makes it not feel completely done. And I don't know what this is yet. So sometimes that's just how I go, sometimes you just, it needs to be good enough and you have to stop because you have a deadline. So that's just sometimes how it goes. You might also start looking at other examples of editorial design, editorial layout and get some ideas. But anyway, I could go on and on. I could go on and on on this one lesson for a long time. So I hope you found this helpful and I'll see you in the next one.


=== FILE: 3-02 grids containers.txt ===
------------------------------
﻿- Grids are perhaps one of the most important things when it comes to layout for screen design. But it might not be exactly what you think, it's not some rigid immovable grid that can never change because as we all know, screen sizes are different down from mobile phones to laptops, to larger screen. So while you are going to design a static grid, it's never gonna be completely static when it gets online or at least it shouldn't be. So you need to think about your grid and also the things that are inside of the grid containers as stretchy, movable objects that have some parameters on them at different sizes. So let's take a look at a few different examples. But it's important to know that grids exist for a reason. They are a source of truth and they provide the kind of necessary structure that just keeps information and graphics clean and readable and scannable, and once things are lined up and integrated, it just kinda gives it a nice quality, a nice finished structure. And the grid actually serves as a tool to the greater attribute of just simple alignment. So having things left aligned and having a straight sharp line and things balanced out, things that are aligned and balanced, they just feel like they invoke trust, and that's been thought out. And the grid is a tool to help you achieve that alignment. So the goal is alignment. The goal isn't to use a grid, the goal is to achieve balance and harmony. So let's take a look at a few examples of what I'm talking about. So one of the most common grid sizes for a website is a 12-column grid. So you can see here, if I open my properties panel, you can see I've got a 1440 width website. And I just went to website, MacBook Pro to create that artboard. And it doesn't really matter what size you're designing for because we are in the responsive web design era and everything should be responsive. So it's not really gonna matter the exact size. Back in the day it used to matter if you're safe to design 800 pixels. And then later on, it was you're safe to design 960. Now you're safe design 1024. Now you're safe to design 1280. That's not really a thing anymore as much as it used to be because everyone has embraced responsive design. And we'll get a lot more into responsive stuff later, but for now, I just wanna put that out there that this is more of a temporary grid for this particular screen size. So 12-columns is popular because it allows for you to have multiple options. So if this grid here is 12-columns, and to do this and figure out all I did was click on the artboard name and then just add a grid right here. So I go layout grid, click this thing, I want columns, I want 12 columns, and I just left the gutter at 20. And you can stretch this all the way across or you can center it, and let's make this a little bit wider. So something like that, that's fine. So the reason this is popular is you can go all the way across, you can easily get some left and right action going on. If you wanted three columns wide, it's pretty easy to kinda create this dynamic. And if you wanted four columns, you just kinda divide it and make it happen. If you ever wanna align things up, it just makes it a little bit easier to get all of this working. So if I go back here and disable that grid for now and align these up with 20 just so it looks nice and even, there we go. So there you go. That is the basic usage of a grid. And if you were gonna start putting content inside of this grid, your typeface, you might end up having a really big title that may or may not align to this left edge. So this is where your containers come into play. We might actually decide that we want 60 pixels of margin or padding rather on the top left and right. And then that might affect the internal padding of this module, it just depends on what the content is. So the grid is just there to give you a starting point. It's not rigid and you have to abide by the grid. It's not all hail the mighty grid, and in fact, in a lot of projects, I don't even start with a 12-column grid or any kind of grid, I prefer more of a content out approach. And it's for this exact reason 'cause you never know exactly what's gonna go inside of these containers. So if I scroll over here and check this out, I've got the same 12-column grid on this, just super rough like kinda blocky wireframe thing, as like incredibly low fidelity kind of a layout. So you got maybe a logo, some navigation, headline, calls to action, maybe this is a background color. And then you kinda have this S curve that's going through here with the features and whatnot. It's pretty standard layout. Well, if you're gonna use a grid, that's totally fine. The grid is going to help you out to lay this out, to make sure that this is nice and aligned, and the images and the text are nice and aligned. And that doesn't mean that you can't have an image that's larger, that's breaking the grid, because that's also its form of alignment, it just kinda helps you set those boundaries so you can actually see what's going on. Get our grid back. But like I said, it's only temporary for that size. If you scale this down, you're not gonna use a 12-column grid on a mobile layout. In fact, I can't recall a time I've ever used an actual grid or an overlay on a mobile layout 'cause it doesn't really make that much sense. Most of the time, you're gonna just scale things down into a one column layout. And usually at the very most, I mean, you might have some images that are in a bit of a grid like this and maybe this swipe across or something like that, but it's still more of a one column layout right in here and you don't really rely on that grid that much because once you get into mobile, I like to rely more on my implicit grid that I use. And we'll cover that in another section, but I do mainly just wanna point out that 12-column grid is great to get started and it definitely helps you with aligning up different options and just kinda keeping things balanced. So I wanna show an example of what this looks like in practice. So if you look at this Global Design Survey that Dribbble released for the end of 2019, you can see that it's kind of like a nice, big, large image, and they're defining the edge of their grid right in here. So you can imagine there's probably some kind of implicit grid right in here, and they're breaking it with some of these avatars which is kind of fun. A lot of times you need to break the grid to make things a little bit more visually interesting. And it's highly unlikely that any of these avatars are adhering to a particular grid. They've just kind of placed them in an area that makes sense. So, as we scroll down, you can see that this is now indented from the top area. So if I scroll up, you can see there's a big indention right here. So, they could have left a line that, but maybe they're shifting over their internal content, maybe they wanted this to be a little bit more centered or they might have just chosen to follow inside of the internal grid. But you can see now, one of the things that might have made that decision for them as they have this larger grid across here, and now they want this data up here to align with this vertical line so that they have this kind of line of continuation going. If I leave my cursor right here and you scroll, it's just a really clean and nice way to execute the left edge of a grid. And the same way with this picture right here, I'm sure if we scroll down, we're gonna get this text. And you can tell, this text is not exactly left edge aligned with that image. And it's not that important that everything is exactly lined up, it might be lined up and maybe that picture because it's breaking the grid over here, they've actually indented it from that side. So it just adds a little bit more interest. So there may be a rough grid to keep things going, but it's not necessarily some rigid and immovable thing. And you can see now that these white tiles here are, if I leave my cursor there and scroll all the way up, that might be in the left edge of the grid, the actual grid, and maybe the title is indented in 60 pixels or so. So as you scroll through this page you can kinda get a feel for what the grid might be, but it doesn't necessarily have this rigid quality to it. So these tiles are lining up with the left edge of that text, kinda have the same thing going here, it's kind of the slight juxtaposition. So if we pull this screenshot into sketch, adding a grid and sketch is a little bit different. You click this little icon here, and if it's not showing you can go to view grid or layout, this is actually a layout. The grid is slightly different. And then you can go to layout settings and adjust everything in here. And I added an 18 pixel grid or an 18 column grid to this just because I very quickly just wanted to add something that roughly lined up, just so we could look at this in somewhat of a grid format. So I tried to align these up where they were forming a grid and there was a little bit of a space. That way, it just helps to see the vertical lines. So you can see that even on this, it's not necessarily following a very strict grid, it can be a little bit loose, it's just a matter of kinda using it to help you start to line things up. And like I said, the grid serves the ultimate purpose of achieving alignment and balance. So it's not even important that the grid exist. If you are achieving balance and alignment with other items or other methods, you might even just use one rule to align two different objects. So in this next example, this is the switch to studio project that I created for Invision. And I'm gonna make these lines a little bit darker so we can see what's going on here. All right, so now that I've got these grid lines showing, I'm going to reload this page on another tab just so you can see the difference between the grid showing. I don't know if it's coming through or not, but it is kind of an aesthetic where these grids are showing a little bit hard to say 'cause I made it intentionally really dark, so it wasn't too distracting. But right here, this is a simple three column grid, and this is one of the only projects that I can really think of where I really stuck to a grid. And you can see, it's just very simple. So this is kind of breaking in a two column grid, but it has a maximum width on here, so it doesn't get too close to this button. And I have this little navigation piece aligned here. And as we go down here, you can see this stuff as I'll write a line here, the footer has this left line. So it just kinda creates this left and right balance between everything, and it also just kinda helps with the layout. So all of these are gonna fit within that particular grid. So now you can see, if I actually test the responsiveness of this webpage, you can see once I get to a certain point, this grid is gonna break. So I'm using a media query to change the position and the size of the title for smaller screens. But eventually you can tell this three column grid is not gonna work out so well. So I have to constantly, you have to think about what's gonna happen on smaller screen. So now I'm going to a two column grid and you can't see the double lines right here. But also, eventually this two column grid is gonna break. So eventually I go to a one column grid. And that's all things that are possible with responsive web design, and even with applications that are larger, you can change from a 12-column grid to a 6-column grid, to a 3-column grid. It's not something that is rigid and immovable. Now, you can't design at a stretchy size when you're using a design tool because by definition, you're moving things on a fixed canvas and you can use resizable components and everything, but while you're designing the one component, it is gonna be fixed. So you have to kind of adopt this mindset that things are gonna be stretchy. And you start to kinda understand that the grid is helpful, but it's not gonna be some kind of omnipresent thing that's always going to be exactly the same on every single screen size. So this is just a good example of seeing something that does adhere strongly to a grid, but it also changes pretty dramatically as the screen size gets larger and smaller. And so if you look at some of these original designs that I did, this was a big document where I'm just trying to get some ideas. And I was actually trying to design this mobile first, and I'm just kind of playing around with some designs. I went in and kinda made these illustrations and decided, okay, each one of these is gonna have this kind of set up, some kinda like title, basic introduction, and then a little graphic. And I decided, okay, let me try to lay this out on a larger screen. And you can see here, I'm not really using a grid right here. I'm just trying to... I do have kind of a maximum width, starting here, because I just wanted to go three wide with these, you can see it's like kind of centered, it's 147 over here, 148 over there. But I haven't really yet defined a grid because what I like to do with grids is kinda let the content dictate what the grid might need to be. So I'm designing some of this content first, and then as I am kinda working through this, I'm like, "Okay, I probably need to start applying "a little bit more short term to this" So I started a new document here. And then in this one, this is where I started with this screen here, and I was like, "Okay, what if I use this three column grid?" And then I kinda liked the idea of this being techie, I wanted it to fit the kind of studio aesthetic. So I'm using this typeface from Klim, Klim Type Foundry, I think this is called Trim or Micro, I can't remember. Yeah, Micro. And it has these kind of hard edges cut onto the characters. And so I thought it would be cool to use the grid lines and these little techie blinking dots that you can see on the actual site. So this thing kinda blinks as you go across, some fun, little hover effects. And then even if you go into this, you can see I'm not using the 403 pixel grid or a three column grid, I'm using kind of like a big kinda two columns and then one. So it's kind of the spirit of the three column grid is there but it's changed a little bit for the internal page. So back in this design file, this is kind of when I decided, okay, I'm gonna use this three column grid, and it's based on the fact that I have these five modules here, and I'm anticipating adding more. So I know that I can kinda pop them in and add them here. But something about this layout, just wasn't working for me. I didn't necessarily want to have just a huge title, I wanted it to have a little bit more of a unique feel. So I ended up carrying the same grid over, and I was like, what if I kinda do something where maybe I don't start on the first, maybe the first module doesn't start until the second, and I can have these kind of juxtaposition of things, pushing things over to the left and right. So that's when I started working on these designs where I brought in just a huge typeface, I'm using 110 point size here for this larger title. And then I wanted watching the trailer to be the kind of main call to action. And then as you scroll down, then you get these big tiles. And so you can see I'm kinda mimicking the kinda cut off title here with some of these other titles. And these internal containers, they are not really based on a grid. I'm using this three column grid to serve as a general baseline, but once I get down into the actual content and the actual containers, I'm just kinda doing what I want to do. But I'm still gonna make sure that this title is left aligned with this here, and I have the strong alignment quality. So you can see all of this is 38 from the edge, usually I would do like 40 that might have gotten bumped over. So this might be 40 from the top and 40 from the left. And then I get in here, I'm using more of an implicit grid here, which I'll cover more in detail. But just to say all that, just to say that the grid is a starting point, it just kind of helps you frame out the content that you're designing. And the grid is also a lot more common in bigger websites, like larger screen size websites, like laptop size, desktop size on those larger screens, that's when you'll get into more of the three column, four column, six column, one column, a lot of those, the ideas of the columns. But once you get down into mobile like you saw on the mobile version of that switch the studio, things are gonna get more into a one column grid, not even a grid, it's gonna be one column. And then you're gonna be a lot more reliant on your spacing system and your spacing structure, which is more of the implicit grid. So if you look at this app that I designed, back in framer here, I'm not using any grid at all, there's no layout grid. I'm relying on the idea of spacing rules. So I've got this 16 pixels from the left, 20 pixels from the top, 20 pixels from there, and this is 16 from here, and then I've got, these are 6 pixels apart. I think that actually got moved a little bit, these are supposed to be zero. But the idea on the smaller screens is that most things are in a one column grid. And technically, I mean, you could call this a, one, two, three, four column grid. In my experience is not that helpful to try to grid out every little detail, grid the bigger, kinda larger structure if that's helpful for you. But then once you get down into the weeds of, especially on mobile screens, I'm gonna rely much more on an implicit grid structure than an overall bigger, larger grid structure. Now I'm gonna cover implicit grid in a lot more detail in another lesson, but for this lesson, just grids and containers in general. Some of the key takeaways are gonna be: Grids are important. You should use them, but you shouldn't rely on them as the rigid immovable law that all things must snap to, it's just a guide and a starting point. So don't expect your grid to do all of the designing for you, it's just not gonna work. It's gonna help you align things which is a great start, but then you're gonna have to get into the containers and the modules inside of that grid to make things work as well. And so you need to start thinking about your implicit padding and margins that you're gonna use across all of your elements. Whether it expands out of the grid or it adheres to a very systematic approach, that's up to you, but the grid is not gonna design for you, it's just gonna be a good starting point. It's also important to remember that grids are going to be stretchy, they're gonna expand and collapse based on screen size. You can have fixed sidebars and fixed elements that don't get smaller with the rest of the content. Some of it can remain fixed, but that's gonna be based on the content. So basing it out on like a content out approach, maybe your left navigation is gonna be a fixed width, while your right side is gonna be stretchy, but then once it gets down into the smaller view, something's got to happen with that right now, maybe it goes into a little hamburger menu, maybe it changes into its own stretchy container above the content, but something's got to happen once you get down to mobile. That's why I often design mobile first with applications and sometimes the marketing sites, but a lot of times, marketing sites have a lot more flare going on, so sometimes I'll start larger with those just to get some ideas going. I'm going to provide this sketch file as kind of a starting point. You don't have to use sketch, you could use Figma, but I have this file and I wanted to show you how some of this is set up here. I've got this one symbol here called line item, two line with image and icon. So if I look at the symbol here, you can see I've got this avatar image, I've got a name description, and then a little icon. The icon is not necessary. I just have this as a way to show some component overrides, but inside of sketch here, what I've done is on this element, if you have an image inside your symbol, you can choose an image and either upload one yourself or you can use the sketch data here and grab a different face and pop it in. Any of these can be updated with some random faces or random names. And I'm only using one symbol here, and I'm just updating it and I'm hiding or showing these icons based on what that particular line item might need to be. So for your homework, I want you to come up with one of your favorite TV shows or movies, and I want you to design three to five of the characters and get a cover image and a title and a description of the show or the movie. And maybe you use some kind of casting module, and it has like three to five of the main characters, and you use a setup similar to this. It doesn't have to be the same design, but I want you to design a small version, a mobile version, and then a larger version. And you can use this file as reference to see what happens possibly between the mobile casting version, and then maybe on your larger version, you do have a 12-column grid that is showing, I'm gonna hide this, Control + G, actually Control + L will move the layout. And so maybe you have your once 100% stretchy casting module is now a fixed... Let's see how wide is that, 380 pixels based off of this layout. And maybe you have a big title over here for the name of the show, or maybe you move these down here, it's up to you. Maybe you have a big image, you have a title, but use the grid here to kinda help you get an idea of how this stuff is gonna be laid out. Just gonna go bold on both of these. I'm not gonna design too much of this, I just kinda wanna give a quick idea of some things that could possibly work. Maybe this is the cast. So use the grid, try to get an idea. Maybe the description is here and this ends up being something else. It's not that important that you get everything ever written about the show, but maybe you use Wikipedia or IMDB, or something like that to figure it out. And decide based on your grid, do you want this block of copy to extend all the way over here or would it actually be a little bit better to keep this a little tighter. Use this grid and kind of feel out what feels balanced and what is aligned, and then take this same exact thing and put it on your mobile screen that you would have over here. So you might have, your cast has actually moved down. and you try to figure out how to change this information from a larger desktop screen down into a smaller screen. And you're gonna have to change the title size, you're gonna have to adjust a few sizes and widths of images, but you will get an idea of how you can transition between a single column grid and start needing to rely on the implicit spacing, and how that will kind of transform and grow into a larger explicit grid where you're explicitly saying 12 columns, three columns, four columns, something like that. And it's okay to not be a hundred percent sure of what's possible or what should happen in regards to transitioning between the mobile screen and the larger screen. I'm not expecting you to develop this or to know all the CSS rules, but I just want you to kinda get used to the grid and focus on the containers and start using them as reference, and kind of use that as a starting point. So if you have any questions about the grid, about using the grids or the containers, post them and slack, get some discussion going around it, but get started on the homework and post your work and we'll take it from there.


=== FILE: 3-03 implicit grid.txt ===
------------------------------
﻿- Implicit grid this is probably one of the most important lessons in this entire course, implicit grid. I feel like this is almost like the inner formula for making interface design work. And what I mean by implicit grid is it's like a soft grid. So what I do is I take a number, in my case four pixels and I use that as like the baseline grid measurement for everything in the entire app. So four pixels, or eight pixels, or 12, or 16, or 20, and so on and so forth in multiples of four. And I use this very I would say 90% in kind of like a rigid context. Now there are times where I might use a 10 pixel margin or padding. But I don't think of that as breaking the grid. I just think of it as like a 2.5 version of the four pixels. So four times 2.5. I'm using two and a half almost like a half grid when I'm spacing it. And so I use this implicit grid for almost well not even almost every single element on the page, whether it's 120 pixels, or four pixels or 12, just everything has a relation and the implicit grid really just it is nothing more than negative space. It refers to the negative space between objects. And I have been using this for a very long time. And it just it's like the glue that holds everything together. So let's take a look at these examples of the implicit grid in action. Okay so first of all, I have a very zoomed in view of the contrast app that I've been using here. So this contrast app that helps you pick different color contrasts and know if they are failing. Or passing. You can see right here in between all of these elements are multiples of four. And I can kind of describe why I chose each one of these measurements. So first of all these two elements are very closely related. You're choosing a foreground color and you're choosing a background color. So I wanted these elements to be really close together. So I chose four pixels of spacing between those two elements and this little switcher in the middle, it is pretty closely related to switching the colors but it's not the exact same thing as switching the color as the actual color. So it's this is not related to the color as much as the picker is related to the input field. So that's why I chose eight pixels to spread that out a little bit more coz they're not quite as closely related. And you might think oh four pixels and eight pixels, does that really matter? And the answer is yes it matters a lot. Because all of these little tiny decisions across all of the little elements are what are gonna give your interface that clean feel. And it's gonna feel right. So if you look back at this version of the app it might be hard to put your finger on why this has a nice clean balance but I believe well it's the type size and it's the spacing between everything. And it's not just some arbitrary number it's an intentional number. So if I look over here you have your score. So this is not as related to selecting your color or switching in color. And it's more of like a standalone result. So I wanted it to have a lot more of space. So I'm using 16 times pixels here. And the reason I'm not using 16 pixels on the other side is coz a lot of time and in fact the majority of the time you're not gonna have such a super high contrast like that. A lot of times you're trying to test colors that are barely passing and you're trying to find just the right amount of contrast. And when you're doing that your numbers are actually gonna be in the single digits. So it just got 7.64, or three digits versus four digits. And I wanted to point out the fact that most of the time, we're gonna have a three digit number there. And that's gonna make it look a little bit more like 16 pixels and I didn't want the app to be stretchy based on the result. So I'm making a little bit of a trade off right there. So that's why the there's 12 on the right side versus 16 on the left. And then with the settings icon I just wanted it to be even an even amount so 12 on the inside here. And then looking back on the left I wanted the same amount of space between the actual score A, triple A, AA large things like that and the result there. So there's multiple versions, you can have double A, you can have double A large or triple a and triple A is the widest version of the score. So I use that as the maximum width. Knowing that if I only have a double A score that is obviously not gonna be 16 pixels but that's fine. I just wanted to use the maximum to make sure that you could see okay, 16 here, 16 here, it's just kind of a good rule of thumb. And the reason I use 20 on this side is because when the app is pulled off of the menu bar we need to bring in this little X to close it out. And having 20 pixels versus 16 gave it just enough room to where it wasn't really crowded around the top of this A right here. And also I think the extra negative space on the left it kinda helps give this score a little bit more prominence because that score is actually what is most important on this entire app. So that's a breakdown for this tiny little app in terms of how I use the four pixel grid or yeah the four pixel implicit grid. I wanna go to the symbols page and zoom out here and go to this one. So we have all of our spacing between all the elements but then inside of those tiny little elements if you click on this text field and it's a little bit hard to see with that orange lemme may actually change the color of the um okay where's the background color? Let's just change that to like green or something. Okay so if I click on the input text and oh I'm sorry this is a symbol that's why it wasn't showing the rulers. So if I click into that input field, you can see if I hold option and I look at the measurements around even the input field I'm using four pixels of padding on top and eight pixels on the left and right. And a lot of times I use slightly most of the time your buttons and your input fields it's gonna need a little bit more of padding on the left and right than it is on the top coz it's just kind of the way the balance field so if I if this was a little bit tight all the way around, it might feel a little bit too crammed. So a lot of times you're laughing left and right padding is gonna need to be a little bit more than your top and bottom. But even at this detail I'm using this implicit grid system to say okay, four on the top four on the bottom left and right. Sometimes if I'm using a bigger version, I might do 16 pixels on the top and maybe 24 on the sides something like that and you can play around with it. But using that four pixel grid is just a really good system to kind of think Okay how is all this gonna fit together? Some people like using an a pixel grid and not going below four but for me I feel like four pixels gives me greater flexibility. And the reason I don't use five or seven or some kind of arbitrary number like that is because for even numbers can always be divided by two and it's especially helpful if you're going from one x to two x or three x or four becomes eight or four becomes 12 depending on one, two or three x if you're kinda worried about that. So in another example we're looking at this business our screen on this app. And I've shown this before but it's just another version of the implicit grid in action. Alright so you can see here on this line item I've got 20 points of spacing here or 20 pixels. So that's just five increments of four. Whereas the top and the bottom right now this is 14 and 15. But what I've really done here is I've decided that I want all of my tap able line items to be 48 pixels tall. And then I'm just gonna center align this content inside of here. So that starts to somewhat break the the implicit grid but not that much coz it really depends on what your line height is. Coz I could easily adjust this line height to make it end up being 16 by 16. So if I have a 16 point font and the line height is set at one that's gonna be an even amount. So with the type size inside of an actual border it's gonna be based on the line height in terms of how big that text box is. But sometimes if you have you know your line wrapping into a two line kind of thing you're gonna want more than one points of line height. So that might affect the way the four pixel implicit grid is added to those internal elements. But it's not that big of a deal. Most of the what I'm worried about here is the left and the right. And over here on the right I'm also using 20. And then I'm also making a decision to do 24 on the right and 24 on the left. So that's kind of the main focus of the margin and the padding on this particular app and most mobile apps and all the little details. Coming out with the left and right margin for the cells and then the left and right margin and padding inside of those cells are gonna be key for kinda establishing that system. And then I'm gonna use the implicit grid also to say okay all of these elements in between here if they're closely related I'm actually using six pixels here which is kind of like one and a half of an implicit grid of four. And if it's related but a different section I'm using 24 pixels as the rule for spacing out things that are not related. So all of my all of these are related because you can choose between these three things. But this time zone is slightly different category and a slightly different piece of interface on the screen. So I'm using 24 as the rule to divide that content instead of using a line or instead of using some other technique I'm saying that 24 pixels is the rule for separating that type of content. And that way now if I wanna go down here and add another third section 24 pixels again is the rule. So I don't have to worry about some crazy baseline grid or a bunch of very specific rows and columns. So the content can grow as long as it needs to grow. And I'm saying okay, for every one that's closely related I'm gonna use four or six pixels you get to decide that change it to four, six, eight see what looks the best and then kinda lock in that implicit rule set for that particular screen. And this is also gonna make it easier for developers to put this into practice coz you can even tell them say I'm using a four pixel grid for this I like all of these elements are based on that it's either 24 on the side or 36 and between 32 whatever it is you can kind of more easily communicate the system that you're using to design and space everything out with. Even inside of this little component here you can see I've got this little speaker icon and it is 18 pixels from the side it probably should have been 16 that might have gotten bumped over. So I'm going 20 on the top and bottom 16 on the side. And then over here you can see that the play icon I'm going 22 from the side that could have been 18 or 24 I think because this one was 18 I think this stuff might have got bumped over a little bit. Usually wanna go even on both sides. So if these are 20 and I would probably wanna do 20 there and grab the speaker make sure that's 20. And then we've got our slider. There we go so that might have gotten shifted a little bit. So now I've got 20 on the left top and bottom 20 to the right same thing here 20,20,20 and then 20 to the left there. And so that just kinda gives it a nice clean feel the negative space is gonna be the same all the way around and it's just gonna keep that consistent feeling. So inside of each cell has its own little implicit grid rules and then go out one layer and then you have another set of implicit grid rules. So I'm using the same six pixels here to kind of I'm saying anything that six pixels is a little more closely related. And anything that is in the same ballpark but needs to be spaced out a little bit more is gonna be 24. So I'm establishing those rules as I'm exploring and designing and I'm thinking about it and just having that four pixel grid just kind of makes it a little bit easier of a system to rely on. And I'm using 24 on the sides for all of these. And here it is. In Adobe XD I created these designs for an Adobe XD workshop I did at Adobe max. But I just wanna point out that all of these look a lot these are very different looking apps that from the contrast app to this business hours here that you're looking at on this phone app. And now in this random This is kind of like a time traveling concept out. It was just some designs for just kind of a presentation but you can look in here. If I click this president name and I'm measuring from the avatar edge you can see that it's 24 pixels. And the space between the date the time and the year. That's gonna be eight pixels. And the space between the avatar and the left edge of the screen is 16 pixels. Same way from this thing. I've got the title here 16 pixels from the left edge there. And it's just an easy way to kinda make sure that all of your stuff is nice and even and it's spaced properly. And so it's just kind of the underlying role that I use for every single design that I've ever done when I first after I learned about the implicit grid. So this is a IOS app called roadie that I designed. This is quite a long time ago. But you can see in here even even on this one I'm going this one is 30 pixels from the avatar and the image the image is 20 from over here and of course some things are gonna get knocked out of place. It's not always gonna be exactly perfect but it is just very good unit of measurement especially for something like this. I've got my title which needs a little bit more room. And since this stuff is not this stuff right here doesn't need to be all up on that information coz it's slightly different. So I can use my four or eight pixel rule to kinda separate it as necessary. So this is 20 pixels from the avatar and this avatar is 30 And then the same thing where I'm using these as rules kinda throughout the entire app. And I'm just bringing up a lot of different examples because I wanna point out that all of your apps can look completely different but you can still use that same four pixel grid rule for your tiny details and your spacing. And we're gonna go back way back to 2012 or so. And this is when I was still using Photoshop to design apps. This is actually a mobile website that was created for Wells Fargo. And if I scroll in here and I choose this you can see that even these okay. This is probably closer supposed to be 40 but I'm using this implicit grid on this. So these titles are 40 pixels from the top. This text right here should be 16 pixels from the title and this icon here let's click this icon. And these are I guess that's 48. Some of this has definitely gotten shifted. So the title from the icon it's a little bit harder to do the measurements in Photoshop. So title from icon the spacing there is 48 pixels and then the icon from the edge is 44. It's very likely that I might not have been as good at using the grid back then. But I just wanna point out I'm using this grid all the time. And I've been using it for a very long time. And it is definitely the secret sauce for making sure the interface components are nice and aligned. Even on this streamline website. So if you look at all of these little containers and a lot of this stuff I'm using the implicit grid even on this stuff like inside the spy icon even for the margins inside of here. Even the way that I'm using I'm kind of deciding to make these CTAs these call to actions. All of the little details inside of here I'm using the implicit grid to space all of this out. Now I do have an explicit grid that saying okay I want this left line here and then I want this to take up more of space. So I am using that larger grid to set out some bigger content but probably more important than that is gonna be the implicit grid that I'm using to design everything else inside of there. So if you look at the actual design file you can see if you go into this Buy button I've got four pixels on top and bottom eight pixels on left and right which is exactly the same as some of those line items in the phone the app with the phone settings and if you scroll down here you can see that these titles on top of these modules. There's eight pixels of spacing between the two. Sometimes four pixels might look like too small of an amount but the eight pixels ended up looking pretty nice. And it just gives you an easy way to kind of just to cycle through your options. You're not just kind of moving stuff around randomly hoping that it looks good you have a very systematic approach to laying out all the little pieces. So even these icons they're 80 pixels from the top and the bottom are 80 pixels from the left edge and the top edge. And then they're spaced out it looks like 88 pixels in between. And those are all divisible by four. It's an easy way to just create this system that you can rely on and use and just about every situation whether it's really big or even really small. Okay for homework for the implicit grid I want you to design either an app for like an audio book layout that has a title with a status bar maybe a profile icon and an avatar you can actually use audible.com screenshots if you want just look up their app or you can I'll post them in the screenshots and I'll post some of the screenshots down below that you can use as reference. Or you can use the Table of Contents that you used in one of the other lessons and apply a title and a tab bar and maybe a detail screen or something like that. But the big thing to do is design one of these screens and just obsess over four pixels eight pixels 12,16. And kinda get that rhythm of using that system while you're laying out those little tiny details. If you don't wanna do the audible app also another good option would be to do the settings app on either the iPhone or Android. And just pick any of these screens you could do the main screen or you could do one of these internal screens. And you don't have to copy it exactly. But you could try to get really close and try to put on your implicit grid of four pixels. Just something that is more interesting to you. But what the main thing that I want you to do is I want you to really embrace this idea of making every tiny little detail be a part of that four pixel implicit grid because this is gonna be the key to giving all of your little details. It's just gonna make it breathe make it come to life and make it be clean and readable so. Get started on this homework. Again pick out whichever one you wanna do and post it into slack. And lemme know if you found it easy or hard to work with this grid. But I assure you if you can adopt this mindset of using this implicit grid it's gonna make your life so much easier. So I can't wait to see what you come up with. And I'm gonna let you get started.


=== FILE: 3-04 negative space.txt ===
------------------------------
﻿- Negative space is design oxygen. Without it, your designs will die. Negative space lets things breathe, and it's often the most overlooked aspect in design. A good way to think about negative space, think about airline seats. Volume is luxury, and space is premium. You pay more to have a wider seat, and to have more leg room, and for those better positions that have more room to move around. It's just better and more premium. So one of the most critical skills to develop nice, and clean, and well-balanced layouts is gonna be for you to become a master of negative space. So if we remember that everything is a box when it comes to UI, then every box needs its own breathing room. We don't want to create little, tiny coffins for all of our elements to live in. Negative space is the design oxygen that allows our design elements to breathe and to thrive. Back in design school, in layout class, our professor was such a big stickler of white space, and negative space, that we had this joke where we would turn in a white piece of paper that had nothing on it, and she would give us an F, and it would say, "Not enough white space," 'cause that's how important it was for her as she was teaching us that negative space and white space, the terms kinda get used interchangeably, it's just really, really important. You can also think of white space as the equivalent of actual space in architecture, and architectural design. There are specific guidelines for how wide a doorway needs to be, or how much space around a kitchen island there needs to be, how far away corner cabinets need to be from other things so things have room to open. And it's very, very functional, even though you can't necessarily see it without occupying that space. But the same way that negative space is good for architectural design, and for interiors, it's just as important in just flat screen design. So if you have negative space that is just off, and it's not well-balanced, it can really, really hurt a layout, and make it feel crammed, and tight, and just super unbalanced. So if you find yourself struggling with a certain piece of interface, and you're designing it, and it's just not feeling right, it's very likely that you don't have sufficient negative space, or maybe something is too big and it's taking up too much space, so it needs to be smaller, and has more breathing room, in context for the full layout. And as we look at designing negative space into our interface, we have a lot more leeway for vertical negative space than we do for horizontal negative space, because every single app, website, in existence, for the most part, you can scroll endlessly, and you have room to grow. But the width is often gonna have to be just a little bit. You can't have an endless amount of negative space on your width, but you are gonna have a lot more flexibility to space things out vertically, and kinda open it up, and breathe. Now as you get onto wider layouts, you do have a lot more room, but it's not gonna be as much as your vertical negative space, so just take that into consideration when you're going into a full layout. All right, so now we're gonna dig into some quick examples here. Right here, I wanna pull up this usecontrast.com website, and just kinda point out some of the negative space in here. So we've got about 70 pixels of negative space there, about 70 pixels there. And, you know, these shapes are taking up a lot of room, but these shapes are kind of like a intermediate negative space. They themselves are taking up space, but they're big blocks of color, so they actually can kind of be counted as negative space. So right in here, that's quite a big, large area. Whoops, didn't mean to actually take a picture. About 40 pixels there, a little bit more right here. And just kinda noting all of this area, kind of throughout here. Another way to think of negative space is pouring water onto the design, where would the water flow in your design if you were to be, if that was a possibility, where would the water flow? And anytime you get a tight bottleneck, that's usually a problem area. So think of water being able to flow effortlessly throughout your design, that's another way to kind of keep your negative space in check. So if I go to this other tab in Chrome here, I've gone and I've stripped out a lot of the negative space. So I've removed the negative space on the top and the bottom here. I've removed the negative space in here. And just look at the paragraphs, and the text in general. So these two paragraphs, compared to these two blocks of text. If I switch back and forth, it might be subtle to some people if they haven't had experience looking at well-spaced type, but you can really see a big difference if you remove the breathing room around the titles, and the breathing room around this little tag that has the color, hex codes, and the ratio score. There's a big difference in all of that. Even right in here, you know? Look at this navigation. I mean, there's a lot of negative space around this, but the negative space in here is not done very well when I've stripped all of it out. But if you look at this version, just giving it, you kinda have this, if you imagine a space here, where this imaginary space is hitting the edge on both the left and the right, and then I'm reusing that negative space here, and here, and here, almost as its own spacing element. So I'm really treating negative space like it's its own thing that you can't quite see in these particular designs. All right, let's take a look at another example. This is FibreStream dashboard, the billing section. I haven't changed any type size in this design at all, but I have stripped out a ton of negative space. And the type and everything, it looks okay, but the spacing is really bad. And so if I pull up the actual version right beside it, everything on both of these screens, in terms of size, type size and everything remains exactly the same as it is. So this CTA is 14 point bold, this CTA is 14 point bold. This is 32, this is 32. So everything's exactly the same, and I'll have a link to this so you can check this out for yourself if you want. But just look at the, look at how much negative space this one has, nearly 100 pixels of negative space on the top and bottom, and that just gives the title a lot more breathing room. It just gives it the ability to kind of own the page. Now it's not that you couldn't have something tight up against the title, if it was a different screen, a different context, maybe different information, but you might also have to make that a little bit smaller. You're not gonna be able to use a giant 32 point type and not have the negative space to support it. You're probably gonna have to go with something like 18 or 20 to kinda have the ability for it to just breathe. You want that title to take a deep breath. And you want all of your elements to be able to breathe. Look at the space below the balance, in between the line items, the larger call to action. I've given this its own negative space in here. The invoices dropdown is a little bit larger. And especially these invoice dates and information, it's just a lot more open. You could imagine water flowing through these pieces. And this could even actually go up a little bit, possibly. You can always endlessly tweak this stuff. But I just want to show the stark difference between something with this really cramped up, tight negative space, and then something with, okay, now we can breathe, this content, I can read it, there's space around it. So you're not doing an injustice by not, you don't want to fill up everything just to fill it up, because negative space is just as important as the positive space. And this is even true in type design. Typographers and type designers, they pay exquisite attention to their detail and what the negative space inside of their letter forms and around the letter forms is doing, and that's what creates a nice, balanced typeface. And the same is true for interface design, we have to pay exquisite attention to detail. Every little piece, we want to know exactly what is what. We know, okay, 20 pixels on the left and right. We want our CTA to be 20 pixels from the side, 20 pixels from the bottom. We want this, we want our check boxes to be 24 points below the other check box. Every little detail of negative space needs to be meticulously crafted, and thought of, and experimented with. You can't just throw things on the screen and hope they look good, you need to have this system, which is where the implicit grid that we talked about earlier comes into play, but I wanna focus this lesson more on the importance of the amount of grid you're using. It's not gonna be just four pixels, eight pixels, 12 pixels, and then call it a day, because if you look at this typeface here, this space right in here, you could say, "Well hey, "I got 16 pixels of space between these titles. "I'm using a four pixel grid, should be good to go. "Right in between here, I've got, "this thing's 32 pixels from the bottom of the dropdown. "Hey, I'm good to go." No, it doesn't work like that, because if you zoom out and you just look at it, it just feels too cramped. And especially if you look at this in context, especially if you pull up a phone and you compare it to any other well-spaced app, it's gonna feel very cramped. This is a pretty extreme example, but I just wanna point this out, because it's very, very common, when you're first starting out especially, to just get it too cramped and too tight. And I make this mistake all the time. I've been designing for decades plus, and I will still make things too tight. And a lot of times, if you find yourself stuck, and you open things up a little bit, it can make a world of difference. Let's take a look at one more example here. I've taken the SendOwl.com dashboard. This is the product site that I use for digital products and things like that, and every time I log in here, I see this navigation. Dashboard, products, programs. For one, the icons are not crisp. They're using some 1x assets for a retina screen, and they're always blurry, and that always bothers me, but I'm not gonna talk about that too much right now. So you can see over here on the left, I have redesigned this navigation, but before I dig into that part, I do want to just point out the fact that there is a decent amount of negative space between these icons. But this horizontal line is actually killing that negative space. So if I make some copies and just kinda hide that line for right now, and zoom out, and let me just group these really quickly. All right, so that already, to me, feels better, because these lines are kind of killing the negative space in there. Maybe you could have the divider lines if they weren't so bright. I don't think you even need 'em. I think yo could get away with it completely. Now the other thing here, these icons, and this doesn't necessarily specifically have to do with negative space only, but these icons are way too big for this text. They're just a little bit too big. So what I did was I grabbed the Feather Icons plugin, and I just searched for some, and just clicked on here, and got some different ones that I thought matched up with those particular things, those dashboard, products, programs. And all of these are preset at 24 pixels. It's gonna be a nice size to start with. All right, so if we look at this text field right here, you can see that if I try to see what the measurements are on the top and the bottom, I'm not always gonna get a direct, 16 and 16. I could have 16 and 16 right there, but sometimes when you have a thing of text, the descenders will, they take up a little bit more space down there, so every now and then, I'll just kinda zoom out and look at the negative space on the top and bottom and see if I need to maybe bump it up or not. And all of these are instances of that particular component, so I can look at everything to see what looks a little bit better. But I'm really paying attention to 24 pixels here, 12 pixels here, 24 pixels there. And then even, how wide do I need to make this so it looks good? How much negative space is between the logo and some of these navigation items? So it's not only just adding negative space, it's more about negative space combined with the proper sizing of elements, the proper sizing of text, and having that all come together as one cohesive element. So you can't really exclude one and focus on the other. So pay special attention to your negative space, and let all of those little decisions be very intentional, with how tall of the spacing, how wide the spacing is. Be very, very intentional with how that plays in regards to the type size. And there's not always a direct formula, because there's different contexts for different styles, there's different typefaces, and they work differently inside of different shapes. So sometimes, you gotta zoom out and just see, how does it feel? Does it feel too heavy? Does it feel too clunky? And then you can go in and make those little changes after you get kind of a bird's eye view of everything. And show it to a friend, show it to everyone in the Slack group, and get an idea for what people think of certain pieces of negative space. Post it to Dribbble, and get your work out there, and get feedback on it. That's how you're gonna get better at realizing what makes things look good, and what is considered good design, by getting feedback on your design. All right, with that being said, I'm gonna assign you some homework for this lesson, and we are going to be copying someone's work exactly. We're gonna be ripping someone off, completely, and that person is gonna be Ben Cline from Rally Interactive. I've pulled his design from Dribbble, and I've kinda put it in this Figma file. Now Ben and the Rally team, I feel like they are masters of negative space usage and layout. A lot of their designs just have lots of gratuitous negative space, and it can be overdone sometimes, just the idea of too much negative space, but I feel that they really nail it on a lot of their projects. So I'm gonna get you to copy either a part or all of this layout, because I feel like this has a lot of things going on, and everything is very, very exquisitely placed, and the negative space, the alignment, all of it comes together in a really good, strong way. So this will expose you to some decisions that you might not make on your own. So for example, I went ahead and recreated this side bar. Now I'm using an open source Google font, called Tek-oh, or Teek-oh, or something like that. I'm not 100% sure what font they're using, but this one is a little bit more condensed than what they're using, but it's close enough. So I really just went in here and started typing out what exists there, and making it the same color, trying to make sure it was the same size. You know, do the same thing with the one. And then once I have my text field, I'm looking, okay, they're doing eight pixels between the comments and the title. Okay, the number one here, and all the numbers, it looks like they're doing 24 to the right, 24 to the left, and this is kinda centered vertically inside of this element. So if I look, this one is more like 35 and 36. I could even, I can shrink the height of the number to make it exactly 36. And another little quick pro tip on these numbers, the number five is gonna be much wider than the number one, so if you just type a one on a path, and then you measure the distance to the left and the right, it's gonna be different on a five than it is on a one. So if you know you're gonna use a one-digit number, you can make a fixed text block that has a fixed width, in this case, the width is 16, and that way, you know the five, and the eight, and the nine, everything's gonna fit in that box. And so you're defining a text box, and that will give you some fixed parameters for the left and the right alignment, versus if you just did the one on the path and you made it 24, as soon as you type a five, your spacing's gonna be a little bit different. So when you put it in a box, though, you just need to make sure that it's center-aligned, that way, that all of these are gonna line up. Now you might need to be a little bit pickier if you're getting into the double digits, but it's just an easy way to kinda line up text, and keep some nice, even spacing on both the left and the right. So I've just recreated this stuff inside, so you can get kind of an idea of what this would look like. I'm gonna give you access to this file. So you can either use this as a starting point and get started on maybe designing some of these other pieces. You could use the Feather Icons plugin instead of trying to copy these icons, or you could try to draw these, whatever you wanna do. But just take either one or two of these elements, like the top kinda ticker here, or the left sidebar, and just lay it out, and try to get the measurements really, really close to what they have done here. And just take mental note, "Okay, okay, "they're using 24 pixels of spacing here. "Oh, okay, I wouldn't have thought to make it that wide." You know, if you look at one of these groups, this is 121 pixels tall. That's a big old block of real estate to give one article, especially if it's a big list. And if you had a list of 100 things, maybe 120 is a little bit too tall, but if you only have five, and you're just calling out five, you know, the content that you are presenting, it kinda almost dictates with how you can treat it. You don't want, if it was only three, it might even be bigger. But because it's five, and it kinda fits with the same size of the image, you can kind of, you can give it some more space. I'm sure, as they're designing this, they're thinking, "Okay, I want this thing to stick "above the top of the picture that much, "and stick below the picture that much." And so they might have adjusted the box of that, for instance, a reading module as much as they wanted to above the picture, just so it had a nice balance overall. So if you zoom out, and you're like, "Okay, I've got this picture, "I want this to be sticking out. "What is the math I need to do "to make five of these fill up that space?" So that's another way to look at it, as opposed to looking only at the text and the lines. It's also a matter of zooming out and looking at everything in context. So, that's enough example and demoing. I'm gonna let you get busy on recreating part of this, or all of this, and post your work in Slack, let's check it out. And don't post this to Dribbble, because you're copying someone's work exactly. I would recommend not posting direct copies of work, unless you were changing something or making suggestions, but in this case, I would advise you not to post that, because it could just be kinda weird. And you don't wanna post it as it's your own work, 'cause it's definitely not. We're just trying to get some ideas for people who have done this before, people who are really, really talented at this particular layout, and just learning from the decisions that they made. So, get busy, and I can't wait to see what you come up with.


=== FILE: 3-05 alignment.txt ===
------------------------------
﻿- The trifecta of beautiful design is good typography, good negative space, and good alignment. So in this lesson, we're gonna talk about alignment more in the context of product design, interface design, app design. We've talked a lot about alignment with typography, like left edge alignment, or the implicit grid alignment. But I wanna talk a little bit more about how that specifically can influence the way that you would design interface components directly inside of an app, because sometimes alignment can have certain meaning like a parent-child relationship for a title and some content. So let's just dig straight into an example and take a look. Alright, so this is a conceptual design that I did for the red cameras. And I put all this together specifically to have something to reference for different things that I wanted to talk about, and I think that this lends itself really nicely to alignment, and specifically with this form here. Now on this page, I'm very specifically, trying to nail a certain style. And most of that style is kind of using this big, beefy text that kind of goes along with the imagery. But also, I think that the hard, left aligned edge just kind of adds to that kind of, I don't know, in your face kind of attitude, because these are more of like the bad boy cameras of the camera industry, if that's even a thing. And I think that, it's not that centerline couldn't work. But having that hard edge of the left, kind of goes along with the hard edge of the top and the bottom of the blocky typeface that kind of mimics the way these cameras are kind of blocky. So right off the bat, I know that I'm gonna use kind of a square, kind of like wide, formatted alignment to kind of just emphasize the wide and blocky nature of the cameras. It just feels like it makes sense to me for this particular project. So even for the pagination that would happen, if you were to scroll through multiple cameras, you can imagine scrolling through these or swiping through these, and all of our little, this would possibly light up, it's kind of hard to show the interaction there. I haven't linked up the animated prototype, but you can imagine, if there were five images here, this would be the active image and these gray pieces here will be the inactive. But again, all of these are aligned left edge and right edge. Same with the 20 pixels here and 20 pixels here. I'm trying to define like a really sharp, left align, that just adds to that quality that I'm going for. But then down here in the form, you have to choose your sensor before you can actually purchase this camera. So the problem here, if I was gonna go left align all the way and not have something like that, this doesn't quite look like these belong to choose your sensor. And even though I'm using 15.5. Now, if I wanted to do this with only typography, then I might have to make this something like that size. Now, this clearly says, hey, choose your sensor. And these are a little bit, it's a little bit more explicit that these, monstro, helium, all of these belong to choose your sensor. But I didn't really wanna vary the typeface that much. I kind of wanted to go big and then very kind of technical and kind of even and keep it pretty plain and kind of, almost Like a techie readout of the information. And the only thing I have bigger here is the the price. And honestly, that could probably even stay at 15. I could leave all of these stuff at 15, and that could still technically work. But the only reason that works for this form, is because I've actually gotten these stuff is shifted over and the alignment is broken just a little bit from the text alignment. So the alignment's not really broken because we're still carrying this sharp alignment down the left edge, but just that simple 20 pixels. I've got 20 pixels to the title, and then bumping it in, another 20 pixels on the side. That just kind of indicates, okay, these stuff belongs underneath that heading. And I'd like the idea of being able to have these big, blocky selection elements, that go along with the big, blocky style as opposed to just putting like a checkmark on the far right, or using color, only if I'm using color in this big, blocky, tap pattern. That would just be easy to use and it's unmistakable as to which one of these is selected. Sometimes you might have these less with the small little check, and you can tell that it's selected, but it might be a little bit disconnected. So I wanted to put something in here that was kind of big and beefy, that kind of represented what the cameras seem to represent. And the way that that works is by scooting that over and putting this around it. So now I have a new left edge alignment right in here. And I'm not using a big grid, I'm not pulling out a bunch of lines and trying to adhere to a grid, it's just a simple, implicit grid rule. But it is aligning all of these objects just to say, okay, these are all connected. And that kind of gives my interface a certain quality that makes it a little bit easier to read out what's going on in this particular section. And then down here, I tried multiple the versions here where I wanted maybe the checkbox to go left align there, and maybe not quite as far over. But the checkbox there, it almost felt like it started to break the layout. Even though we do have these lines here, and this is not necessarily a bad design, it felt like the checkbox needed a little bit more significance. Because this is actually quite a large checkbox. If you check this box, you are paying $5,900, in addition to your $54,000 that you're already paying for the camera. So I wanted this to feel like it had a little bit more room and I don't want it too tight up there. So the negative space here is working to give it a little bit more breathing room, but also it's aligned directly in line with this. So as I'm reading the form, I see the checkbox, so I don't have to kind of keep doing this through the form. So on that one section, it's just kind of nice to line that textbox up, with the inside edge of these. And you could even get in here and start playing with or maybe the description is left aligned. But you can see that that starts to make it feel a little bit, I don't know, it's too much kind of waving in and out. So you kind of figure out these rules for alignment with the context of the design. And for whatever reason, it feels good to just see the description. It's reading and then you got to choose your sensor, and now I have this next section. And then now for quantity, as almost like a footer, I have these two titles here, chooser, sensor and quantity. And this is another option, we could have done a button down here, and quantity could have been really large. I wanted these two aligned together because you don't really need an input field for one number that's gonna be the full width of the screen. So even the number 100 could fit in there, if you were gonna order a whole bunch of these things. And then instead of doing like a center aligned button, which that could still work, I am kind of playing around with a left align button here. That way, it's 20 pixels edge, new in 12 there and then 20, from the sides. And so now it just kind of gives it like a nice footer feel. So we have the left and the right alignment. And it's all coming together, from the design direction, the typeface selection, and all of those things are kind of driving the desire to be this kind of squatty, blocky, design direction. And then that also lets me know, what do I need to do with my alignment? And just kind of keeping these sharp lines. And in general, it's always good to have a nice, left alignment with your form. And so this is a good example of that. And then back here on kind of this splash page where you might have multiple cameras that you're looking at. I'm bringing out these big numbers to kind of play on some of those crazy, technical specifications. But again, I'm using this. I've got this strong left alignment, continuing to happen, with the accent here, the number and the thing below. And I'm just trying to, again, I'm trying to set up that hard, right alignment, and that hard, left alignment. So if you look right here, the arrow here and that is all kind of lined up, along with... You're not always gonna get your text fully justified, but I'm just trying to create that hard, left, hard, right alignment, that just kind of keeps pushing that concept forward. And then looking over here at this product info section, these might be stuff that's like down below. I kind of designed this as more of an element collage. It's not necessarily full, individual pages that need to be looked at as individual pages. This is more like different styles that could work for different sections. So even on this page, again, I'm really trying to focus on the alignment here. Even the title, that kind of used switcher for this, I want it to come all the way to the edge, because I've just kind of set up this constraint as a conceptual component to the entire design. So you can use a tool like alignment to further a concept, and you can also use it to indicate ownership of some of the content, from the parent content. The same way we did title with some of the children for the selectors, you just have to make sure that, if you're doing something like this, you leave enough room and enough negative space to make that full selection happen. So you can use it both conceptual, just as a nice balanced layout. But you can also use alignment to kind of enhance the user experience. So we're just making that more known that these things belong to that title. So for homework, for alignment homework, I want you to come up with some kind of form concept that is kind of in the ballpark of this camera form where you're selecting and you're adding things to cart. It doesn't have to be e-commerce, but maybe three to five different sections that would have a title, and maybe one's an input field, maybe the second one has a multiple choice question, and the third is a yes or no, some kind of toggle. But I want you to design a form, with the button in the bottom, give it a title, and pay really close attention to your alignment of the elements, especially that left edge. When it comes into forms, the form alignment along the left edge is gonna be pretty key. And so the concept again, can be whatever you want it to be. Just make sure it has a mix of input fields, multiple selections and maybe like a radio button or two. And you don't have to go with the full circle radio button, you can make it have its own custom style. So let's see what you come up with, post it in Slack, get some feedback, post it to Dribble, if you're really liking it and you wanna show off some of your work. So let's get started, can't wait to see what you come up with.


=== FILE: 3-06 optics math.txt ===
------------------------------
﻿- There's a big difference between mathematically aligning something and optically aligning something. Now even if you have a perfect grid and everything is 24 pixels spaced evenly, perfectly, in an interface you're gonna have a lot of irregular shapes like triangles and rounded edges and icons and other factors that will cause the mathematically aligned pieces to just look weird. And so our eye can detect if something is off or not even if it's perfectly mathematically aligned. So that's why we have to pay very close attention to making sure that everything is optically aligned in addition to being nicely and well-organized from a mathematical perspective. So let's dig into a couple of examples and take a look at how this plays out in interface design. All right this can be seen very simply with a simple square and a circle placed side-by-side. So you can see if I've got two squares right here, they're both 40 by 40 and if I round all of those and turn it into a circle, we've got a perfectly mathematical 40 by 40 circle and a perfect 40 by 40 square. But you can tell that if we zoom out a little bit, the square looks larger than the circle. And in fact, it is larger because it has more surface area. All of these spaces in between here are occupying the space that the circle just doesn't have. And this is also very, very common if you look at letters inside of a typeface for example the letter 'm' and the letter 'o'. You can see here if you imagine this being our square, and this being our circle over here, you know, look at the baseline here. The circle of the 'o' is descending past the baseline. And it's super intentional because that, that is, mathematically incorrect, but it's optically correct. And so as far back as letters were introduced in the printing press and any typographic undertaking, these rounded shapes have always extended past the bounds to create that balance of letter forms feeling the same way. It's less of a deal if it's exactly four pixels and exactly four pixels. At the end of the day you want it to feel right. So if you look back at the circle and the square, the way we can correct this is just by simply making the circle bigger. So if we go 44 by 44. This is 40 by 40 and this is 44, and I'm just, I'm not using any mathematical formulae, I'm just making this a little bit larger. If we zoom out, we can see this is actually looking like possibly two even sized shapes. The square and the circle both seem to be, you know, about the same size. If you throw in a triangle into the mix, let's just make this into a triangle, then you have the same issue here. So now our triangle looks tiny compared to our square. So this might mean that we need to bring this wider, 44, maybe that goes out to 44. And it could possibly even go up. But if we go up to 44 that might feel a little bit too tall so let's bring it down to just 42. Maybe that needs to be 46. So I'm just trying to get the mass of the black shape even with the circle and the square. You might be wondering "What does this have to do with interface design?" And I agree these abstract examples aren't the best in terms of providing a real world example, but at this very, very primitive example this is kind of where you can just fully understand the idea so let's move beyond this and take a look at some actual, real life examples. So just looking at these three icons, the goal here is that each of them are inside of this 24 by 24 art board. But also you can tell that, see the head of this profile icon is sticking out over the top of the mail icon and the lock icon is a little bit thinner than the mail icon and sticks out a little bit higher. And it's very possible that you could try to make the lock as large as the mail icon, but if you think about a letter in real life versus a padlock, the scale difference, the padlock is gonna be smaller. And so you kinda have to use your best judgment in things like this. So this one I'm trying to keep things on the same baseline so you can notice all of these icons are on the same baseline here, and this edit or compose icon is the same shape as that calendar icon. But you can see that I'm not trying to align this pencil mathematically to the top edge and the right edge. I wanted to just stick it inside of this 24 by 24 space so that it felt kind of balanced, because if I'm opening up that corner, then I want, you know, if this isn't here, then that's gonna feel pretty unbalanced. Now you're not always going to be designing custom icon sets for all of your projects, but these examples are a really good example of when optical alignment supersedes mathematical alignment. Mathematical will get you very far, and a lot of times mathematical alignment is plenty of, all that you need when it comes to boxes and rectangles and type inside of those things, but that's more of the science behind the design. And then you kind of have to use you gut instinct and your intuition to take it to the optical level and just move around until it feels right. So use math to get you to a certain point, and then use your optical alignment ability to just really take it to the next level to make it just feel right. Math will only take you so far when it comes to aligning these objects. All right, let's take a look at one more example inside of a very commonly used piece of UI here. This play button inside of the circle on top of a video. Now if I just create a circle, let's do 60 by 60, and we'll make this thing black and then let's say I create a 24 by 24 triangle. I'm gonna hit Return to access these points. And click there, the 'p' key and hold Option to deselect and remove these points. Now this, if I mathematically align the triangle and the circle with my quick keys here, or by clicking up here. Now you can see if I hold my Option key, this edge is perfectly 18 pixels from the side, all the way round, 18 pixels all the way round. So let's zoom out and see if it looks right. Move that out the way. And as I'm zooming out here, you can see that looks pretty bad. That is not correctly aligned. So even though this is perfectly aligned mathematically, it doesn't account for all of this space right in here. So if we have, if we try and divide this into three sections, and we look at these areas of negative space here, you can see that it's not quite even. You know, these are much larger on the top and the bottom than it is over here on the left. So really, all we have to do is just nudge it over to the right until it looks right. But even then, this triangle might be a little bit large. You have to think about the proportions as well. So I'm gonna bring this down to like, 20 pixels and then re-align it and let's say we give it a little bit of rounded corners here. Now another trick to closely align mathematically is to duplicate that circle and then scale it down and if the edges of the play button are touching the outer bounds of that inner circle, then that means that you're pretty close. But you can see if I mathematically align this and now I've got 20 pixels of space all the way round, you can tell that this interior circle, even if it has, let's make it 20 as well, so that's 20 pixels of space all the way around circle, and then you can see that if I'm using this radius tool on the corner, we're actually losing several pixels of optical space. So it's not quite the same thing. So we have to rely on our optical alignment for things like this instead of mathematics. And you can just tell that this is much more thoughtfully placed and it starts to just feel a little bit more balanced. And once you have this in place, I mean you can play with the size and try to figure out something that works a little bit better, but that's another really important place to get your optical alignment correct. All right so now let's take a look at an actual, real life interface design component that was used inside of a dashboard. I've just copied and pasted this component from another project. And on first glance it seems fairly straightforward. You've got your top margin, your side margins and everything over here. But if we get in here and really start playing attention to everything, you can see that this title if I measure it, it's 26 pixels from the top and 22 pixels from the edge of this top check box. And normally I like to stay in the four pixel measurement kind of implied, implicit grid, but I've got a 16 by 16 pixel little toggle arrow here, because when this thing is, this thing does have the ability to collapse. And this would rotate and turn. And what I'm doing here, you know, if you look at this bounding box of this typeface, and it does have 100% line height. Now I could try to drag this up and align it to the center, but you're not always gonna wanna do that. So we've got our 16 by 16 anchor here, and that is what I'm using for the corner measurement here and so I want this to be aligned vertically with this thing here. And I can't just put it right in the center and align the center, because there's, for one, the triangle, just like you remember in this example here, the triangle, you know it's not gonna fit the same way that a straight up square beside a square is gonna fit. So I have to kinda optically balance the vertical center right here. And it's not always something that you can just mathematically align, you're gonna have to get in there and just say "Okay, that's a little too low, that's a little too high, "okay let's put it right there." And now what I want is for this other stuff to line up as well. So I've got the top edge here as 24, and then I want the distance between these two to be 24. But if I check it with my typeface, I've got 25 and 23, which is not quite the implicit grid guideline but I'm basing it off of these kind of extended, rectangular shapes because they're easier to measure by. So if I want this to be 12 pixels, now I'm going to left align these. And if I wanted to go even crazier, I could nudge that over to be 11 pixels instead of 12. But the reason is because if I was using a capital 'M' here that might be some of these, see the 'A'? The 'A' would kind of stretch over and fill that entire space, whereas the 'B', you're gonna have these, certain letter forms are gonna have a little bit of wiggle room in between the letter box. So you don't really wanna go too over the top with your optical alignment when you're left aligning things so I'm gonna keep that at 12, and I want this to be at 12 as well so there's a nice left alignment right here. And I want that to go all the way down to here. You'll notice that I've got this button hanging over, see that's 32 and 32, so I've got this at 20, and I've got this at 32. Now if I was following the strict mathematical grid, I might end up having the button that looked more like this. And then I've got 20 on both sides and then I might bring this up so there's 20 on the bottom. But there's not anything wrong with that. There's absolutely nothing wrong with making this 20 and that 20, but I wanted this button to have a little bit more space around it. I thought it looked kinda nice to have, I had it at 32, let's put it back where it was. All right, so that's 32. I've got this at, this is 24 from there, and then this thing, let's make that 24. So that's 24. And let's make that 24 as well. There we go. So now I've got this mathematical grid, 24 on top, 20 on the sides, and a lot of times I've put a little bit more padding on the top of these big components, the top and the bottom might have a little bit more than the sides just because sometimes it can just feel a little bit out of balance. So if I ever cheat a little bit more, I might add a little bit to the top or especially sometimes more to the bottom and it's all a matter of just optically aligning and optically balancing those components. 20 there and 12. I've got 24, 24 and 24. And now the question here would be, so I've got 48 on the left and right of this edge, that means I'm going to wanna mirror that on the other side. And there's nothing wrong with left aligning this button with stuff like that. Like, I could've even kept a smaller button here. But this kinda goes back to the square versus the circle example. If I've got a really sharp left aligned edge, with a very rounded pillow-shaped button, that's just not gonna quite work, because that's similar to putting this exactly the same size circle right here with the square and having them all the same size and then it's just naturally gonna feel a little bit wrong. You're naturally gonna wanna cheat that over a little bit. So this square circle example is happening with actual UI components right here. So if we imagine all of this is a square, and we've got our circle, then we're naturally gonna wanna come over a little bit more to balance that out. So let's get that outta there. Now if this was an actual square button, this might be perfectly fine to mimic these, if I was mimicking this at like, four pixel radius, then it would be fine to keep it right there. In fact, it could work if we brought that over like that as well, but it might actually be better for us to keep it even on all sides if were gonna use this radius. But now this feels a little bit out of balance. This feels a little bit weird because it's really heavy over here and maybe it's just because I've been looking at that pillow shape for so long and that's kinda the style of the project. But once you decide on a style, you kinda have to use that as the guide for what you're working on. So when you do have these rounded components, you're gonna wanna bring those over a little bit so it feels a little bit better. Let's put that back at 32. We still got 24 there, and 32 along the sides and the bottom. So now we need to make a decision. Do we wanna do 24 on the top and 24 on the bottom? One more, so let's see if you zoom out, there's nothing really wrong with that, but because we do have this 32 pixel padding here, and 32 pixel padding there, it makes it feel a little bit more balanced in my opinion to have this extra negative space at the bottom there. Also we have, you know, keep in mind when you've got a lot of negative space here, a lot of negative space here, and if we tighten this up too much it could possibly feel out of balance. So there's not really a right or wrong answer here as to whether you should go with 24 or 32, it's really a gut feel. Maybe you decide you wanna go 24 on the sides. And you keep 24 here, 24 on these sides, and maybe you get 24 all the way round and that's starting to feel a little bit better. That actually, I don't mind that at all. I like the way that looks. That might even look a little bit better than the 32 that I originally had. But I do know, another thing you need to keep in mind, is if this component gets collapsed, and that gets turned, and then we wanna keep the same space on the top and bottom of this. So this would be kind of the collapsed component. And I'm still liking the way that the 20 and the 24 look. And if we wanted to go one, two, three, four, 24 on the left edge as well, then that's gonna shift everything over. And now it just feels like there's too much space over here. So it's again, we're just playing with optical alignment. It's really just a matter of moving things around until it feels good, until it looks right and feels right. And you might find yourself making these changes over and over and over. And it might seem obsessive and compulsive and some degrees it is. But I think it's really important to nail down these tiny increments and to create these tiny rules. And once you have these optical alignment rules, you can start to systematize them, and you can say, okay, well these little tiny icons, they're gonna be 20 from the edge, and our buttons are gonna be here, and they might not fit the full first pass mathematical grid but it is gonna work as a system as a whole. So the more you can start paying attention to these optical, these tiny, tiny, I'm talking tiny optical alignments at this very, very detailed component level, the tighter and the cleaner and the more organized and the more well-thought-out your designs are going to look. So let's talk about some homework here. All right this will be a two part homework series here. So first thing we're gonna do is go to this website type.method.ac, I'll put the link down below, and this is a kerning game. So you can just click this 'e' here to get started and you try to drag it into place and that will get you started. So now we're not gonna be able to rely on our mathematical alignments, we have to move the, however many letters are in the center, the ones on the edges they can't move. So we have to try to place these in the correct optical centers, so we have nice even negative space around all these numbers or letters. They're not numbers, they're letters. And then once you get these, you hit compare, and it gives you a score. And then you go the next one. And the upper case 'T' and the 'y' and the 'p', these are gonna be kinda tricky, so you wanna see how you can get these to where it looks right. You might even wanna zoom out a little bit to give it a look at a higher level, or click off. And this can be tricky. There's a lot of time spent on kerning these letters. That's why really nice typefaces are extremely well kerned with all the different letter forms, because the space between the 'p' and the 'e' needs to be tighter, or the 'y' and the 'p' needs to be tighter than the 'p' and the 'e' 'cause there's a big huge gap here. And it needs to kinda sit underneath the 'T' a little. Let's see how I did here. All right, so I did not as good on that one. So the 'p' needs to shift over a little. So anyway, go in here and sort out these letters as best you can, and see what your score is. I'm trying to do this quickly and I'm not getting 100 out of 100 every time. It is tricky, so you know, don't stress over it if you can't get a perfect 100 every time because you know, for one it is a little bit hard to maneuver this online and not be able to zoom around. Messed up that one too. But yes, this is a good first exercise. The more you can get better at optically aligning letters and kerning the letters, it's just gonna start training your eye to get really used to looking at, same we're that we're kerning these letters, we need to effectively kern all of our interface pieces. And we need to bump this one over to 20 instead of 24, or this one to 32 instead of 24 if it feels better. The same way that these letter forms needs to be moved just so optically without relying on a mathematic grid to just feel correct. So that's the first part of the homework. The second part of the homework, I want you to take some images from Unsplash, like, just do one or two, do 160 by 90 rectangle or 360 by 180 as like kind of a video thumbnail or a video poster card, and then draw a play icon on top of it, circle and a triangle, and try to get that optically centered. You can use any picture, any color, whatever you wanna do. And then maybe to the left, put a title and a small paragraph, and maybe a timestamp, and try to just, even with the thumbnail, and the title and the text, try to get that vertically centered in a good place beside the thumbnail. Start off with 24 pixel space between the thumbnail and the title, start off with a little bit larger than that. But try to use your optical alignment to get, to just figure out those little spacing details and get it optically aligned with the thumbnail and the paragraph. And once you do that, maybe duplicate it and see if that works with another image or another body of text and see if that needs to change. So kind of an exercise here, not really trying to create a portfolio piece, just trying to really nail down optical alignment gut instinct. So get that homework done and we'll take it from there.


=== FILE: 3-07 high low density.txt ===
------------------------------
﻿- So what is high density versus low density? Well put extremely simply, high density would mean that things are compact and tight. And there's not a lot of margin. Think of like a Google spreadsheet that just has numbers everywhere and there's not a lot of padding everywhere. On the other hand, think of a low density example, like a calculator app that has lots of negative space around each number. And the hit targets are really big. So basically, low density, Wait, do I have that backwards, high density low de... Yeah, I got that right. Low density would mean it's got more breathing room. And high density would mean it's more confined. I like to hang out in the low to medium density ballpark. It's not that common where I need to go very tight, very dense, very compact in the high density world. But there are plenty of examples that would exist like that. If you're thinking like a stock market app where you need the person using the app needs to be able to scan lots and lots of data and keep their number their eyes on things, but even then, you might not always want it to be so high and tight and compressed, compact, but often times it comes down to just user preference and personal opinion about how you'd like to consume data. So I'm going to dive right into a low density example. And then we can look at how to modify that and why we would even do that in the first place. So let's take a look. Alright, so I've got an art board here that is the exact same size as my screen, pulled in the shift nodes logo. And I'm just gonna design a quick little form. That would be a very low density kind of form field. Just to kind of, you know, when it's, when you're playing with a lower density, kind of element, you have more room to kind of make it fun and maybe brand it a little more heavily. It can just be kind of a fun way to experiment with, certain things so we could go with kind of our standard form field or if let's say, we're gonna do like email. We'll do like first name, first name and email. So let's do like I'm using this font TT Firs. And let's go bold with that. Let's go white, so you could play with going like crazy big and you're doing like maybe the form field is, is a simple line. Do like four points. Rupe it, center it, so this would be one example of kind of creating a funky, low density, big kind of thing. The only problem with doing something like this is it doesn't lend itself to repeatability, if I needed to create a form with a lot of different fields, like the Shopify checkout, got first name, last name, company address, apartment, city, eventually you're gonna do credit card information, payment information, and so you can tell that the margins are a lot tighter and they could create any form they want to any width of input field, and then even their drop downs, gonna have that same look with the label kind of floating up there. So a regular kind of density form and regular density kind of components are gonna be a lot more scalable in terms of like a design system. So on marketing sites, and kind of one off forms, you might have like a jumbo version of a component or a jumbo version of a form, but it's not gonna be it would almost be an exception versus the standard component. So if you're ever doing something like this, you might also want to consider creating the regular version as well kind of as a backup or to have that as an option in your back pocket. So I'm gonna actually get rid of that and kind of create a simple version of this. So let's go back down to your regular 16 points, and make sure that this type is at 100% line height. And I'm gonna go eight pixels from the top of that and because we are rounding this edge, I really like to If I'm going in 12 pixels here, I might go 12 pixels from this edge as well. So if I, just for reference, that will be 12 from there and then this is rounded 12, you know, can play around with going eight or 12 or whatever. Actually, eight looks pretty good right there. So I'm gonna go in eight, eight from the side, and eight from the bottom. And then I'll just copy this into here. And eight is gonna be too tight right here. So I'm gonna bring that over. We'll do we want to do 20? 20 all around. Let's see how that looks with some actual text in there. Maybe this is little bit darker, maybe, I don't know, just kind of playing around with it. Sometimes you might want to align your label and your input, but I'm gonna leave it there for now. So I'm gonna go and create a component out of this and bring it over here, so we have our master component. Well I'll leave it on the dark background. Bring it down here and then I'm gonna create an instance of that. That way, we can repeat it pretty easily. And then we'll go, one, two, three, four, five, six, seven, eight, and then what I'm gonna do now, is create another component, probably should have left that as input. Let's actually call this "Label" and we will keep that as an input. And we can always change this. I'm gonna create another component out of this portion and name the other one as well. Not gonna worry too much about names right now, we can always go back and change that. So that we input plus label. Now we have a couple of different master components. I'm gonna copy this over here now and now we will do name and fun fact about this, you can hit Delete in a component and it will automatically hide it So it's kind of a nice little feature. And this one will be password. So that's 24 on the bottom there, one thing you could do, and it's not really that important that you do it, but you could always bake in a little bit of your own padding into the component to kind of ensure there is a sufficient amount of density. And sometimes this is easier when they're off of a frame and they are in their own kind of frame. So say we wanted to keep this, say our form filled. Let's go like 320 with our form filled and now I'm going to Make this background white so I can see what I'm doing a little bit more. And if I hold option and command I can scale this a little bit and see. Okay, so I've got 12 on the side, let's do 12 on the bottom. So I'm gonna hold command again and nudge that up twice. So I've got 12, and then let's go to this top down twice. Just holding command and pulling, pulling that. So 12 on the side and the bottom. Actually, this messed up. Let's do make sure this is eight. So keep there, keep that a eight and I want this to be 12. So, just kind of watching these pixels snap as I bring it down. 12 all the way around. And 20 there maybe we'll bring this to... I will leave it at 20. We'll leave it at 20 and we'll leave this at 12, we may end up going back and changing that, but for now, that's pretty good. And what that's gonna do, now I can get rid of this, hide this background. So now I could just snap these right up against each other. So now it's kind of like a true modular kind of plug and play. Anyone who was using this to design another form, if this was a design system could just pop it right in and they wouldn't have to worry about you know, worrying about the padding or anything inside of there. But the only problem with that is if you haven't designed all of the instances and you haven't figured out what the color scheme is and all that, sometimes it can be hard to design an abstract if I wanted to design like an active state, so it's kind of your call as to whether or not you're designing in the master components or you're designing over here until it looks right, you're not really saving that much time to use components for just two pieces. So it's kind of up to you. So we'll just say that one has already been typed in and we'll call this one the active one. And maybe this one gets an inner stroke or something like that. To show that it's actually active. Maybe the background goes a little darker. Maybe even it goes all the way dark. Bring in my input, I'm gonna hold option and type eight for bullets, and let's check out the resizing rules on this. Because I want this to be a little bit wider. So I'm gonna click both of these and pin them to the left. Actually pin this one to the left, I have to pin this one to the left over here, because it's a separate component. We'll go ahead and do top left on the top left on this, and then we'll make sure this has set the scale it is, that one set the scale there. So now when we do this, it's kind of working but what we also wanna do is pin this to the left and the top as well that way if we scale, our label and input, okay, that's kind of working but we also want this to go to the right. So I'm gonna hold Command, Then we'll select left and right and the tops. So now, this should scale a little bit better. There we go. So now if I wanted these to be bigger, I could just type in however wide I want them to be. So if I want to go 400, that would work. There we go. Actually, I said I was gonna do email. And now I'm gonna have a call to action down here. So I'm gonna copy this out. paste this in, move the call to action that's white, and normally, I like to keep my calls to action, roughly the same size as the input field, kind of keep that density about the same on the buttons and the input, although I have gone a little smaller with calls to action, and I have gone larger with calls to action, it's really kind of what fits your project center line that by hitting Command Option T, and select both of these and hold CTRL + Command period to horizontally align that. And so I'm using this built in 12 pixel padding here, so I'm going to if I brought this right up against there, it's only going to be 12 pixels, so if I do a shift nudge and then two more nudges down, that will be 12 there. A lot of times this is too dense, right in here. You know, we have even though this is 12 pixels from here to here, you have to factor in the negative space right in here in terms of like the overall look. So you might wanna, we might wanna bring that down a little bit just to make sure that it's looking pretty good. And looking at this, I don't really love the way this outline looks. So I'm trying to play around with maybe changing this out a bit. Maybe these are a little smaller. Actually, I'm not gonna change them there. I'm going to come here, that 16 and that 16, I'll leave that for now. And then if I wanted to, I could create a component out of this. Or actually, before I do that, we could try also to see, you know, do we like the left align button, or should we align that there? Kind of thinking with this simple form, and this is already centered, that the full width button feels pretty good. We could also play with a pill shape. That's kind of nice if we're balancing this, this icon with that shape. That is kind of nice. And this is not truly 40 pixels because it's 40 pixels between if we measure the top here, that's 36. So this has got 36 plus 40 So that's like 76 pixels, actually 90 because there's also a built in space into there. So you just kind of have to keep this in consideration. In terms of like how dense everything is. And now that looks a little bit far away. And this is again, is where the optical alignment kind of comes into play, you just need to balance this whole thing. Sometimes you might not want to measure it because you're just trying to get it to look right. You could even go a little smaller. Sometimes I'll go a little smaller inside of my calls to action, because there's so much big, negative space around it that it's doesn't always need to have the same size text. Um, but I'm gonna keep it 16 for now. And we could also experiment with putting this whole thing in a little bit of a container. So maybe this background is like a darker color or maybe it's the same and maybe this has an inner border. What is the background here? Background is at one five. Got a little bit darker with that and then Make this a little bit lighter. And let's maybe tighten that up a bit. See that's 56, make that 40. Maybe that needs to be 32. And again, I might, go back and decide that this needs to stay full width after all. See that's 52. So I've got this side padding, which I do not have on this button. So if I wanted to, you'd could go ahead and create this as another component, bring it over here, we'll call this CTA and there's really two ways to do this, you could create the component and then try to hold Option and Command and then get your 12 pixels of padding on there, that can be a little bit cumbersome. Also, you could just grab your shape and create a rectangle behind it. And then just kind of nudge that into place 12 on all sides. Sometimes it's a little bit quicker to just manipulate the rectangle and I don't have to worry about the canvas or the frame constraints rather. And then you can create a component out of this piece, and then you can delete the background out of it and you have your built in padding just like that. So this is our CTA of create an instance of that. And now we have built in padding around our input field, and our call to action. Still feels like maybe this needs a little more. Maybe this needs double on the top on the bottom. We'll leave it like that for now. And then we'll adjust that again. There we go. It's looking a little better. All right. Now, this is definitely a way to do it, but it's proving a little, I don't really wanna... I don't want to be committed to this 12 pixel padding forever, and it's kind of hard to go back and forth. So I'm going to just select both of these and hit this little button here. That's gonna pop all the constraints and take it all out. And so now, if I go back and I reset the size on both of these, there we go. So now my 24 pixels of padding is here, and it'll be a little bit easier for me to adjust. We'll do 36 on the sides. 36 getting there, almost there. Almost there. So, I'm still just kind of playing around and maybe, you know, maybe this field might be a little bit too large. Maybe I should have kept it at. Right now these are at 376. Maybe we do keep them at 320 and we change that 320. Just gotta move it around until it feels right. Maybe this needs to go down a little. All right, I think I'm liking it better without the border. Maybe there's like a black drop shadow on this thing. Let's do like a 40 pixel blur. 20 pixel. Why? And then maybe this is 80 and this is 40 and, I don't know and I love that drop shadow actually. At least not that big one. Not for this one. I don't know. I mean, you could kind of keep playing with that. Can be tricky to get the color just right on the drop shadow. But it's not working great right now, Someone is going to just go ahead and remove it. And maybe I'll play with this color here. So there's a lot of different options here. I would say this is like a low to medium density form. And this might be one of those areas where there's so much space on top that maybe I want to bring this down to like 48 on the bottom But then from here, I could make a duplicate of this and make these you know, a little bit larger if these weren't components. So I might take that form. And I might make another version of that and kind of tighten everything up, instead of using 36, I might try to squeeze it into 24. And then from the input fields, instead of doing like a 20 pixel indention, I might do an eight, or I might do a 32. And you can expand to make it larger or smaller, kind of depending on kind of what you are gravitating towards, you know, at the end of the day, you need to be happy with your design, and it needs to serve the needs of the thing that you're designing for. So you need to... As long as as long as it is working for the project that you're designing for, that's your number one goal is to make it work for that and your personal preferences can come in just underneath that as long as you're hitting that goal first. So for homework for this example, I want you to design a similar form that's just got like one or two fields, that can be name an email, or it can be a login, whatever you wanna do, you can recreate some of your favorite logins or, just pick any simple form field login, and try to design some labels and Brookfield call to action. And do like three different versions of the same thing. One that's like really high density, one that might look a little bit too tight, and then do a medium more comfortable density. And then for your third one, do a larger, big, open and airy kind of form field. Bonus points if you wanna do active state, a default state and error state, maybe even like a success message or an error message inside of this simple form. But what I want you to focus on mainly is just the density of the form field, are you using those tight tight spacing or are you using a little bit larger and you might find yourself gravitating the same way I do to the kind of more breathing room, more space, but you have to just do it carefully because if you go too big, then the forms are gonna be crazy big and this is going to work for any other component that you're designing for not just form fields. So let's get those form fields design and get some feedback and get going.


=== FILE: 3-08 scale weight.txt ===
------------------------------
﻿- All right, in this one we're gonna be talking about scale, weight, and hierarchy. Now, visual hierarchy is gonna be very important when you're trying to influence a user to use your product or website in a very specific way, the same way that we're looking at this thing that says "You will read this first. Then you'll read this. Then this one. And you'll read this last. Now, there might be a small percentage of people that actually read this in a slightly different order, but for the most part, if it's the biggest thing on the screen, it's going to be read first, and if it's the most visually heavy thing on the screen, it's going to be a focal point. So, we can use this to our advantage when we're designing websites or interface design, specifically when we know exactly what we want someone to do. If we want someone to click a button, then it needs to be a lot heavier than the rest of the page, and it needs to stand out. That's why our primary calls to action are, a lot of times, very contrasty colors. I wanna walk through a couple of examples of scale and weight and - It's hard to create a lotta hierarchy without scale and weight, but they can kinda contribute to hierarchy in different ways. So, let's take a look at some of these examples. All right, so I've got the Streamline icon's website pulled up again, and I just wanna point out the scale and weight of everything on this website. Now, I know I've used this as examples for other things, but, almost every example, you can point out a specific thing, whether it's typography or color, or, in this example, we're gonna talk about the scale and the weight and the hierarchy. So, right away, the largest thing and the heaviest thing on the screen, in this particular screen, is this headline: "Hello. Welcome to Streamline. The world's largest icon pack." Now, even though there's a giant smiley face icon in the background, and it is large and it does have some weight, it's not the heaviest thing. It's the largest thing, but it's not the heaviest thing, so it's not commanding as much attention as this headline. And, I would say secondly is this medium-sized icon. It's got weight because it's also moving. It's got some visual weight because there's motion, and so, any time you have motion that's just on repeat, it's gonna draw a lot more attention than just something sitting still. That's why, if you look at sites like Product Hunt, and each one of these products has their own little icon, a lotta times, people are gonna create a motion little thumbnail, like a little animated GIF, because people want their thing to be seen more than everything else, and they wanna get upvoted. It's become a common trend to have these animated thumbnails because it just simply commands more attention. So, back on this website I'm using scale and weight to kind of give this headline its kind of punch. And then, if you scroll down here to the next section, you can see that I'm using scale and hierarchy in a very specific way, because I want the reader to see the headline, so it's gonna be larger. It's bolder and it's heavier, not only because it's bigger and darker, but it also has a lot of negative space around. And then, secondly, the second thing I want people to read is this paragraph, so I'm scaling them intentionally in the order that I want people to read them. And then as you scroll through and you hit these larger sections, I'm trying to visually interrupt the scrolling with this giant block of background color, because I really want it to accentuate these testimonials and that's an easy way to add a lot of weight, is just giving it a reversed-out background color, or any other particular color. You can see on some of these color pickers, I think the black one changes, yeah. Yeah, so it's reversed out. And the same thing with this call to action. You know, there's a call to action to download these for free, and it's got a lot of visual weight compared to everything else, even compared to this actual testimonial here, you know, this has more weight because it's slightly more important for the user to click this button than it is to read the testimonial. And then, if we keep scrolling down here, all the way down to the By section, you can see that I'm bringing back in that huge headline. It's the same kind of styled headline, because this is kind of the ultimate decision point and I'm breaking the entire format with these huge color blocks that haven't been seen anywhere else on the site cause I wanted the pricing section to stand out a lot differently than you know, any of the other sections. SO now, you can see, there's an overall weight to the page, specifically accentuated with the pricing section. But then, even within the pricing modules, I'm even making "Free Icon Pack" smaller, "Essential Pack" larger, and then "Ultimate Pack" is the largest, and each one of these has its own contrasting weight for the call to action, so. As you have the, kind of like your overall page structure, visual scale, weight, and hierarchy, but then, even inside all of your modules, you have your own little self-contained hierarchy and weight that needs to be kinda thought out as you design each little section. SO, scale can work for your typography, for your headlines, for your paragraph, and your call to action, but to give something a lot of visual weight, a lot of times it needs to be treated differently with a big background color, or a border or any other design element or even negative space can create a lot of visual weight. All right, so let's take a look at another example. This is a website called lawsofux.com, and this is actually a great website just to check out and read through. All of these different things: Doherty Threshold, Usability Effects with Aesthetics, this is some great content, but one thing I wanna point out here is just, it's a really good use of size and weight. You know, the entire website is kind of this dark background but each kind of main section has a very strong background color with a big strong graphic and this is a, you know, very clearly the main headline. And if you look on the home section, it's kinda this nice, well-weighted section of this kinda snake layout where it's kinda going from left to right, left to right. And obviously, the biggest attention is put on these covers, so I'm instantly drawn to those because it has the most visual weight. And then, there's a good use of scale being used here with the numbers. And the learn more, you know. Because there are a lot of calls to action on this page, it could be a little bit weird to have each one be really large and really contrasty, so a lot of times, if you have a website like this, you might wanna tone down the calls to action because it's more of an exploration, and you're not so concerned about any particular one being clicked. You just know that at any point you can click any of these big images or the buttons to go into that, so it's more of an exploratory type thing. If he was trying to sell this, you know, maybe there's a buy now button that's even more contrasty, or if there's some other very specific reason that there needs to be a stronger call to action, then maybe that would be a color, or something like that, but in this case, it's more of an exploration kinda choose your own adventure, scroll through these and click any of these. But then, as you go in, it's just a really good use of visual way to kind of interrupt the experience, and all of a sudden, I'm completely immersed in this particular color. The negative space usage around the title is really nice. And then, a little bit smaller, but still a really nicely set kind of overview here that's, you know, these Law of Common Region and a lot of these things could be kinda boring to read a lot of text, but I think he's done a great job with pulling out "Hey, here's an overview. Elements tend to be perceived into groups if they are sharing an area with a clearly defined boundary." And then you got the Key Takeaways, and now, he is using this reversed-out contrast on this Download the Poster button because this is the kind of like where you would - that's the main call to action on this page. And then, kinda, using, you know, a nice bit of hierarchy through all this typography. He's done a pretty nice job here. So, even though these are titles, they're the smallest on the page, and so he's bringing the content a little bit farther forward while keeping these headlines on these little sections small, because they don't really need to be that large. I think it's pretty common to have you know, secondary or even the third level of headlines to be smaller than the actual content because it just kinda needs to serve as a small heading. And then he's doing a great job of breaking that visual plane with another block of color to take someone to the next page. I just think it's a really smart layout for a pretty fun little project, and I'll put a link to this so you can check it out. Next up, I wanna look at a couple different designers on Dribble that have really good use of scale and hierarchy and, the way that these two designers use scale and hierarchy just add a really good flavor to the design. I like to think of scale and hierarchy as almost like a musical, like a song, you know? If you're just listening to EDM - over and over and over, while it may be good for a while, it's gonna be a little bit boring. But if the music has these big crescendos and then it gets really soft, and then, you know, even the beginning, the beginning of this video, you saw "You will read this first. And then you'll read this next. And then this one. And then you'll read this last." If you can vary the voice and the tone, a lot of masterful speakers at conferences, they are very animated, and they're moving around on the stage and they're talking really loud, but then they whisper, or they say something quiet, and that variety is just a little bit more captivating to listen to someone talk or to listen to a song. And so, a lot of times we're trying to recreate that variety with our designs because it's just more interesting. So we can use these big headlines and then smaller pieces of text, and we can kind of really influence the energy of the design by using those tools. So, first, I wanna look at Brijan, what's his last name, Brijan Powell. Brijan Powell's Dribble. I just think he does a really interesting job of having these big typographic kind of you know, overly graphic design kinda posters. I think, just, it's really good inspiration to see some of the stuff he's working on. He does a lot of overlap things and I just like the way he has this nice grid, you can even see the grid of these letters right in here and even though there's a lot of overlapping, he's adhering to this grid, but then he's breaking out, and it creates a lot of visual interest with scale and hierarchy. You know, a lot of this type of design is not gonna work specifically for interfaces, but it could be really nice on a marketing website, or any of the sites that are going to you know, promote a product or things like that. I think his work in particular just does a really good job of playing with type and hierarchy. Just kinda scroll through and see a lot of these different designs he's done here. This is a very simple example, but just a really nice, clean grid with a title and then secondary, so you can easily tell, okay, this was number one, this was number two, and then all this stuff is number three. And then he's even got, if you go to this actual site, I'm pretty sure it's a big scrolling thing in the background. So, just a lot of fun scale. His designs in particular just have a nice big variety to it, so it's just kind of this, there's a little bit of that, and a little bit of this, and it's not just the same thing over and over and over, which can be really easy to have a very boring, monotonous design, if you're not paying attention to scale and hierarchy and visual weight. Now, you are restrained a little bit more with interface design and I understand that. A lot of times you need to have that restraint to have a very usable product. So it kinda depends on what the intention is of the thing you're designing for, as to whether you go big and you make it really flavorful and energetic, or you're performing a very specific task and it needs to be toned down. But, at least having the mindset of knowing whether you're going to put emphasis or not, and being very intentional with it, is kinda key to really nailing scale and weight and hierarchy. All right, so the next designer I wanna show you, Ben Johnson. Ben's the same way. He does a great job of just really adding a ton of texture to his designs. He does a lot of photo montage collage type stuff. You can see, I mean, giant M in the background, paired with this photo and these big titles for some of this secondary stuff. This one here is kind of like a fun idea for an audible layout. So you're just kinda playing with this idea of torn pages, kind of collaged together with a huge title. This is really neat, I like the way that he'll blow up huge pieces of text to title work and, actually, it's hard to read some of this, but it does add a lot of visual interest. And this is an example from, I think, a Nixon concept he did. SO he just experiments a lot with scale of imagery and type and combining everything mixed with the quieter, smaller text that kind of call out the thing that is actually on there. So, again, a lot of these styles, from Brijan and Ben, sometimes, you know, those aren't really gonna work for mobile apps or an iOS design, but if you're, you know, just designing a big header image and you wanna kind of show off a really fun thing to start with, you know, these are great places to get inspiration and also just a good thing to always keep in mind, to look at how can, where can you vary the type. You know, for a long, long time, iOS never had those big titles, and then, slowly, whether it was iOS 10 or 11, I can't remember, they brought in the big messages or inbox and it adds a little bit more variety to the design and it's a little bit more interesting. So, I think looking for ways to do that is always a good practice, to kind of look where you can add that scale and weight to make it a little bit more visually interesting. All right, so last, again, I wanna show you this MyMonero project. I've talked about this before, but specifically in this context, I wanna talk about scale and weight. So, this is, again, this is a cryptocurrency wallet for holding your Monero and once you've logged into the wallet, you have the ability to create multiple wallets. SO I've got Spending Cash Wallet, Savings Wallet, and then each one of these, as you go into the detail, I have this huge balance shown here, and I think these are 13 digits. And I actually went through multiple designs here, because I wanted to kind of really nail the difference between the two different wallets, and I also wanted to bring a little bit more visual interest in here. So, if I bring this back, you can see on my wallet detail exploration page, I experimented with just bringing the wallet icon back in, and adding a big number at the top, and I still think that this works. And this is another version, where I've got the wallet icon and the big number. I think I also just felt that it was weird that I had this wallet icon and then this kind of wallet graphic. Actually, if you look at these two, this is larger and it's scaled, but it's not really scaled large enough. Most of the time, when you're working with scale, you need to have a big enough contrast between two elements for scale to actually work. If you have a little thing and then a little thing that's a little bit bigger, the scale is just gonna be a little bit broken. So, if you really wanna play off of scale, you need to kinda overemphasize some certain things. And that's exactly I did on this. So, you can see that I eventually landed on this, where it's like, okay, now I'm inside the wallet. I've clicked on the wallet and I've brought in this blue color that is the same as the blue wallet, and then if you clicked on the green one, you would have your green background and then I created all these variations to make sure the colors were gonna work. These were coinciding with all the different colors of the wallets that you could actually choose. You know, maybe someone chose the dark colored wallet and it wasn't gonna be quite as accentuated, but they would know that if they went back, you know, it would still have that dark color. And the amount of money in your account is a lot more important than a lot of the other details, so that is why the scale is a lot larger and the visual weight is a lot heavier. Kinda the same thing with just the navigation, you know, the selected icon is visually more heavy than the other icon. These are all a little bit more subdued. Creating visual weight is a way to show the active states, to show the most influential information, for calls to action, but you have to use it carefully because if everything is heavy, everything's important, then that just kinda makes everything flat at a higher level. And so, if everything's heavy and too busy, it's gonna feel like the interface is screaming at you, so you have to use it with restraint and make sure you're very intentional about it. Oh, and, as a very quick aside, I did wanna show you something pretty cool that I discovered when I was looking at Ben Johnson's work. If you'll remember, he had a lot of kind of collagey-type things, and then I realized inside of Figma, you can actually create a mask with the live type. I didn't realize you could do that. So, lemme just show you what I mean here. So, I've just typed out 2020 really big, I've increased, I've decreased the line height to 70%, and I've kind of tightened up the letter spacing, so it just kinda feels a little bit tighter. All right, so I'm gonna hit command backslash, and type in unsplash. This will give you access to, really, any of these plug-ins. Open that up. And, I'm just gonna paste in a photo here. Choose animal, and we have this little guy. SO we're gonna put it right on top, group these two things, and then I'm gonna hit control command M to create a mask. You can also, let's see, where is this command, mask. Use as mask. So, under Object, Use as Mask, and then you can, you know, position this photo however you want. That's just a really cool, kind of fun way you might wanna create a graphic for a website or something like that. Just wanted to throw that little trick in there that I discovered while I was preparing for this lesson. Okay, for homework, I'm gonna get you to design a movie-browsing web page. So a grid of movies with the poster art. You can pick whether it's a mobile screen or a desktop app. Pick whether these are new released movies or a genre that you really like, maybe you have a favorite actor or actress that you wanna put their movies in. You make the call on that, but do a grid of nine and try to get a nice spacing grid system going on, nice titles. I also want you to add a title underneath the poster and then a little bit of metadata down below like the release date, or maybe starring so and so, and you know, maybe there's a small, one-line description, just so there's a little bit more contextual information. And then I also want you to have one of them selected with a detail view either coming in from the side or popping up in a motile, or sliding up from the top, or maybe there's a secondary detail screen. You decide how you wanna do the detail screen, but I want you to pay special attention for this particular lesson to the scale and the weight and the hierarchy. So, on the exploration side of things, the movie posters, they're all gonna be about the same kinda size, but then the active state of the movie posters should have a little bit more weight because you need to show that it is indeed active, whether that's background color or border, you get to decide that, and then the detail screen, if you're gonna show it on the same screen, it needs to have a lot of visual weight, and then if you're gonna show it on it's own separate page, you at least need to kind of think about scale of the movie imagery. Maybe you bring in a different image from the movie, and maybe you scale up the movie poster. You decide, but for this particular lesson, just really think about your scale, your weight, and your hierarchy. Post your work, and I can't wait to see what you come up with.


=== FILE: 3-09 affordance.txt ===
------------------------------
﻿- Affordance is the quality or property of an object that defines its possible uses or makes clear how it can or should be used. Interfaces exist for people to be able to use them, and to do things with them. Use and do are both action verbs and affordances give clear indication that action is possible. And there's lots of different ways inside of an interface or a website or a mobile app that affordance comes into play whether it's scrolling, swiping, tapping, editing, enlarging, zooming, all kinds of different ways that affordance comes into play. So it's just highly, highly important that you're constantly thinking of affordance and you're looking at your screens that you design And you're thinking, "Okay is the user going to know "that they can do something on the screen? "What do I want them to do? "And what is it easy for them to be able "to see that they can do." So let's take a look at some affordance examples. All right one of the most basic affordance examples in the history of web design are cursors. We all have this little mouse cursor that is a little pointer. And these are all the different CSS properties that you can turn a cursor into by default. So you can see if something's not allowed, there's a little ban icon. If you can resize something from the top, you have this north south resize. If you can resize something left and right. You've got your crosshair that allows you to if I hit Command + Shift + four, I've got my crosshairs, and all these little things are affordances. It's super simple, but also just very subtle. It gives me, okay, this is gonna copy something, this is how I can move something around. Please wait while we do something. All of these little indicators are just signaling to the user that something's happening or something can happen based on where you place your mouse. So as small of an example of this is, this is a very nuanced and detailed look at what happens with a mouse cursor when it's just placed over certain things. Another example is this. This is a little prototype that I made for the Envision Studio Course. So if you look here, I've got a little tiny thing happening when you hover the input field. So I'm hovering the input field. It's a small, subtle affordance that's saying, "Hey you can click into this thing." On a normal input field, your cursor would actually change as well. So that would be even more of an affordance. So now there's another affordance. There's a blinking cursor. I think we probably take that for granted, but nearly everyone that uses a computer realizes that a blinking cursor means that you can type into the password field. Another affordance here is the Back button. I can go back if I want to. I can click this eyeball if I wanna show the password. So I'm gonna click this just to show what happens when you go to the next. I've also got the password strength indicator, these are kinda grayed out and this one is coming in checked and I've got a strike through. These are all small affordances that let me know, action is being taken. That action can happen and that action is being taken. So the next time I go, one uppercase letter is gonna get striked out one, special character minimum of eight characters. And then I can also click the eyeball icon to see what the password is. And there's a new affordance there's like, "No, I don't wanna see the password." So there's a line through the icon. And you'll notice that once we went all the way through that the next button ended up getting viewed pay attention to the top right. Once you've hit all of those specific characters, the next button lights up, which is another affordance. So there's a lot of tiny little details that you need to think about while you're designing a form or an interactive screen of any type. What are the little affordances that are gonna make it explicitly clear of what is happening. And there's really no easy way around it, you have to design every little detail for every little affordance whether it's a hover state, or something is checked or something highlights. And a lot of times you might need to use a little bit of animation to smooth those affordances out. All right, moving on to another example. I just wanna pull up this profile design for this Zipper app. I'm looking at the profile screen, and I can see an edit button. All of these colors are indicating that I can take certain action here. I can edit this, or if I've saved the profile, I've made an edit and saved it. And it's gonna say, your profile will say this might pop up. So all of these are just more affordances. You're constantly thinking about action, item, text, but it's important even now that I'm looking back on this screen. I designed this a couple years ago actually. And now I'm wondering why is this email yellow? I can't remember. Maybe it's because you can actually send an email to the people on your team by tapping that, and maybe that was the affordance that I wanted to put forth. But also it doesn't make sense that you can email yourself on the profile screen. That's something that I might think about when I'm designing the screen. Does that actually need to be yellow and highlighted as an action item on this particular screen? And then again, I'm not sure. Same thing with these toggle switches, there's an affordance that this is turned on. And there's an affordance that this is turned off. And it's mirroring the example that iOS uses as their toggles. But it's just another way to show something on or off, highlighted or dimmed. Another example of affordance here is this roadie.com website. This was a long time ago. And sadly, the website no longer looks like this. On the main home screen, we wanted people to know that there was an iOS app, and there was an Android app. And so in a non interface design kinda way, even just simply telling someone that something exists is a way of giving them affordance to know that okay well, if there's two apps, then I can use it on iOS or Android that's in its own way an affordance. So right here, I could have gone a little bit wider like this. And I could have moved this badge. See if I can grab this thing. If I move the badge up, and I can move some of this stuff up, and I could have had a nice. Get that out of there. Could have had like a something like this, maybe the navigation didn't show up till later. But if I had something that looked like this, there's not really any affordance that you can scroll down, except maybe the fact that these screens are cut off. So very intentionally, I wanted this maximum height to be set at like 90%. And I wanted this badge to be cut off a little bit when you first landed. Because that just gives you an affordance that you can scroll through the webpage. I can't tell you how many times I've seen a big, nice design, nicely designed hero image. And it just looks like a framed poster. I've hit websites like that, and I didn't even know that I could scroll. Now you can make an argument that most people are gonna scroll when they get to a website. But if it looks like a framed image, I don't have any, nothing's telling me to scroll. So I'm not going to scroll. Usually if I can't see that there's more content down below the same exact thing with the weather app. I can see that there's little clouds cut off to the right. And I can swipe through them to see, multiple times during the day. Or on the home screen. I've swiped up enough to know that I can swipe up over my phone. But in case you forgot, there's a little animation at the bottom that says, "Swipe up to open." And then even in the Photos app. If you tap a photo, I can swipe down to go and that's not really a great affordance but I can also tap the top level left to go back as well. So there's two different ways that I can dismiss a photo. One is more of a hidden thing that there's really not an affordance for other than maybe if you accidentally tug down on the photo. But sometimes if you have a cool hidden gesture, you also need to keep your strong affordance in there, like the Back arrow that you can tap to go down. And as the web and mobile apps progress, sometimes you don't always need an arrow that indicates action. Sometimes the content itself can be designed in an interactive enough layout to where you don't need all these little static affordances. Because a lot of the interface just kinda becomes a little bit more fluid and interactive. So it really depends on what you're designing and how much affordance you need to actually design but if your product is not usable, then it's not usable. And if no one knows that you can go back or swipe down to dismiss and there's no button, then you're gonna have people that have problems doing those simple actions because there's no affordance designed for it. Here's another example from the Roadie app. And just to refresh your memory Roadie was an app that allowed someone who was already gonna drive from point A to point B to check out the app and kind of deliver someone's package. Sorta like Uber for delivering packages. So in this case we're delivering this beloved squirrel painting, and this is Miranda's painting. And I as the driver am looking at this, and I'm saying, "Okay, I've got the package. "I'm gonna tap this button when I'm on my way." And then there's kinda this indicator, this affordance of this line coming down. And it's saying, "Okay you're gonna meet Roy "at the following pickup location." Here's the location lines coming down, there's the map, and eventually I'm gonna confirm the pickup. I'm going to be at the delivery location and then confirm delivery. And so there's kind of this progression, this downward progression of picking things up, taking a picture. And as a progress indicator, it's just showing you what happens. So there's this entire world of slowly and methodically and carefully planning out what makes sense for each screen. And it's really just a matter of going very slow and making sure that each step is clear and maintains that level of affordance, letting everyone know what's going on. What can be done and what has been done and showing those pieces of information along the way. All right last example here is the Sena sampler app again. There's several affordances kinda going on here. One you can drag these tracks into different spaces. So if I wanted this instrument here to go into slot number five, then this one would actually slide up and this one would pop into place. And so the affordance here is as you hover these things, you can't tell that easily. But the default state is kind of a darker gray. And then as you hover each one of these, they light up kind of a lighter color. And then once you grab it, bringing in this like grab icon, changing the cursor and then we also add a shadow to the entire thing. So there's a big affordance to let people know this is now pulled out of place and can be drug around or dragged around whatever the proper past tense of that is. And then also there's another affordance here that there can be up to 16 channels here. But I've intentionally cut the vertical height right in the middle of one to show that there's more down below that fold there. If this thing was, if all of these pieces were cut off completely, and it might just look like they're only seven there and you can't scroll down. So that's a small affordance. And also showing that if you hover your cursor right over this thing, you can actually raise and lower that tray and kind of make it your own. And you can see this even in little finder windows, if you hover a sidebar, you're gonna get a cursor here that lets you know that you can slide this left and right. Okay so affordance homework. I'm gonna give you a super quick crash course on figma animation. If you haven't used it yet, I'm gonna show you some quick tips on this. But overall I want you to design a three page onboarding screen. Say it's like the beginning of an app, and you just downloaded it and it's like, "Hey you can do this, swipe over, you can do this." And there's maybe there's three steps and then you finish. Okay so to do that, what I'm gonna get you to do is create a new frame. I'm gonna choose iPhone 11. Let's just call this screen one. I'm gonna duplicate it twice. So I've got screen one, two and three. And I'm gonna design a very, very crude version of this just to give you an idea of what's gonna happen. Probably already know, but I'm gonna show you anyway. Okay so I've got three buttons here, or three dots this is gonna indicate that you're on step one of three. And then I'm gonna, if you click, if you copy this from this art board, and then you choose this art board and you hit Command + V, that's gonna paste it in place on the new art board. And then what I'm gonna do is say okay, now this one I want to be that color. And then I want the third one, to be that color. Okay so now I've got these little indicators I'm gonna create a super simple like little grid. I'm really just kinda making something up here. So let's see. They'll go there. And still more. So this is just kind of like a fake image, or illustration or whatever you wanna call it, make this a little bit bigger. Maybe I'll move that down, paste that, paste that, two and three. Paste that there, paste that there. Okay so you can see if I want to I could, I'm just gonna choose the frame and go up here to prototype and then interaction will be on tap. And then I want that to go there. So the interaction here will be, going there on tap. And what I'm gonna do is make sure that these are on smart animate. Go back here and change this. Okay smart animate. That's on smart animate. And then I'll have this one go back to number one. And leave that on smart animate. And now I'm going to hit Command, is a Command return. Or maybe there's not a command for it. I'm gonna hit this Play button here. And let's see what happens. Tap. Okay somehow our animation is not working. All right let's go back. I have it set to On drag. Somehow I made a mistake on tap. That should be on tap. That should be on tap. Okay now that should work. Alright so now I tap, tap, tap. Okay so there's one, two, three, one, two, three. And you can see the dot, the dot is the affordance to let me know the dot and the number actually is the affordance. That lets me know what's happening. Now if I wanna get fancier, I could say, okay, what if I brought in the two right here, and I brought in the one here? And then maybe this was zero percent opacity. And this is zero percent opacity. Now you're gonna see the one. So this art board is going to transition to that one and you'll see the two kinda scroll over and the one's gonna fade out. See what it looks like. There we go. You can see our one and our two are sliding over. And we could do the same thing with the three, put the three there and the two there. And then we'll make both of these zero. If we wanted to, we could make something happen inside of here as well. I don't know how that's gonna work. But just to give you an idea of ways you can keep playing with this. One, two, three. So it's kind of a neat little animation trick here with the smart anime boards inside of figma. So what I want you to do is create something similar to this. But instead of giving it, you could do a wire frame if you wanted to, but maybe come up with a fake app name. Or if you're having trouble you can, actually you know what you should do. So if you wanted to, you could go to this website, humans.com with three A's by Pablo Stanley. You could grab some of these illustrations, and you could possibly use these inside of your intro animations. You don't have to use these. But it could be kind of a fun way to just add a little bit more to your design. Play with the colors. And you can see that the one thing that I did not do, I did not really add much affordance to these screens. If you go and you play this prototype, there is not really anything other than the circles that indicate, I can tap this, or I can swipe this. So that might be enough, it might be enough to have only the circles, but you might also wanna have an X button or an arrow, or maybe the two is showing a little bit on the next side. And that kinda indicates that there's a little bit more. So play around with some different ways to show affordance on this particular screen. And you come up with just three. And if you do it in figma, post a link to the prototype, or post your designs. Either way, it's up to you. So this should be a fun little example. And remember just affordance. What can I do, what can be done and what has been done? You're gonna need to think about this. Every time you design a screen, every time you tackle a project or a little bit of a problem. Affordance needs to be one of the main things that you're thinking about at all times. So good luck with the project, and I can't wait to see what you post.


=== FILE: 3-10 interactive layouts.txt ===
------------------------------
﻿- Now I know that we're designing flat static designs in a flat static design tool. That doesn't mean that our designs have to be flat and static. We can't forget that on the phone, on the website, things are flying around. They're scrolling, swiping, hovering, clicking, enlarging, reducing in size overlay. All these different interactive elements are a big part of the layout, whether it's the small little details of the layout or big, full page transitions things like that. So, how do we incorporate this interactivity into our static design tools? And, how can we plan for that? How can we produce tests? Let's dive into some of these ideas behind creating these rich interactive layouts that will take our designs to the next level. Let's take a look at some examples. All right, so first of all, this is such a simple example. I've got a, an unordered list here in a CodePen, and I just numbered them one, two, three, four, and I added a little bit of a scale on hover and a little bit of a background change. And, something simple like this just gives like a nice interactive feel to it. And all I'm doing is I'm increasing the scale by 1.05 and then I'm increasing the opacity from point 8 to 100%. And you can see if I, if I take out the opacity and the transition, and we just have these simple black hover overstates, I mean, it still feels interactive, but it's not nearly as fun and exciting. And especially if I took away the hover state altogether, technically the mouse hand is giving me the affordance that I can actually click on these things. But just a few simple lines of code of CSS can add a lot of fun interactivity to these little tiny pills. And this is easy to design inside of it as inside of Figma or Sketch or anything else, making something a little bit bigger, changing the background color. But sometimes, sometimes it can be difficult, especially with these small micro interactions. It can be hard to get a feel for how, how it actually works without playing with it and like mousing over it. So a lot of times you might need to make a a small animated prototype or put something inside a CodePen. So you can get a look to see how it feels. An example of when I use something almost exactly the same way with the scale is these logos right here. It's very subtle but I wanted to put just a little bit of interactivity on these logos. As you roll over, it just adds a little bit more playfulness and a little more fun, same thing with these. If you zoom way and you can see I'm I'm rotating them slightly and hover and increasing the scale and doing the same thing with the buy button. I'm raising it up a little bit. And then if you go down here, you can see these are raising, just adding and just being thoughtful about adding a little bit of interactivity. It's kind of similar to the same way that if, if I'm talking to you and you're looking at your phone you're aha aha aha yeah, aha. You're not being very interactive with me. But, if I call your name or if I say, hey, what's going on? And you're like, yeah, yeah, you're responding to my interaction with you. And if you think about the human human, human to human interaction, anytime you can get a response or an interesting conversation, and you say something someone repeats it back, or, something is engaging. It's usually because there's a response and some kind of interaction. So, if we can think about our layout in the same way as having like a human conversation, it doesn't need to be crazy and animated and, oh my gosh can you believe it? I think, I think I just changed something. No, I think you're still good, okay. So it doesn't need to be crazy. And sometimes, sometimes there's a, there's a time to go over the top. Something, I just actually, might've just messed up on the on the camera. No okay, we're good. So it's not like you have to go crazy over the top with animations and I've done that before too and, I've had to scale it back, but it's just one of those things where you just, you're kind of mindful of what is going to allow a user to know that they are interacting with the app. It's the same, it's the same exact way. If you look at the same way that if you look at the Twitter app. And this. If I'm refreshing the screen and I'm pulling to refresh and it's kinda slowly coming down and popping back up, if I'm hitting the tweet button and the, the modal is popping up from the bottom and it's sliding in and it slides up and the keyboard comes up, like that's not a mistake. All of these are kind of playing together to add to the richness of the, of the experience. So let's look here at apple.com/privacy. So as I scroll down, you can see that, this layout is changing. Once, I scroll past the global header, you can see that now the layout, there's a fixed header here, because they want you to be able to go in between these different, they want you to be able to go in between these different navigation areas. And then right here, this is, it's got a video here. And if I click more, this video area kinda fades out and reveals the extra information. And you could, there's a 100 different ways you could create this layout and you could, you could have a video and the title, and then all of the body of text, but it might be a little bit overwhelming and maybe someone doesn't wanna read all that. So they're adding the simple little hover animation. And they're ever so slightly twisting this thing into the X. And the more, isn't just fading out, it's also sliding over. So, just tiny little details to add interactivity. And I feel like they could have even added when you click more, instead of the text just fading in, it could also slide slightly from left to right to mimic that more icon. So it just adds a little bit more, it just adds a little bit more life to it. Let's look at another example on nike.com. So you can see here we've got a simple grid layout standard e-commerce with our filters on the left. Again, you can see that this, this little section right here, they're scaling this down and they're making it a sticky element on the top, same thing with filter and sort by. So adding these like fixed headers while you scroll, it's definitely one way to add some interactivity. But then if you look at these like hover any of these images and you get these extra little items here and I'm just hovering. A lot of this isn't necessarily possible on mobile but, it is worth enhancing the experience, especially if I'm wondering, oh, I wonder if this jacket comes in black or brown, there's a lot of fun little ways you can add subtle interactive qualities to individual elements. And, it's not really making it interactive for interactive sake because that's an easy road to go down as well. If you get all into animation and you make things flying around for no good reason, believe me, I've done that in the past. And, if it's not very intentional, then it's not really gonna add much. It's not really gonna add much value to the product. So this simple little animation or interactivity rather, it's allowing me to see the covers are the colors of this particular product without having to click into it, load a new page and wait for that to happen. But now I can, I can still see these larger, it's just gonna take a little bit longer because it loads those images in. And then what I think is what I think is a, another neat interactive layout here. They're adding in this video that shows a lot of what you can't get in a photo. So just keeping in mind that videos can get put into the web. It doesn't have to be only, only photos. And if I click one of these nine times out of 10, anytime you're shopping for clothes or shoes or whatever, you wanna see a really big image. And, I don't know about you, but I can't stand the little, you click it and then there's like a magnifying glass and you, it's like weird and and it's kind of clunky. So I love to see this be like a full takeover. So I click this and all of a sudden, boom, I've got a gigantic image. Simple little X button here. And all of these images I can see really, really large. And I'm getting exactly what I want. I don't have to worry about any other, I don't have to worry about any other interface elements, crowding out the images. Cause all I really care about right now is seeing how this jacket looks, seeing the details, and having this layout change as I click on it. It's just a really great way and so, as we're designing these grids and these detail views, we need to start thinking about the transitions and, the intention behind why, are we gonna go really big? Because, does that make sense? Not every site needs to have a big over overlay that shows a bunch of details. So, knowing when you're gonna do it and why you're gonna do it is first and foremost, the most important thing to do. But then you also just wanna play around with, how are we gonna make this happen? Is it gonna grow in from the top? Is it gonna fade in or is it just gonna come over in a huge fashion? A lot of times, if you, if you try to go too over the top with animations, it's gonna make the browser feel clunky. So you have to kinda balance all that and, talk to the developers or whoever's going to be implementing this and collaborate on those ideas versus just saying, here's what I designed, here you go. And I will cover, we'll cover a lot more of animation and prototyping in some other lessons. But for now I just wanna kinda hammer in the point that our layouts are going to be interactive. The more interactive, the better, as long as that is creating the correct intention for what you're intending to the thing to actually do. So I'm gonna pull up, I'm gonna pull up just a few other personal project examples and kinda walk you through some of these interactive pieces here. So this is like a, this is a video that I exported. I think I created this in InVision Studio. This would also be possible in Figma or XD. So right here, this is like you landed on this app's home screen for the first time. And I wanted a way to let people know they could call or text to get started. So, I've got this simple thing animating from I'm animating a little arrow down and over to let people know you can call or text. And these are the two different places that you can do it. And I'm also bringing in like the brighter white. So it's something that's really, this was relatively simple to implement, but this simple interactivity, is gonna create a lot more usability for like the landing screen. Instead of just leaving someone in a blank place. This would give someone a lot more of an indication of what they can do next. Especially if you're also prompting them with, hey, why don't you call a text or friend to get started with your new number. Next in the same app, I was designing a custom dialer. And, your standard dialer has A, B, C, D, E, F underneath each number. And, it's very rare that I use that. And when I do, it's like maybe 1% of the time when I'm actually using my phone. So I thought, what if we're dealing with an interactive screen here? So what if I put A, B, C in the top right, as a little toggle to show and hide those letters whenever you needed it. That way it could just be a lot more clean and we won't have to worry about it. Some people might say, why would we, why would we need to hide it? It doesn't matter. Well, if you, if you're, when you're designing something like this, you're going to have to sell the value. If you think it should exist. You can't just say, here it is. I want you to implement this and this is what we should do, but it's only gonna take you a few minutes to design something like this. And so if you can, if you can design it and show what it looks like and let people interact with it, you're gonna have a much better chance of convincing someone, whether it's a stakeholder or a developer that they should implement this, because if you do it well, this serves as your persuasive piece to say, look, we could, we could do this. And these numbers raise up. And here's what the hover states look like. A lot of times you you really just have to add some interactivity to make these screens come alive. Because otherwise, this is a pretty simple kind of a bland screen. But once you have the the simple layout and you add the interactivity layer on top of it, it kinda comes alive. This is another example from this project called siempo. Now you can see I'm gonna slowly scroll through this. I made this in Adobe Animate, which used to be Adobe Flash. And this is kind of a, this took a long time to do probably a full couple of days to animate all this, or at least a day after all the designs were complete. But you can see I'm tapping this big area at the top. And then the text, call and contacts are kinda slinking up. So I wanted it to feel kind of elastic in a way, just to give it a little bit more. I don't know a little bit more fun, I guess, cause things can just slide straight up or if it has this kinda slinky effect, it just feels like it's like, I don't know, maybe more reactive. And then same thing as I'm typing jes the auto-populate is bringing up the same things in the same kind of format. I chose the top option and then the mobile and home number is kind of fading in so I'm reusing that same animation. And then, I tap call, or actually no I'm choosing the contact from that person. Same animation. I wanna text. So now all of a sudden, texts pops up in. And then as I type, then the ability to send comes in. Showing what happens when the message is loading and sending. Slides over. So on so forth. So you get this. What might seem like a very simple maybe not as wow of a design can really come to life when you start thinking about all of the little interactive details that can happen. And if you'll notice most of the interactivity only comes from changing three to four different values. Changing the X coordinate or the Y coordinate of any given piece of UI or changing the opacity or the scale of an object. Those four things changed at just the right time, whether it's hiding and showing things or sliding things in on an X coordinate from zero to 120 or zero to 120 on the Y axis. Those four things can take you so far, as long as you're trying to like fine-tune those details and add those interactive qualities. And you might wanna, there's plenty of times when all you need is the simple screen to screen slide or any standard animation that comes with any device, like an iOS that you're drilling down and screens are sliding, or you're tapping a button and, a modal slides up from the bottom. But every now and then you need to kind of think about those rich interactive pieces when something can just add a little bit more in context for what you're designing. Here's another example of this my monero wallet. And I was trying to show the developer how this little address thing would work, because I didn't want all of these crazy long keys to be showing by default. So, I actually just copied and pasted some of these static designs from Sketch into Adobe XD because Sketch, at least at the time that I made this, didn't have any animation properties and I don't believe it does now actually. But if I check this. I'm only you, I'm just using a simple little dissolve animation between the two, but it gives you an idea that, okay, this content's gonna get pushed down. And, this thing, this little arrow is going to kinda rotate. So sometimes just, just a simple like rough prototype like this can give someone else who's gonna implement it, just enough information where they're oh, okay, now I can understand they know what they're gonna do with the code based on what you've shown them with the design. And, sometimes you have to experiment. Sometimes you have to ask, questions. Is this possible? Could we do this? Could we do this? Before you start working on your ideas. Because, I think one of the worst things you could do is not have an idea of the constraints that you're dealing with and then just design something crazy and try to hand it off to someone. You're gonna have to collaborate with whoever is going to implement this, to get your, your ideas to fruition. And, unless you have a solid working knowledge of how this is going to work already. Then you're definitely gonna need to collaborate with other people on things like this. Otherwise it's just gonna fall kind of flat. All right, another quick example here. So I had this, this is like an app for lawyers who are dealing with personal injury cases. And I had these long, it was basically kind of like a a chat app kinda thing that lets someone kinda go back and forth with the lawyer and their assistants. And I was struggling to kinda show how all of this was gonna work. And it just felt like long and. When you're dealing with a bunch of messages over and over and over and you're scrolling forever and inside of us inside of a document like this, it feels a little bit overwhelming. So I decided to put this into a coded prototype. I just coded this up with HTML and CSS, and I'm not telling you that you have to code and that you have to put together prototypes. I'm just showing this particular example because, even if you uploaded this into an InVision prototype or a Sketch prototype, or a Figma prototype and you show the scrolling, it's just going to add that level of interactivity that will tell the story of your designs that much better. So in this one, I wanted to show like what each action meant. And I wanted to show like, as you're reading this and you're going through this, it just, it was an easy way to kinda present each one of these items and what was gonna happen. And, just having this being interactive like this, as simple as a scroll, it just made a lot better of a handoff piece when I was, giving everything to the developers. And it's gonna be different every time. There's gonna be a different way to hand things off or to prototype things or to have conversations every single time when you're handing something off, it's always gonna be different. And again, I'll, I'll talk about handoff in another lesson because that's a whole, big topic on its own, but I just want to, again, drill in. Interactivity in your layouts. We have the ability to be interactive and we need to embrace it because that's what's gonna make it really come to life. Okay so for homework, two external resources that I want you to check out. One is gonna be this transitional interfaces post by Pasquale D'Silva. Who does a really good job explaining some of these ideas behind interactivity with, things just showing up versus things animating in. So it's a really good little brief article on kinda animating some things. He's also uploaded a talk that he did. And then lastly, Tom Giannattasio from InVision Studio did a really great talk. This is just under 20 minutes. And he talks all about animation and ways to to add animation into your prototypes and just to add a lot of rich interactivity. So I highly encourage you to check that out. And also, this is definitely not a requirement, but if you want to, if you wanna get more into animation and get some of these ideas behind what's happening, you can also check out, switchtostudio.com which is a course that I created in collaboration with InVision. So if you ever wanna dip your toes into the custom animation inside of InVision Studio, this is a great resource to do it. Again, I will cover animation in this particular course in another lesson, but I just wanted to give you a couple of things to look at if you're really interested in kinda going down the rabbit hole on that. Okay so for homework. Really quickly I wanna, I wanna cover some of this animation stuff inside of Figma, because for homework, I'm gonna get you to create an interactive layout with a simple to do list or something similar. You can come up with another idea if you want. Just have a list. You can say, I've got my list here. Here's all my stuff. I need to make coffee, workout, email that person back, get some groceries and make dinner. So if I click on this, get some groceries, you can see I've got a little thing sliding down and it reveals milk, eggs, coffee, and lots of bacon. And I click it in and it closes. And if I, I'll click, I can click anywhere on this whole screen because I added the tap interaction to the entire screen. And I just wanna show you how I created this really quickly, because this will give you an idea for how you can add some interactivity to your homework for this particular lesson. Because what I want you to do is create something similar to this. You can either take this and redesign it, or you can take this and create an overlay. Some kind of interactive layout that I want you to put together. And it can just be one screen to another screen just to kinda get that ball rolling. So if you look when you're creating these interactivity pieces like this, a lot of times it's helpful to start with the final, to have basically two screens. One to start with and one that you end on. And, the way you wanna do this, is let me move this, actually, let me, let me just duplicate this so I don't mess anything up. Bring this down. So you can see what I've done here is, I've got get some groceries. Basically group one through five indicates all these different ones. I didn't really bother naming them yet. So, inside of group four get some groceries and then rectangle is the background. And then right here you can see I've got a notes layer. And, I've got just a simple text layer with milk, eggs, everything like that. What I've done is I've created a mask beneath this, line of text. And to create a mask all you do is draw a rectangle on top of your text. Put those things in a group, and then you can choose that rectangle and hit Control + Command + M to create a mask. And then, you can move the mask around and you can see it's gonna mask the text. So that's what I've done here is created a mask. And you can see if I move this mask around, it's gonna mask the text. And so then, if I delete this out of here, so what I did was I option dragged this over here. And then I change the background back to this color. And then all of these are set at 60 pixels high. So I'm gonna change that. Actually, let me do that last. So what I'm gonna do is, simply grab this rectangle and make it smaller. So I'm changing the size of the mask. And, it doesn't matter how you do it or how small you make it. You just kinda want it to be down here because if it's, if it's animating from this screen to the next, it's gonna grow like that. So if I did it, if I did it the opposite way, it would grow from the top. So we wanted to go from or grow from the bottom. We wanted to grow from the top and we want this to be 60. And then we want that to be right there in place and everything else is the same. So now I have those elements hidden inside of here. And so now I can click here, go to prototype, drag this over here and say on tap. I wanna navigate to list expanded that's already done. And I wanna make sure smart animate is selected here. And then I wanna do the same thing for the screen. Drag the point over there, navigate to list, smart animate is selected. And then if I go to the prototype, you can see that that's happening. So I want you to take this example and create your own kinda list and detail view. If you wanna do an expanded version or if you wanna pop it out and make it grow, change the colors, change it however you want to. I just kinda wanna get you into the mindset of thinking through interactivity. So. Let's don't waste any more time and let's get started on that interactive layout.


=== FILE: 4-01 color methods.txt ===
------------------------------
﻿- When you move beyond sketches, and wireframes and default styles. You're going to have to start choosing and using colors, and colors in general can be overwhelming. I still find myself at times, kinda overwhelmed with color choice. And in this lesson, we're going to lay the foundation, for all of our colors the lighting needs, for our future projects. So I'm gonna break down RGB, HEX Codes, HSL and HSB. First of all, I'm gonna start with RGB. You might've already known this, but that stands for red, green, and blue. And that refers to the light colors, that shoot from the back of the monitor onto your screen. So you can actually see the colors. So every color that exists, is some combination of red, green, and blue. So there are 255 units of color, in an RGB color space and color space is a whole different can of worms that I'm not gonna get into 'cause I barely understand it myself, but there are 255 values. So if you add 255 red, 255 green and 255 blue, you're gonna get black, the color black. And if you bring all of those down to zero, you're going to get the color white. I said that backwards, 255 of every color is white and zero of every color is black. I should probably call that out, but I think it's kind of funny, because honestly I still get confused by that sometimes. So don't let this overwhelm you. Remembering and using RGB codes is not very intuitive to me. So you're gonna find a lot more usage of HSB and HSL color selection methods and design tools. So just look at these examples, this RGB blue color, this orange and this green, these are gonna be pretty hard, to kind of make sense of that. So because these are kinda complicated, I don't really rely on RGB when I'm designing, unless I'm specifically trying to pull in that value, from some other color I saw somewhere else. But even then I'm probably using HEX Codes or HSB. HSB is my favorite, but I'll get to that in just a minute. All right, HEX Codes HEX stands for Hexadecimal, which means six digits. So the first two digits are for red, second two digits are for green and the third set of two digits is blue. So red, green, and blue inside of the HEX Code and the HEX Code, the ranking inside of the HEX Code. It goes like this zero to nine and then A to F. Zero is actually the absence of that color, F is gonna be maximum of that color. So the HEX Code FF, zero, zero, zero, zero is gonna be maxed out red and then none of green and blue. So if you max out either the first two, the middle two or the last two, you're gonna get a fully saturated version of that color. HEX Codes are programmatically going to be formatted, with a pound sign in front of them or a hashtag for all of the millennials out there. Your design tool is not gonna require the hashtag. You're just gonna need to use the numbers or the letters. So you can just type in zero, zero, zero, zero, zero for black, and then F F F F F F for white but there is also some HEX Code shorthand, and this is kind of derivative from websites and like CSS code. So if you put in shorthand for black, that would be zero, zero, zero. It's almost like a condensed version of that HEX Code. The same way for white would be FFF, and if you wanted to do red, you could do F zero zero. And so HEX Codes are gonna be kind of like omnipresent. I mean, you can use HEX Codes for anything, on the web, or in apps, and all of both RGB values and HEX Codes, can both be translated to one another. So it's not like, you're going to pin yourself into a corner if you use a HEX Code instead of an RGB value. You can always just go look inside of your design tool and see what each of those values are, for that one particular color. One thing I did forget to mentioned on RGB, when you put that on the web, there's also RGBA, lowercase A which stands for alpha, and that's the transparency of that color. And a lot of times when you're working on a design, sometimes you might want a fully saturated color, that has transparency, and other times you might wanna grab the actual HEX Code, of what that color is at 50%, on like a white background or something. But I'll dig into those examples in just a minute, HSL stands for hue, saturation, and lightness, and some tools called the L luminance or luminosity something like that. You're gonna have a hue, which is gonna be a range from zero to 360. And zero is red and 360 is red, and then you got all of the colors in between there, and the saturation is gonna be you know, the saturation level of that particular color of red. So 100% saturation of pure red, would look just like FF, zero, zero, zero, zero, or R 255, blue, zero, green, zero. HSL starts to become a little bit more, of a usable color method because you can just pick a hue and that's kind of like your hue that you can use. And then you can use varying degrees of saturation and lightness to kind of manipulate the colors and a little bit more of an intuitive way, that just seems to make more sense. But with HSL, it can be a little bit confusing because the saturation range, kinda does something different than the HSB saturation, and I'll show those differences. And also the HSL color selector inside of Sketch, is a little bit different, than the HSL color selector inside of Figma. And at the time of this recording, WxD doesn't even have an HSL selector, so there's also that. All right that brings us to HSB, hue, saturation, and brightness. Now HSB is my absolute favorite and go to color selection method, because it's just a lot more straightforward than either RGB or even HSL. So the H is gonna be your hue, spanning red, green, and blue spectrum from zero to 360 and the S is kind of like the whiteness level. Saturation is similar to like the whiteness level and B is for brightness, which kind of is like the blackness level, if that makes sense. So you can set your hue, and if you change the saturation to 50%, that will take out 50% of the color and it would be very, very similar, if not exactly the same. As if you were to go full red on a white background and then reduce the transparency to 50%. The only difference would be that opacity, would react to whatever's behind that, whereas the saturation level in that color of the HSB, would just be that color no matter where it was. And the B in HSB stands for brightness and this is like the blackness level so zero to 100. So zero, if you pull the brightness level all the way down, it's gonna be completely black, no matter what color you're working with. And if you go all the way up, that's gonna give your fully bright, saturated color. So it's kind of like turning the lights out, brightness, blackness, that just kind of helps me remember. So it's like color white and black. Now I know that Sketch and Figma and XD all support HSB, and they're all gonna just behave similarly. Whereas like Sketch and Figma and HSL, they're gonna be slightly different, in terms of how they're visually displayed. And fun facts for all my print designers out there. CMYK is also a color option, which stands for cyan, magenta, yellow, and black and those are the four colors that a printer uses, when they print something. Which is why you'll hear the term four-color process as a part of the printing process, because those are the four colors that they use. Whereas the monitor shoots out RGB light, and sometimes CMYK colors, can look differently when they're printed. Especially if you're using CNYK on an RGB monitor, it's just not quite possible to show, the true color of what that is gonna look like. That's why, if you're ever gonna print something in color, you have to run a proof and test it. We're not printing anything in this lesson, so don't worry about that for now but if you are printing something, definitely test it before you send it to the printer. Okay so I've created this document inside of Sketch, and I've also got it inside of Figma and what I've done here, is I've created this huge chart. So you can see this is zero 20, 40, 60. This is just kind of increments of 20, going from zero to 100. So if I open the color selection cycle, through the hue colors here, it's just gonna give me that fully saturated, 100% pure amount of color. This is great, if you're trying to come up with like a brand color that's really poppy or like a call to action that's super bright and contrasty of fully maxed out a 100 saturation, 100 brightness, on the hue is gonna give you, the biggest amount of colorful contrast you can possibly have. But there's a catch, each one of these, especially if you're comparing it with white text. So imagine you have a big red call to action , with white tags it says, click here. So this is gonna give you a contrast score of four, which is plenty contrasty enough for a bold text but it's not quite contrast enough for like body copy. And we're gonna cover color contrast and accessibility in the next lesson. But I just wanna point out, that a fully maxed out brightness and saturation on all of these hues, is gonna provide you a variety of contrasting scores. And in this example, I'm contrasting that score with the color white, but you can say orange, yellow is gonna be the one that is gonna provide the least amount of contrast. So you can see on this white background, if I change that 1.07 to this yellow, it's gonna be really hard to see especially if I zoom out. You're just basically not even gonna be able to read that. And so each one of these has its own varying degrees, with contrast in terms of white. If we were to change this to be a contrast with black score, then the scores are gonna be a lot different. So if I type in, what is F one, two, three, four zero zero, okay, that's yellow. And then if I do black, you can see the same color, contrast that with white is gonna be super duper low and the same color contrast with black, is gonna be really, really high because this number will only go up to 21. So this is a very large amount of contrast. So if you're gonna use, a bright yellow button for anything or bright yellow for really anything, you're limited to darker colored text if you're gonna use that with that color. And that goes the same for a lot of these, like you know, really bright yellow to light blue colors. And you can see on the dark blue, it starts to tank pretty hard in terms of, not tank, it ends up being a lot more contrasty. So this is, this dark blue, on the white background is gonna be a super contrasty. So that's, you know that's really dark. That's triple A, very good contrast. So you could use this for calls to action, or your body copy, or anything like that. It wouldn't matter, even at small, like 14, 12 point sizes, you'd be good with a color like that. Okay so just to show a quick few differences, between HSB and HSL. I wanna show you this, these color blocks here. So what I'm gonna do is let's make a quick copy of these. So in Figma, this is really nice because it always shows you the HEX color and then if you click on this little icon, you can choose whether you wanna do HEX, RGB, you can do HSL and then HSB is what we're gonna use right here. And just a quick contrast inside of Sketch, you can see that I also have the HEX Code available and when I open up this color, I have HSL right here and I can click this little area, to change it to RGB or HSB all right. So for this one, I'm gonna open this up and I'm just gonna change the hue. Let's change that one to 60. Let's change this one to 80, and let's do this one at 220. So that's the hue change on the HSB. Now this is gonna be like, if I change this to HSL, this is exactly the same. So if I change this to 60, I change this one to 80 and this one at 220, this is the exact same. You're only changing the hues. So the H in both of these, are gonna change exactly the same. All right this is where it gets a little bit different. If I change the saturation inside of an HSB, so check out where this color dot is, all of these fully 100% HSB values, for saturation and brightness, always gonna be in this top right corner. This is gonna be your brightest possible corner. So if I reduce the saturation, this little guy is gonna go to the left. You can see the saturation thing going all the way down. So for as long as I stay on this top X axis, I'm gonna only affect the saturation. And it's only when I start going down, that's when I affect the brightness. And this is the reason why I love HSB, because the changing of the saturation is always gonna be going from left to right, and changing the brightness, is always gonna be going up and down. So it just makes sense, it just, I don't know how to say it. It just makes sense. It's more practical for me. If I change the saturation level to 50%, this is the exact same color. If I change the opacity to 50% on this particular red, because it's on a white background. So you can tell this looks exactly the same, even though, you know, this is not transparent but this one is. So it's just kind of that, because of your you're affecting the white value when you change the saturation. All right so now I'm going to you know, put this say, we'll do this one at 30 and saturation for this one. Let's see, no actually let's go increments of this. We'll do 80 and then we'll do, actually, okay 75, 50 and 25. All right so brightness, basically gonna be the same exact thing if it was on a black background. So this is 50, I actually should have done 75 right there, but I think you're getting the idea. We'll do 50 on this one, actually that one's at 50. Oh that should be 25. It was looking darker. So getting, I'm confusing myself here, but I think you know, we're gonna be all right. All right that's 75, that's 50 and then we'll put 25 on this one, 25%. So this is gonna be the same, you know, if I were to select this frame, by choosing the name and I added a background color to the frame, where are you? Where's the background color? I think they changed that, they must have literally just changed that. You used to be able to change that to a background color, but I guess now it's a fill. Okay didn't know that, good to know. So if I change the fill of this frame to black, and then I start playing with the opacity, it's gonna behave the same way, that that brightness value does on that spectrum. Okay so now let's check out saturation change on HSL. Let's go, let's pick one of these red squares. We'll go HSL all right. This is, this is kind of crazy. So look at this color wheel here. When you change it at HSL. now you have almost like a mirror image of the thing, and this is why I don't like. Maybe you like this, if you like this way, it's totally fine. I just gonna give you my opinion here. The 50% value to me, it just kinda weird, because it's sitting in the middle and almost everything that I've ever done with design, it's like zero to 100, zero means nothing at all and 100 means everything. You know, zero, 100%, it just makes sense to me. So using this 50% value for luminosity, or luminance, or lightness, or whatever, it just feels weird. It feels wrong, and I don't, I don't like to use it, but it does make sense with Figma's color selector because if you go up to 100, that is 100% lightness, and that makes sense. It goes all the way up to white. If you go all the way down with lightness, it goes to black and that makes sense. That makes sense to me, but it's still confusing. Because watch what happens when I use saturation, actually I take that back. This is not as confusing, because Figma's color wheel is actually correct and saturation is still going left to right. The L value is going up and down okay. So Figma's is not as confusing, but let's look at Sketch's HSL selector. This one is different and this is why it was confusing. 'Cause I use Sketch for a long time as my primary tool. So you can see this color, white is up here, black is down here, and then red is right here and they don't have that kinda inverted color picker system. The same way that they do inside of Figma. So Figma's visually makes much more sense. If I change the saturation inside a Sketch, look what happens here. It kinda curves down at an angle, a very weird angle and to me, this is super confusing. So maybe if Sketch's color picker for HSL values, look the same as Figma's it wouldn't be as confusing, but I know for a fact, HSB is gonna look the same everywhere. So hue is always gonna be the color spectrum. Saturation's always gonna be left or right and lightness or brightness, is always gonna be up and down. So that's why I like to use HSB. So back in HSL to the saturation change, I go down and saturation, and then right here I go even further in saturation and let's say, we go down even further in saturation. All right you can see what's happening here. The saturation difference in HSB versus HSL, is quite the difference. The saturation when you're changing it with HSL values, it's gonna give you like muddier colors because it's trying to kinda stay in that. It's trying to keep the white and black amount the same and it kinda takes you into like this kinda muddy red. Sometimes this is a great way, to get another version of red when you're designing. Let's say red is your primary color and you wanna pick out another version of red, maybe for like a secondary call to action. Sometimes HSL can be a great way, to find that other color inside of the spectrum, because if you're just using HSB, to pull out white and black, it's gonna behave the same way as opacity and that might not always be what you want. So this is the one instance, where I will say that HSL has an advantage over HSB, and it kind of pulls out just by adjusting one value. That will kinda pull out that particular color and it kinda gives you this, maybe a greater spectrum, but in general, I still don't use it. Even though this is a good example. So slight differences between HSB and HSL and I know this is extremely kinda nerdy breakdown, of all these different colors but to me, I find this fascinating. And once we get deep into this entire module and we start covering all the different, little nuances of color, it'll just really help to have, kind of a deep understanding of all these different selection methods. Because the color can be tricky, there's no easy way to say it. Like color can be a tricky thing to handle and some different situations, might call for a different color selecting methods. Sometimes I might even use, you know HEX Codes only. So color can be a pretty intense topic. That's why I have an entire module on it, with lots of lessons. So we're gonna dive, into how to apply all of this nerdy knowledge into selecting interface, pieces and colors for background colors, and calls to action. All that good stuff is coming up. So for homework in this lesson, I really just want you to open up one of these files, whether it's in Sketch, or Figma, or XD. If you use an XD or Studio, you can always open up the sketch file. So just get in there and as many designed tools as you have, just go through and start looking at how different things change. You know, pick red, blue, any random color, and look at all the full bright, hue colors, and then start playing with the saturation and brightness. Just get in there and start kinda messing colors around. Maybe you come up with like a cool color palette, based on some of the examples that you posted or that you're working through and maybe post those colors. So the group can check it out, but no real big assignment to review. I just want you to start, getting into those nerdy details between HEX, HSB and HSL. Very light homework, with this first assignment here with this first lesson. So let's just keep moving on into the world of color.


=== FILE: 4-02 contrast.txt ===
------------------------------
﻿- I didn't really understand the importance of color contrast until I was working on a project for Wells Fargo and their brand team were pretty big sticklers about asking if the colors that I used in the designs were passing double A accessibility. So, I had to kind of ramp up pretty quickly and do a little bit of research, found some color checkers online, where you can plug in your foreground color, plug in your background color, and then it spits out whether or not that particular combination would pass double A or not. And there are a range of scores, but their particular bare minimum was double A. So, ever since this project, I've kind of learned the importance of testing color contrast. So, the Web Content and Accessibility Guidelines cover a ton of things that are not necessarily all related to color contrast, but this particular topic inside of that document is one of the most applicable things that we as designers can start using inside of our designs, on static screens to make them more accessible. So, they use an equation to determine the contrast between two different colors. So, the equation spits out scores of one to 21, one being black on black, the exact same color with a score of one and 21 would be like, black on white as much contrast as you could possibly ever have. No contrast could go higher. That is a 21 score. And so, inside of there are the ranges of accessibility. Before I dig all inside of those scores. Sometimes it's helpful to just understand why those scores were created in the first place. So there is empirical evidence that states that someone with perfect 2020 vision can see and perceive color contrast at a score of 3.0. So that's where the double A large score comes in. And it is kind of like the minimum, absolute minimum contrast for readable text. Now, again, these scores don't necessarily apply to decorative elements and logos and things like that, but it's definitely not bad to consider when you're designing. And there's also evidence that states that, someone with 2040 vision has a sensitivity loss of 1.5. And that just means that, a black on white kind of text would look a little fuzzier because of their visual impairment. And so, that's where the Web Content Accessibility Guidelines. They take that 1.5 and they add it to the 3.0 and that's how they come up with the double A scores. So this is specifically for people with 2040 vision, that's where they have to derive that particular score. And then going even further, someone with 2080 vision. And this is technically someone who is legally blind with 2080 vision. This is really bad vision. And most of the time, people with the 2080 vision, their vision cannot be corrected with lenses. So this is really bad vision. That's where the triple A score comes from. Now, you don't really have to remember all the different vision things and you don't really have to, there's only a few little things that if you as a designer can remember, and you can look for when you're picking colors, you're gonna be set. So, we have our range of scores here. And 1.5 score, which is just above a one, which would be full black on black. So this 1.5 score is definitely failing. This is a hex code 2C2C2C, on full black that produces a score of 1.5. This is kind of danger zone here. You don't wanna make any texts that fails specifically when you're trying to design a usable interface component. All right. So just one step up from here, you're gonna have double A large, and I usually use a plus sign to kind of abbreviate large. But this is a 3.0 score. So if you do a 666666 hex code, on black background, then you get a 3.0 score. A lot of different colors are going to produce different scores. I'm just using gray scale for simplicity sake. This is like your bare minimum level of passing score. Now with the 3.0 score, there are font size requirements. And this the WCAG States that it should be a 14 point bold or 18 point regular. And, this roughly translates into 18.5 pixels bold or 24 pixels regular. If you're just designing for a mobile screen at one X. And the reason that it's an approximation is because there's a lot of different fonts are wider and narrower by default. There's not like a gold standard of weight. So these are, they're kind of suggestions. It's not like to the letter of the law, but it is. You need to err on the side of passing versus failing. So that's the 3.0 score. It does have size requirements. Now, the double A score, right here in the middle, that's gonna be your sweet spot. This is gonna cover everyone with 2040 vision. And, a lot of these people are gonna to be wearing corrective lenses, contacts, glasses, but if they aren't, they can still read your interface. So, this is like 757575, on a black background. And, this is actually pretty similar with a white background, this 75 hex code. If you can remember 757575, it's gonna work well for black or full white backgrounds. This is kind of like your gold standard for minimum passing, like body copy text or titles. Technically you could go, lighter than this with titles, but it would start to kind of be in the danger zone, but it's a safe, sweet spot. So if you can hit 4.5, you're gonna be sitting pretty good and you can lower and increase the contrast depending on the other interface. Decisions that you're making. So triple A. This is gonna be your 7.0 contrast score. So really anything from 7.0 to 21 is all gonna be in the triple A range. This is kind of the highest level of Color Contrast Accessibility. And for the most part, most of your kind of standard, title and body copy are gonna look the best at 7.0. There's maybe some rare occasion where it looks better to do 4.5, or maybe some slight stylistic, maybe a little smaller call-outs or smaller UI components, especially when you get into like, metadata and secondary data. But if you're just going with a title and a body copy, like for a long blog post, 7.0 is gonna be a pretty good contrast score for how dark the text should be on a white background. Sometimes if you go all the way to 4.5, it can feel, even though it passes double A score, it can just feel like it's too light and reading that for a long amount of time might start to strain someone's eyes. So, I like to try to hit a 7.0 for titles and body copy. And then, like I said, seven from 21 that's, it's all triple A. But a few caveats here, to actually hit a triple A score, according to the Web Content and Accessibility Guidelines, you also have to provide controls that allow a user to change the background and foreground color. So even though your text color might hit that triple A score, your website or your app as a whole might not actually hit the triple A score because it might not be providing those controls. And that's kind of why I like to say that double A is the sweet spot because there's not a ton of extra requirements on that particular score. So, while 7.0 is a good score, you're not gonna hit triple A for your entire app without hitting a number of other requirements. And, I implore you to look deeper into the Content Accessibility Guidelines for more information on all of that. Alright. So let's talk about ways to check your actual color contrast scores. So let's say I'm laying out this registration header here, and I wanna check, wonder what this burgundy is on this white background. Well, long time ago, I would have to go in here. So if this is the symbols, I got to go into that. All right. So I've got my color here, so I would copy this. And then I would go to this website called Colorable by a guy named Brent Jackson, it's colorable.jacksonblack.com. And then I would paste in here, my burgundy. And then I know my background was white and I could see. Hey, this is triple A score. It's got a score of 7.96, it's above 7.0, it's triple A. So I know for a fact this passes. And that's what I would do for all of my individual pieces of text. I would look at the inputs, the labels, the titles, every single thing that I wanted to check, I would copy and paste into the website to check the scores. And as you can imagine, this gets a little bit cumbersome and kind of annoying to have to keep switching from design tool to browser. So, that's why I created this little contrast checker called Contrast, and it's this little Mac app that pulls off the title bar. And then you can just use these eyedroppers. It is a little bit sensitive to color spaces. So it might not always be a hundred percent, 100% to the T accurate every time you use a color dropper. 'Cause it kind of depends on if you're using like P3 color space or RGB color space, different things like that, but it will get you pretty close. And if you want, you can always just paste in your hex code into this thing as well. Basically, anytime I'm designing any project, I will start off with kind of determining the baseline for what is my 3.0, large body copy color contrast swatch, and then I'll determine my triple A and my double A, and just kind of work from there. I wanna know like, what is my absolutely do not go lighter than this, my sweet spot and then like a really good higher contrast for text and body copy. If I can get those three color swatches, kind of in my brain for the project, then that just kind of gives a really good foundation for adjusting and modifying colors. Now I do wanna emphasize again, this does not apply to borders and backgrounds and button backgrounds and input field backgrounds or the borders rather. It only applies to the background color on the text. So anything that you need to read, which is a lot, most things, but you don't have to have every little tiny use of color pass these scores. It's just for readable texts. And there's also been a lot of times where I've had a client or an app that I was redesigning and they had maybe an existing color palette. And I would look at their color palette and I would say, "Oh, you know what this, "actually this, kind of tan, beige color "that you're using "for a lot of your secondary copy, "this is actually failing contrast scores." So if you use something like this particular website, you can play around with the lightness and the darkness. So if you have something that's failing and you wanna just kind of bump it up a bit, these sliders can be quite helpful to slightly adjust the score. And then similarly with contrast, if you have a score that is failing, just go up here. So you can see this is double A large. And if I want a little lighter, I can use my arrow keys to just nudge the score to be a little bit darker and I can see where does it start to right in here. Its double A large and double A. So if had the option of going with something that was double A large, right in this range, you might as well go up to 4.5 and have just a nice double A score. Again, that's the sweet spot. 4.5 is gonna be your sweet spot score. All the little different pieces of text, they kind of need to pass that 4.5 to really just be accessible. And, when you're reading these, when you're using an app over and over and over, it might look cool on your design program to make it light gray, as light as possible. And I'm so guilty of that. I did that in the past all the time, but it just gets hard to read. And so, instead of just guessing, now we have actual scores we can just use and adhere to, to make sure that our text is readable. Now, there are a few gotcha situations and those are like bright brand colors for primary calls to action. For example, even if you look at this Switch to Studio website, so Invision's color when I was designing this, a lot of their calls to action are the pink color. And so if you look at this and you test this background, Which is actually more of a F3366, and then you have your white text. So you can see, this is only a 3.5 contrast score, and this is definitely not 18 1/2 pixel bold font. This is more like 14, 13. bold font. So, technically, I'm skirting the contrast scores here. My only going, double A large. I'm like right in between double A large and double A. So, this is one of the rare occasions where I will bend the rules a little bit because I wanna be on brand. And if you start making this pink color a lot darker, then it starts to look off brand. And so, in my personal opinion, for primary calls to action that are huge blocks of color, I think it's sometimes okay to go with a double A large instead of a 4.5. Another thing that I could have done here though, is if you look at these little tags, the same exact background color, with black text, is actually a 5.92 score, which is plenty about double A. Actually, a little closer to triple A, score of seven , than it is of the bare minimum 4.5. So I could have gone with the black and maybe in retrospect, maybe I should've done that. And it's definitely something that you should consider, if it's close and the white on the background just matches and it's great. And it's close to passing. I tend to bend the rules a little bit in these specific instances with the primary calls to action, but you're never gonna go wrong with making sure you just have a tried and true passing double A score. So, I'll leave that up to you to decide for your own projects. I just wanna be clear with what I've done from time to time on mine. Another slight little gotcha, could be these. For example, if you look back at this particular app, this is a registration field, this is a registration form that has a deactivated save button. And this only activates whenever you have completed enough input fields, it will turn that same red and same contrast that we have on the cancel button, that will show up once you have the amount of information that's required, but if you check the score, let's say we have, a CB, as a super light color, super light gray. So let me pull this off. So this is a 1.69 contrast. So, I know for a fact that making this into the sevens, is gonna put it more at a double A. And it's really like, in the nines right here. It's gonna be closer to double A large. If I went a little bit darker, actually I can just head down in my contrast out here. So I'm gonna copy this hex code right here and paste this in. So if we look at that, compared to the cancel. Right now, this is a double A large passing save button. This is not 18 1/2 bold, but it is 17 medium, which is close. These are approximations. But if we look at this now, like that, it's kind of save, save is like a nice contrast now. I can read it, but it's technically deactivated. And right now, it could possibly be considered active. So, this is another little, kind of a gray area where for deactivated buttons, I tend to try to go as low as possible on the contrast scale, like 3.0. Sometimes I will dip into the fail contrast score of like 2.5, because I don't want anyone to be confused that they can actually tap on that button and use it. So, this is a little bit of a gray area, because, if you go too low, then there's a chance that someone might not be able to read it at. But there is also, you could make a case for, if a button is deactivated, that it's completely gone and there's no rule that you can't take away a button from a user. There's no accessibility rule about that. Although it might be kind of a bad practice, but this is kind of one of those gray areas. This is where I will, even if I'm using 16 pixel font and I'm doing like a 2.9 or 3.0 contrast for a deactivated button. Sometimes, I will do that because I wanted to be clear that this is de-active. But again, if we think about the scores, think about someone with 20, 80 vision for a triple A score, more than likely those types of people are gonna use a screen reader or have other devices that help them with the code and they read the actual text to them, because their vision can't be corrected with glasses. And then, the people who were in the 20, 40 range to hit those double A scores. Some of them, maybe not all, are gonna be wearing corrective lenses, ideally to get them to a 20, 20 vision with their glasses on. And so according to all of the contrast scores, people with 20, 20 vision can read 3.0 fine, and I have 20, 20 vision. And if I reduce the color of this particular save button below 3.0, I can still read that. I know that there are a lot of people that can't read that. And so this is the gray area. You kind of have to, you have to be careful with this. This is where you have to decide, is my action color strong enough to offset the color of my de-active button? So if I left this, if I left this button at a 3.0 contrast, which is still actually not quite passing, because it's not that large size font, even this at 3.0, at this size 17 points, this is not passing double A. So in order to pass double A, we'll have to make this more like 7575. But then, this just looks like a black or a gray title. So again, gray area, sometimes I will bring it down to 3.0 or lower for de-active properties. I'm not gonna say to do that because it could be that I'm wrong in doing that. But also if you look at a lot of apps that Apple is producing, they will also use a score that is pretty low if not failing for some of their deactivated buttons. So in my mind, a deactivated button is almost the same as an invisible button. So people with good enough eyesight, to see that it's, de-active, it's almost like an enhancement and maybe for people who can't read it at all, it's okay, because once it's active, it'll go. And then, that's when you wanna hit the 4.5 or the 7.0 contrast for everyone to be able to see what action they can take. So, I view this as almost like progressive enhancement instead of designing all of my interface at a very low contrast score that only people with perfect 2020 vision can see. So again, gray area, I just needed to get all of that out there, because this is something that you will encounter from time to time. You may also be tempted to put legal copy, like in, underneath, privacy terms. You may be tempted to make that super light gray where you can barely read it, but that, you don't wanna make it 21 like full black on full white, because sometimes it just seems too overpowering. So you kind of wanna play with the triple A score, the double A score. And maybe sometimes, I've also done like a 3.0 for legal copy, or maybe 4.5 when it's smaller. So, if you hit 4.5, you can play with placement and size, versus like really bringing down the color contrast. Because you don't wanna be deceptive. You want people to be able to read your actual copy. And so if you use color for something like legal copy, it ends up being kind of unethical to make it completely gray and not passing contrast. So, I would recommend hitting 4.5 and just playing with size and position and you can kind of get out of that whole ethical gray area. Because plain and simple, if it's important and required to be there by law, it needs to be able to be red and you don't wanna deceive anyone. So you have to kind of balance the color contrast with placement, negative space, things like that, more than just sucking all of the color out of your elements. I'm hoping that you can start to use one of these methods of color choosing as kind of like your new go to method for when you're designing your UI components. So, the three methods that I would recommend are this Colorable website, which is free for anyone to use, you can copy and paste your hex codes into here. No problem. Or you can go to the Mac App Store and pick up Contrast. This is the app that I designed. And it's the one that I use all the time. Another option is to go to use contrast, but with a dot st on the end, use contrast, use your hex codes like 777/000. So this is gonna be like a URL checker. So any hex code formatted in a three digit or a six digit hex code. Or any three digit or six digit hex code, foreground slash background on this URL, you can check any of these colors. You've got your failing color here. We've got our 666/000 for double A large, got our 77 on black for double A, and you can see we've got 99/00, and again, you can use any combination. So this would be like red on black. You can reverse them out by reversing those in the URL. So it's kind of a handy way to check your colors and share the URL, like inside of a design system documentation, or post it online, or send it to a colleague. And you can also grab any of the scores out of the Contrast app by just hitting copy URL. And that will automatically paste in the scores that you have inside of the app. And then finally, there's an app called Stark that is available as a plugin inside of Sketch, Igma and Adobe XD. This will allow you to get in here and select two different color objects. So for example, if I have a black square here, so if I wanna check this color, which is six six, on this black square, and then I go plugins, stark, check contrast, it will automatically spit out the combination right inside of your design tool. So, this one is passing double A large text, but it is failing for normal text and failing for a triple A. Which is fine because this is a score we wanted. And it works similarly in sketch and XD. You just select two layers and run the contrast checker, and it spits out your score. So, whatever method you end up using, whether it's websites or a builtin app, or the Mac app, please just start using this as a part of your process, because it's gonna make your designs that much more accessible. And, it's just gonna be, better overall for everyone. Okay. So for homework, I want you to choose and explore one of the color contrast checking mechanisms. Contrast, stark, colorable, or any other ones that you might happen to find, just start experimenting with them and see which one you like best. I personally use mine because it's what I wanted, but you're totally welcome to use any color picker that you wanna use, but start playing around with those, that way you just kind of have something as a go to tool to start using to check your colors. Secondly, go to usecontrast.com/guide. And I have written a pretty exhaustive kind of what the scores mean and what they are and covering a lot of the content. So, just to familiarize yourself a little bit more with what the color contrast scores mean. So, you don't really have to produce any particular designs, but just start to, just kind of get your go to tool and do a little bit of further reading about this and what kind of users are a foundation for picking any and every color that we use at our interfaces from now on.


=== FILE: 4-03 structural vs interactive.txt ===
------------------------------
﻿- Understanding the types of colors and how they work together can help you break your color selection process into chunks, making it more of a systematic process rather than a total guessing game. So, setting a general direction as early as you can, will keep you focused on your project and allow you to make additional color decisions a little bit more quickly and more easily. So, for structural colors, I'm referring primarily to the background colors of your interface and the background color of any particular container or grouping of containers, as well as like borders and dividers. Kind of like the things that are structural, that are kind of providing the structure of the app. The majority of interfaces tend to have like, a white or light gray background. And, the inverse is often true for dark mode enabled apps. And, but however, there might be situations that call for a very colorful background, depending on what you're designing for. But, in most cases, if your structural colors are primarily restrained in saturation like, white, light gray, then your interactive buttons are going to be highly saturated and your interactive text will be highly saturated. Typically you'll be on opposite ends of the spectrum with your structural colors and your interactive colors. But, it's not like a hard, fast rule. Sometimes your, you know, and it all works together. So, sometimes those structural colors might bleed into the interactivity, but it is also just, it's really good to start thinking about kind of segmenting and defining what colors are doing what things, and you're being very intentional about every little hex code that you use. Now, there might be a time when you have a fully de-saturated color scheme for both structural elements and interactive elements. Like, if you're using black as your primary call-to-action, you know, maybe you're just doing a monochrome out and that's totally fine. But in this case, there needs to be even more care given to the position and the color amount, and the reversal of interactive elements. So, it all kinda plays together. You can't just pick a color and run with it without kind of looking at the way negative space and background color plays together. And, for interactive colors outside of structural colors, I mean, they're typically going to define, you know, a type of action. Same way that we covered interactive text. Most of the time your interactive text is going to have some type of color associated with it that's different than the rest of the interface. And, sometimes it might have brand colors like, so there's brand recognition associated with it. Other times it might just be a simple underline and the color blue, like your default hyperlink text. But, overall structural and interactive colors is just a, kind of a first step in defining the color scheme for your website or your app. So, a lot of times what I might do is set up like some, some tests with some structural background colors, see how those heavily saturated colors can play off of those background colors, and just run some quick experiments with just big color blocks before I go too deep into the weeds. But, for this particular lesson, I want to kinda dive into several different personal projects that I've done that really explore structural and interactive colors, and color choices on a case-by-case basis. So, let's take a look at what we have here. So Twitter, Instagram, and Pinterest. Now, just zooming out, of course, I am using a similar avatar for a lot of these different social media apps, but for the most part you can see like, the overall color scheme is just kind of white and light gray. A lot of apps, a lot of heavily used apps end up using white and light gray for their structural colors. That's just, it just kinda lends the most opportunity to having, you know, interactive elements, user-generated content like, specifically for like, Pinterest and Instagram. You know, it's gonna be basically 99% user-generated content. So, you've got photos, larger photos, background photos, all of those things are gonna kind of become the UI. So, there's not a lot of room to go crazy with like the Pinterest red. So, they're using the red as an interactive color very sparingly while their structural colors are very, you know, basically white and light gray. If you look at Twitter, Twitter's maybe the one example in this instance where they're using this kind of very cool light gray as like a background before the tweets load in. And, it's very closely related to the blue. You know, it's definitely like a lighter version of this color, just a lot more de-saturated. So, I've taken a similar approach with some of the newer apps that I've designed, especially when I know they're gonna be very high utility and there might be quite a bit of user-generated content. And, most applications there's going to be a fair amount of user-generated content. So, we can use that information to help us decide how much color actually needs to be in place before we kind of get into it. And, typically the more utility driven the app, most of the time having a more neutral structural color is gonna just lend itself to more scalability in the future. So for example, in this one, I knew I was gonna have a bunch of different avatars in this kind of second phone line app. We've got all these colorful avatars and the text messages, and calls. So, a lot of this ends up being, you know, user-generated content. So, I didn't want, you know, a bunch of heavily interactive colors, like heavy, heavy usage of interactive colors for things that I knew that was gonna just be a lot of. So, I'm just using a very simple white and dark gray kinda color scheme in the primary calls-to-action in this app are this kind of dark color here, which is 2B, 2B, 2B. And, when there are opportunities for very interactive looking text, I'm bringing in this kinda green color, which is definitely more of a brand color. You can see that I'm using kind of like a very, not fully, fully saturated, you know, teal, but I wanted to use this teal color that was as saturated as it could be, but it still actually passed the color accessibility contrast scores. And then, this structural color that I'm using for the background of like, the speech line bubble, this ends up being, you know, kind of in the same ballpark as this icon. If I click on this color and I go to HSL, you can see the hue right here is 182. And then, if I go to the background of this color, it's very close to the same hue. So, in the 180s. Typically, I'll choose one number for the hue. And then, you can kinda use that at a very de-saturated level for the structural color, and then a more saturated version of that for your interactive color. And, you can kinda use those two extremes of saturation and lightness to kinda promote the structural definition of that color, or the interactivity. So, all in all, this is a very like monochrome app, and I'm using that 180 hue either fully saturated or a lot de-saturated, to kinda mean different things. And then, if you look at this little thing it's very, very subtle, like if you have a missed call, there's a little bit of a, kind of a saturated background right there. So, if you look right here, I'm using that same 180 hue color, but I've pulled the saturation and the lightness way back. And, it's not too dissimilar from this color, but you can see the saturation here is 20% and the lightness is 97. But right here, the saturation is 67%. So, the saturation is kinda playing a big role in showing, you know, the difference between just a normal background and then a background that you need to pay a little bit more attention to. So, same hue, similar lightness, but the saturation is jacked up between the two different colors to mean a slightly different thing. And, this kind of usage falls a little bit into the structural and interactive. You know, because this technically is a background color right here, but it's also, this entire module is tappable. So, technically it is a structural and an interactive color. So, we have to kinda be mindful of those situations when there's lots and lots of content, we might use some of the structural colors as our interactive colors as well, but it might, we're not gonna use that exact same color for like, a primary call-to-action. In this case, we're using that 180 hue as our kind of our background, super subtle background, but then we've got this really dark color for our primary call-to-action. All right, so here's another example of a structural and interactive usage. These are actually wireframes that I created inside of Sketch for a responsive web app. This is kind of the smaller mobile version, with the larger desktop version to the right of it. Now, whenever I'm doing wireframes like this, the structural color that I use is always gonna be a white and a light gray, fully de-saturated with no extra color. It's just a very simple way to get started right away without having to worry about color. And then, I'm always gonna use pretty much a similar blue color here. You can see that this particular color is like 006DFF. Most of the time, if I'm ever doing wireframes, it's just, I'm not even worried about color because I know that using a light gray and a white is gonna work well as the overall color theme. And, using a primary color like this is gonna work pretty well. And, blue is one of the most commonly used interactive colors, so specifically for wireframes, it can be really helpful to start like this because you almost have the colors already kind of picked out for you. You just kinda pick like, you know, we've got, for example, right in here, I've got one white, two for the background, three for this little image and say four for this reversed out background to create a little bit more visual weight. So, there's one, two, three, four kinda structural colors. And then, really just this one interactive color. So, I'm using five colors overall for the entire app. And, you might have a little bit of an exception. This might be a sixth sort of light gray color, but you can see I'm using this light gray background as a background for this interactive color. So, I'm kind of pulling double duty with this color where it's kind of in the structural ballpark with some of these backgrounds, but it's also being used as a secondary interactive color. You know, if you wanna get started and you're really trying to nail down the flow, and the UX and things like that, sometimes it's just easier to design with gray scale and one interactive color that way you don't have to think about it. And then, once you can make other decisions about layout, and maybe you're playing around with typography and layout, and you wanna save color selection for later, this is a good way to kinda get started on all of that before, you know, just so you're not overwhelmed with too many choices. Especially, if you kinda wanna flesh out that UX portion first. All right, so here is another app that I designed quite some time ago. This was for the initial version of the Roadie app. And, I ended up with two kind of distinct color schemes. One was this kinda cool palette with this teal and these colors, and here we're kind of derived from this teal color. So, I've gotta couple of different grays here, super light, light, medium, and cool. And, then I've got this warmer palette, which is like this warm, dark brown, and then this kinda warm gray, and this super dark asphalt color. And then, a couple of other special colors for like error messages and success colors. Now, a lot of these colors that I ended up, you know, you don't always, always pick out the swatches first and then design everything with the swatches. Sometimes you do, but other times you might design five of the screens and realize you're using certain colors for certain situations. Then you might abstract those colors out of those screens and start to decide on which ones are structural, which ones are interactive. Maybe you end up defining that after you've designed a few screens. So, there's always this kind of loop between what you define up front and what you save for exploration so you don't kinda paint yourself into a corner. So, in this particular app, I wanted, this was kind of a, this was near the end of the project for kind of a handoff document. So, I wanted to kind of explain the color choices here. So, for a lot of the app, I'm using like a cool color scheme. So, this is an example. This screen here would show like the example of a cool color scheme. I've got this cool gray, you know, it's not a de-saturated gray. It has just a little tint of that kinda teal primary color, just to give it a little bit more richness. And then, you know, even some of these grays right here, it has a little bit of that hue inside of it, just so it doesn't look like a fully de saturated wireframe. For some of the signup screens and some of the interstitial kind of like, action required screens, I ended up using this dark version with these warmer colors. So, the primary call-to-action color could work with the cool colors or the warm colors. So, the interactive color worked across both screens, but I didn't want people mixing the warm structural colors of these big takeover screens with the cool grays of the backgrounds and the dividers of the other screen. Now this could've been overkill and maybe it's easier to just pick one color scheme and go with it. But, for whatever reason, for this particular project it just felt like it makes sense to have this kinda duality, kind of color color thing going on. And again, here, we're looking at, you know, this gray structural color. You know, this border, the white and the border, and the background, I would consider all of those structural colors. Whereas the green and the teal for, "Become a Verified Roadie", "Become Verified Sender." I would consider those as the interactive colors. However, you know, this entire thing is tappable. So, you could argue that the white and the gray is also interactive, even though it's structural. So, the whole structural interactive thing is not so, like I said, it's not so rigidly one is one and one is the other, and they can't mix. It just kinda helps you maybe just set a stage for, okay, this is kinda the background and the framing colors. And then, these are the no doubt about it, saturated, interactive colors. And, you know, and again, it could be a black, black could be your interactive color. So, as long as you're contrasting the difference between the background and the foreground of that interactive color, then you'll be, you know, in a good position. So, in this particular app, this is kind of a Sketch file filled with a lot of different kind of components for forms and activity feeds. But overall, and this screen might do it a little bit better. So, you can see there's a, the primary call-to-action is this burgundy on this screen. And, I'm using kind of a version of that burgundy for some of these icons. And so, that's the primary color for that particular primary action, but then I've got this golden, kind of brownish golden color for some of the secondary actions. And, kinda the burgundy and the golden kinda added this, you know, they kinda work together to create this kinda warm color theme. Even the background here, you know it's not completely de-saturated. So, if you look at the background color for this particular app, you know, you can see that it's in the, it's got a 40, 40% hue right here. So, it's in this kind of like orangy ballpark, but it's been de-saturated to one. And then, the brightness is at 96. So, you can see that that 1% of saturation gives it a little bit of warmth to just kind of go along with the color scheme. If I toggle back and forth between zero and one. It's probably hard to tell coming through on a screen recording. The 0% saturation, you know, that sucks every bit of color out of it. It's just pure gray at that point. So, a lot of times, if you wanna add just a little bit of, kinda extra color into your structural color and just make it feel like it feels a little bit more cohesive, you can add that little tiny bit of saturation in, in either a complimenting color where we've got this kinda burgundy and gold, or, you know, I could've even gone with this burgundy and then changed it to 1% saturation, and went up on the brightness to like, 95. So, that would still give it a little bit of a reddish tint, but that still felt little bit cold. So, I think the golden saturation works just a little bit better. And you could, you know, I could've gone to two, that might've been a little bit better. It's one of those things that you just kinda keep experimenting with. You can see, like, in some of these other modules, I have this kind of like authenticated module. Well, because we're using this white background here for like a detail screen, I'm repurposing this background color here for the background of a module here. So, I'm kinda reversing the structural and interactive because this particular module would link you to your profile. So, it kinda becomes interactive, but it's not a primary action. So, it's just a way to use that same color in a slightly different context to mean something slightly different. So, whereas if this is just a full width background color, then it's fully structural. But, if it's used on a white background, it becomes like a very muted kinda interactive color to indicate that, hey, this entire thing is tappable. But, we don't wanna, you know, we don't necessarily need that to be a huge primary call-to-action. And, we don't even need it to be a big secondary, like golden kind of call-to-action. So, we're using this almost as like a structural, kinda tertiary call-to-action color. And, all we're doing is just lifting the background color and using that as a background on white for that module. All right, so let's dig into this other app here. This one's called Steady. This was a couple of years ago. This was like a really clean kind of white background themed app. And, there was a very specific purple used for this app and for kinda the branding. So, you can see I've got this particular hex code. It's a 254 is the hue, and then I've got 60 and 88 for saturation and brightness. Well, you can see that the 254 is not gonna change even though I go to the secondary color. It's still 254, but I've brought the saturation down three and the brightness is at 98. And, that's just gonna, it's gonna give it that like, it still looks like a purple gray versus if I were to create this same exact color and just take all of the saturation out, even if it was a little bit darker, it ends up almost looking muddy at that point. So, if I create a quick little test and I'll place that symbol here, actually let's make this white so it's a little bit more easy to see. Using in the Sketch Runner plugin to quickly place these symbols. hitting command R to get the name, and then copying the name and pasting it into Sketch Runner. All right, so I'm gonna create a copy of that. And then let's just like, kinda compare the difference between these two different colors. You can see this would, this would still work, this background, this gray. I mean, it still looks like a pill, like a secondary call-to-action, but it's fully de-saturated, it's not using any of the interactive color whatsoever. Whereas, this one is saturated with 3% of the interactive color, which is this purple. To me, this just kinda, it looks a little bit more intentional, whereas this one looks like not bad, but I don't know something about the purple label and the fully de-saturated background it just seems slightly less refined. I don't know how else to describe it other than slightly less refined. And, it doesn't mean that, you know, maybe you, you might have an app that is fully de-saturated all over the place, except for that purple color. And, that might work better. You know, it's kind of up to your project, but for this particular project, there were other places like for input fields and other kind of main areas that I was using that purple lightly de-saturated as like an interactive area. So, these are kind of just subtle examples of when you can choose structural colors over interactive colors, or take an interactive color and pull the saturation all the way down to start to use that as a secondary call-to-action. And, even you could use this probably for a background, like behind some white modules. You can see in some of these signup screens I'm using, let's see, let's go into this one and check out the background color. You can see in this one I'm using a similar hue, but slightly less saturation for the input field. And then, kind of this header has this, you know, really purple background. It's kind of mimicking the, you know, kinda like heavily branded kind of signup screen. And then, once you're in the onboarding, I'm using almost the entire structure of the app is the interactive color, which at that point you have to almost create a new interactive color because the entire thing is you're kind of engulfed in this onboarding experience. So. for this particular one, I have these ever so slightly opaque raised panels with a really, really thin little inner shadow, one pixel and a really, one pixel, really thin, kinda small one pixel shadow that just kinda raise these off to make them look like they can be pressed a little bit more easily. And then once you've selected it, I'm using this dark, a darkened version of that as a secondary interactive color, kind of inside this interactive structure for the selected version. Just so it's really easy is tell. And then, you hit next, and then, you know, so on and so forth. So in this example, I'm using the purple as the structure. And then, I'm adding in another kind of slight interactivity color in into that. But, I wanted this kind of idea of like, okay, here's the branding you hit next. And then, once you go in, you're kinda like immersed into this next onboarding wizard. And then once you're finished, you kinda pop back out and you're on the home screen where we can kind of use this as a big call out. I'm still using that, you know, inside of this interactive world, where purple is my background, I've gotta use this dark call-to-action color because, you know, it just kind of creates that contrast that I need. Whereas on some of these detail screens, I'm using this dark area as the photo to kind of, you know, call out the detail of that actual thing. That's kind of similar to like an app store detail screen. And then, on the white background, I can use that purple color again because white is my structural color and purple is my interactive color. So, it's just a very subtle distinction, you know, just to kind of contrast that with purple here, being the interact, the structural color and the dark button being the interactive color. So, it's just a very subtle kind of shift. And, you know, you don't have to necessarily pick one background color and one button color and use that forever and ever, amen, and nothing can ever change. You know, you can see in this example, I'm using the purple button. And then, all of a sudden I'm transforming a very specific set of screens into that structural color, but I have to use a new interactive color. And then, you can see even on some of these signed in screens, I'm using that same purple interactive color as the background structure, but I am bringing back in this very, not quite as dark 'cause it's not really a huge call-to-action. I don't need it to be that dark. So, this 20% opacity on this black, this ends up being like the secondary color for that particular screen. But, then down here, you know, I've shifted again where I've got white background and I brought back in my primary interactive color, and then I'm back to using the white and light gray structural colors again. So, just another example of kinda playing with that whole structural and interactive. Once you kinda define those two main pieces, you can kind of explore and kind of come up with some different solutions that you might not have had you not kind of understood that from more of a foundational level. Okay, in there's last example I wanna show you this website, there's just a couple of designs here for this website called, Babycents. And, I did a ton of wireframes for this project. So this was, these were created after, already had wireframes created for all of these pages. So, I've already got the structure and the layout completed in the wireframe stage. And also, basically all of the UX. And so, now at this point, colors, typography, you know, some fine-tuning of the layout, but just kinda, sometimes it can help to separate those decisions when you can. Especially, this particular project was a little bit more complex. So, I wanted to separate out some of that UX in the very beginning. And, since this was a baby site, I didn't wanna go with the typical like, pink and blue. It just seemed kind of very dated and old fashion. So, I just kinda pulled these in as screenshots, 'cause when I was explaining to the client, my decisions, I wanted to also bring that up and say exactly what I just said. Didn't wanna go to the pink and the blue, because it did feel kinda dated. And so I showed, I just, I think I pulled these off of Pinterest for some inspiration, you know, this kinda green giraffe. You know, this particular picture could be a girl's room or a boys room, no problem. And, not that there's anything wrong with a pink room for a boys room, but the green and kinda these pastel color palettes, and the brown, maybe in this picture here, I was just kinda drawn to that. I thought that was a good kind of direction for the colors for this website. So, I ended up for this particular site I did set up some colors. So first of all, I pulled these colors that I found online here, but just about every one of these fails the color accessibility contrast checker score, especially when you check it against white. So, they could work for background colors or accent colors, but I needed something with a little bit more saturation. So, I ended up using these colors and I actually went ahead and named the variable. Sometimes I do that. Also, it's just kind of fun to name colors, especially baby colors. So, we've got poop, stain, mint, blanket, wipe and milk. And these were, you know, most of these were structural colors. And then these, you know, usually your darker color's gonna be reserved for your text. And, it might be, it might be read only text and it could end up being some kind of interactive text, but usually you'll have a darker color for your text. Then you'll have some structural colors like I have over here. And then, this is kind of like my primary and secondary interactive colors. So seeing this in action here, you can see that I've also used that primary color as kind of like the brand color. But, because there wasn't a ton of color usage and this is more of an exploratory kind of site, I felt like we could get away with using the brand color as the primary call-to-action and vice versa. So, you can see right here, this is almost like a little avatar that's kind of bringing that color in as well. But, you can see I'm using the wipe color here, and the stain text color for the kind of placeholder input field colors. And then, I'm using, bring this down a little bit more. I'm using this stain color as like the filters that you've added. So, I'm looking for strollers, I'm looking for single strollers and I want anything that's 70% off. And then, I'm using the kinda primary colors as some toggles here to show whether it's list view or grid view. And then, I'm also using this poop color here as a load more screen. It's very, very likely that I tried using this color as the load more, but it kinda felt out of place. I think because there are a lot of these kind of pastelly, light gray, like saturated, lightly saturated brown colors. It felt like this just felt, this just seemed like it was like more at home with the structural colors, because you're loading more of all of these lists here. So, it just seemed like the brown felt better. And then, I'm using the green color again here, this primary color, the same one for like, create your own list. And then, using that color again for, browsing by brands. If you wanted to search for whatever, you know, Baby Gap, you click on B and go there. And then, we've got our dark color here and you can see, bring back in that stain color with a bold size for terms and privacy down there. And then, you kinda see how it plays out a little bit more on the larger screens. You can see that I'm just, you know, and a lot of this is just experimenting with, okay, does the darker look better here? Or, does the green look better here? And I'm just going back and forth, back and forth. And then once I realize, once I've made a decision on what I feel looks better and works better, then I'll start to say, okay, the green color is gonna be used for this, this and this, and these types of interactive elements. And, the stain color and the poop color is gonna look, is gonna be used for this, this and this. Like so, for the filters and for loading more, and for the text. And, if I can't effectively define and describe how the structural colors are going to be used, and how the interactive colors are going to be used, even if I have multiple interactive colors, if I can't define that, then I don't feel like I've done a very good job as a UI designer, I feel like you have to get it to a point to where you can abstract those choices and say, okay, here's the system. Here's what I've come up with as the system. That's gonna work way better than trying to say, oh yeah, this screen looks great. I think we should use this screen. So, if you're ever trying to present that to a client or a team, that just doesn't have a lot of weight behind it. So, if you can, once you get to a certain point where you think it looks good, you can say, okay, this works because we're using this primary brand color in a very limited kinds way. And, we're using it for these filters down here, we're using it for the avatar and creating your own list. A lot of these areas that manipulate the content and create more content, anytime you're kinda manipulating or creating we're using the green color. Whereas if you're just loading in more of the same content, then we're gonna use these kind of structural and secondary colors. So, as you kind of choose your colors like that, you wanna come up with a system and of course, you're going to make it up. It's definitely created, but you're defining the colors and defining the system the same way that you would define the text sizes and the text colors. So, you wanna make sure that you just clearly get to a point, once you've experimented, and experimenting without any definitions is totally fine and encouraged, but eventually you'll get to a point where you need to present it or at least document it, or just have an internal idea of the way you're going to use that. Okay, for homework, pretty simple homework. I don't wanna overload you with too much homework. So, I went ahead and created a few of these examples. Now, these are not great color selections, but I just wanted to kind of create something that would jumpstart your ideas. Basically, we're gonna create a structure with a background color for the app, and a module background color, and then we'll have an interactive color as our button. So, we just have one interactive color. Or, if you wanna go with two interactive colors, you could try a secondary version like as cancel. You could even do something like this. Maybe cancel is orange. Maybe you experiment with, you know, bringing down that saturation down to two, and the brightness is up. Or, maybe since this is orange and it starts to get lost a little bit. Maybe you take that to like four or five, or six, you know, don't worry too much about the number, just move it around until it looks like it works. So, maybe something like that works. And, maybe you change your structural color for the background. You know, maybe I don't know, you know, play around with it, play around with the light gray, play around with making it fully orange. Sometimes, you know, just like in our, the study example, you know, you can have that big interactive color as the full background for certain examples. I don't know if you could do the entire app like that, but for certain kind of like immersive experiences, like a big modal alert dialogue that requires attention, this could work. You know, you could use the same background color as a structural color, even though your interactive color is the exact same hex code. So, just create like a little modal that has a title, some body copy and a button, and play around with some different color combinations. You know, I've started five or six here. Playing around with some brown. And, if you wanna add a little bit more, go for it, but just start to think about structural colors versus interactive colors. And, I think that separation of those ideas, of those colors, will really help you in all of your future interface designs.


=== FILE: 4-04 primary secondary.txt ===
------------------------------
﻿- Perhaps one of the most UX things about UI, is how we define our primary and secondary colors, and sometimes tertiary, even though I really never used that word, it just kinda goes along with the title. But, if you think about common primary actions, we're typically making forward progress. You know, think Sign Up, Sign In, Save, Posts, things like that, things that are kind of creating or making forward progress. Whereas secondary actions, are more like Cancel or Edit or Skip or Filter, or Go Back or Close things like that. They're not necessarily usually making forward progress. Now there's gonna be some instances, where a secondary action might make forward progress, but all in all, primary and secondary, you know, have a pretty clear distinction. I just wanna jump straight into a couple of examples, from big name sites that are out there as well as cover a few primary, secondary, color scheme examples and some of my own personal work. Okay, so the first thing we're gonna to look at, is this Airbnb example. And you can see on their website here, they've got this like, you know, warm pinkish red as their kind of main brand color. And then if I go to actual Airbnb.com, you can see that brand color is showing up in their primary call to action right here for Search. And again, I mean, they're using the white version of the logo and a giant picture. But first of all, I just wanna point out the fact that, look how incredibly simple this is, and look how much that Search button stands out. I think this is one of the best examples, of passing the squint test. You know, if you zoom out of the frame of the website, and you kinda squint your eyes, everything's fuzzy, can you still make out where the primary call to action is? Now you don't always have to do the squint test, but this is a great way to just understand, whether or not your primary action is calling enough attention. So right here if we want to go, let's say we wanna take a vacation to Costa Rica, we're gonna leave March first, to come back on the seventh, and don't think I'm gonna take my kids this time, so, primary call to action is the brand color here. Okay, now we have the brand color back into the logo, and there's not a primary action on the screen. And the reason for that, is because this is more of an exploratory screens, there's not gonna be one single call to action. Alright, let's choose this one 'cause the pool looks nice. Alright, so we're back here again, and, now we can see the main call to action coming back in. But notice on this page, the only thing, the same color is the logo. And, you know, this is kind of one of the examples where you can use the primary color, as the primary brand color and the primary call to action. Sometimes those two things can compete, but, all in all, most of the time, it's gonna be okay to use that primary color as the brand color. However, if it said Airbnb really big, and the logo was more full, and it was really a lot of that color, it wouldn't really work. But because there's not really anything else, especially when you scroll down, this is the only color on the screen, and if you zoom out here, it still passes the squint test. And they're bringing in their secondary colors, it's kind of green, which is not a full green, but if you think about the color wheel, red and green are opposite spectrums. So that means they're complimentary colors, so red and green, if you use it at full saturation, it's gonna look like Christmas, but if you kind of mute them the way that they've done here, you know, it's kind of a nice combination. And so anytime you have opposite colors, opposite the color wheel, it's gonna be kind of a complimentary, and they're literally called complimentary colors. So we can see this green color coming in for some of the links. And I would start to call this the secondary color, whereas we have some secondary buttons up here but, these are almost more like tertiary or just kind of, you know, they're more like quick action buttons, they're just kind of functional, to do like a different view or to share the photo, it's not really quite the full, you know, it's not really a full big action, the same way that reserve this place would be. You can tell that, these are styled differently, than even the one here, you know, these filters, it's still kind of the same background color, because these are on a photo, they've chosen to not use the border. And technically, they probably could have used this same exact style for the filters, but it's pretty common to put these filters in a pill shape, so I can understand why they did that. And so, if we go to reserve, we'll see what happens here. Okay, I'm not logged in, but you can see even here, they're bringing in their primary call to action again, with that brand color, and then they're using login as that kind of secondary color. So you kinda get the idea of primary, secondary from, you know... And Airbnb is a huge company, they have a huge team of professional designers working on this, thinking about these things. So, whenever you have questions about things like this, you know, it's always good to reference big tech companies that have a lot of designers working on this. Okay, next up, I wanna point out something, you might not have noticed on google.com. So I've got an incognito browser here, so I'm not logged in just for the simple fact that you can see, this Sign In button, and you've got your search, you know, very simple. Most of the time, you might not even use google.com, because you use the search bar, you know, in your browser. But I do wanna point this out, you would think that the call to action, the primary call to action, would be search here, so you would think that Google Search, would be the primary. But right now, they have elevated Sign In, as a bigger priority, than actually doing the search. because most of the time, I'm just gonna hit the Return key, to actually perform my search. So, you know, Sign In is still the primary call to action here, and as I scroll down they really want me to Sign In because, Google likes to track your data. What was interesting though, is if I open the inspector, and reload the page, there's not an easy Return key on mobile, I mean, there is the search button, but all in all, you can't just quickly type it in and hit return, so they're actually reversing the priority, of Sign In and Search. Because on mobile, I think they're more aware that people just want to search really quickly. So they're, they're making a decision to elevate search, as their main priority. And they're also trying to get you to use the app, so you hit No Thanks. You can see on this screen, we've got Sign In as a secondary call to action, and now this is the blue call to action. And it's just kind of interesting that they're changing that, here's a larger version of the mobile view. But then when I go to desktop view, Sign In is the primary call to action. But either way, no matter what someone decides about what's primary, whether it's a Search button, or the Sign In button, you can tell it's still styled the same way. It's the same blue, the same gradient, and whether it's text or an icon, it is white, it's got this very subtle, like little drop shadow. Okay, so now I wanna pull up one of my client projects, this is the my MyMonero app again, and I just wanna point out, the the primary calls to action here. So on the very first page here, you can't really do anything unless you log into a wallet or you create a new wallet. And so, this is my primary call to action, and this is my secondary call to action. And it's just a very... This one in particular is very subtle, just a light gray, that makes it pop off of the background, just a little bit. But if you if you do the squint test on this one again, you can just see this giant color of blue in the bottom right. I'm using the brand color or kind of the primary color for the app, which is this blue, in four different places here. So this is the active icon color, and I'm also using that primary color as the selection, and as the next button, and also I'm using it as a potential wallet color. 'Cause you can choose your wallet, choose the color that you want it to show up, and we don't even need them to fill out any information, we're not gonna require that, because it's just for that person's reference, you can see that it's gonna be called MyMonero wallet, or they can type in something that they want to. And next, is highlighted because it's the primary call to action. So, if you do the squint test here, it's not quite as obvious, because I've got the blue here, and the blue here, it's kind of a consistent pattern to have cancel and next at the top, it's a little bit more forgiving, if you use that same color and multiple different places. But we're also not putting a blue button with black text anywhere else on this entire screen, that's the only place that you see it. So when you go here, there is no primary action because you haven't agreed to the terms yet. And once you've agreed, then we pop in that bright blue again, we're just re-using it over and over, every screen, the same blue button, all the way through. And then for when you have wallets, the same blue button, the same primary location, so we've got color, and location, and style are all the same for the same primary button. And it's not quite as important, on this particular screen because you have multiple options, you can go into your wallet, or you can navigate somewhere else, so it's not as critical as a screen like this, a screen like this, you can see I've kind of, we've reduced the opacity of the sidebar, because we really wanna elevate, like this is absolutely critically required. Create a new wallet or use existing, because you cannot do anything, unless you do one of these two actions. Whereas on this screen, we're using the same style, but we're not quite as concerned bout the over usage of the primary color. We're still concerned about it, but it's just not a huge huge deal that we avoid that blue at all costs. Because we can use the blue for some active states, as long as it's not quite, it's not clashing quite as much. And then here you can see I'm inside the wallet, and there's not really a big primary call to action here, because you're just checking your balance, you might check out your transactions, you can edit the name or the color of your wallet, but nothing is like... There's no primary action because it's just kind of like a tool to view this information. But once you go into some of these other screens, like send the money, and you can see our Send button is ghosted here, and once you finally enter in all this information, then if you do the squint test on this screen, primary action, same as before the same position, same consistency, position and color is exactly the same, we're ready to make forward progress, with this primary action. And then we have our secondary buttons, with that same gray elevated background. This is the same position, and the same styling as the secondary actions on the screen, use existing wallet. The only addition are these icons, so you can kind of help, you know, add a little bit of flavor to the buttons to make it look good. So, we can use our camera or we can choose a file, that we can load into the screen, but overall, the primary action is the send button here. And, one other thing I wanna point out too is, you know, we've chosen our primary color, so it kind of makes sense to use that as the active states for these icons. Alright, so you can see on this screen, we have a primary call to action of download, but you could imagine, drag that button, gonna paste it here. Imagine, that this had copy. Okay, all right, so check that out. All of a sudden, we have completely ruined our hierarchy. Because copy, is not a primary call to action. I mean, it could be, if copy was your primary action, then download needs to be something else. But, you really don't... I mean, if you're gonna have multiple actions on one screen, chances are it's not a primary, and not even chances, like if you have multiple actions on the same screen, more than likely that needs to be more of like a secondary color. Primary actions are reserved for one primary action. You might have a sign up button in the top header, and like a get started now, in the same, slightly different style or something like that. But it's the same action, is performing the same action. But this one, would not be performing the same action, this one will be copying the request link, this one will be copying the message. So, this is definitely not something that we wanna do for our primary call to action. If we compare that with the marketing site, and the landing page for this app, you can tell that, if you're gonna make a marketing site for your app, and your app has primary calls to action, like these blue colors, you could possibly get away, with making the primary call to action on your website blue, but sometimes, that can start to compete pretty heavily. Especially like, look at this big blue here, you could imagine, if I did a gray background or something, I don't wanna have to change everything. But if I did something like this, and then this was black, I mean, I could possibly get that to work, but, you can already tell if the squint test, is gonna fail here because I've got a huge block of blue, and, it's just kind of... Also my colors are kind of muddy, so this wouldn't work for a number of reasons. But specifically for the primary call to action reason, this is just not gonna work. So if I go back here, now, the squint test doesn't quite work on this as well. Because if I squint my eyes, I'm drawn to the blue and I'm also overwhelmed with the yellow. Also blue and yellow are complimentary colors as well, actually more like blue and orange. If you look at the color wheel, blue and orange are gonna be opposite, but if you chip over just a little bit, you'll have blue and yellow. So they're complimentary colors. So that's why I chose the yellow for this background, because I knew it would kind of complement the blue color. But I can't really use the blue on blue and the yellow together, they're not gonna work very well. So even though these are complimentary colors, for a call to action like this, it just kind of vibrates too hard, it's just... If you look at that, it doesn't look good. I'm choosing basically this block color from the app, as the primary call to action, and the reason it's working, is because it's on this yellow background. So, if I had the background be more like a gray, and all this text was white, that wouldn't work quite as well. It actually still kind of works, because, the yellow emoji pointing down, kinda draws my attention, it looks okay. But it doesn't have the same effect, that this big yellow piece has, when that is the background. And then the download button really stands off, because it's just got that nice contrast. Because it has a surrounding color, that just gives a little bit more pop. I chose the black and the yellow, because I knew that would kind of support the colors of the app. So I'm trying to support that blue color, without kind of taking away from it. And then down here, this passes the squint test, because download is the only thing that's really big and dark, and has that kind of action that's calling your attention. Okay, so if we look back at this Google example, on an authenticated page, and I go somewhere like this, and I hit manage my Google account, you can see again, there's not a primary call to action on this page, because everything, it's more of an exploratory, there's no extreme forward driving action. However, they are still using the primary color, for Get Started, Manager your personal data, all this stuff. And also notice that the active state on the tab, is about blue color. And they're re-using the background color for these rollovers, and they're re-using the background color for these rollovers. So there's really only a few different colors that are being used here. So I brought some of these screenshots into Figma here, 'cause I wanna point out something pretty interesting. So, Google's primary color is this little blue, it's actually a slight gradient, I drew a square or a rectangle here, and I just chose this color, you can see that, if you look really closely, it's this color at the top and then it kind of goes to a gradient down at the bottom. I'm gonna ignore the fact that this is a gradient for now, because I wanna point something else out. You can see here on that account page that I showed you, this tab, these are actually the flat blue colors. I've got this color here, I just drew a rectangle, snag that blue, and then I'm going to make a copy of that, and then snag this blue hex code right here. And then what I wanna show you, actually lemme grab this. One really easy way to come up with a secondary color, just grab your primary hex code, and just make it 10%. You can tell that's exactly what has been done here, this 10% of the primary color, is exactly the same as the hex code. And I don't know necessarily if they made this 10% on their website, it might be an actual hex code. Yeah, so they're using an actual hex code, for this background, but I guarantee you that this is how they came up with a hex code. So, once you have this primary color, at 10%, the way you would get the actual hex code, is just draw a new shape, and just select that with a selection and it gives you that hex code. So that's a really easy way to come up with a complimentary color. Not a true complimentary color, but just another value of that same color, that supports it because it's in the same spectrum. Same exact hue, it's just reduced in saturation, reduced in brightness, and it's just going to support that color more easily, than trying to find a different color from scratch. So, this is going to look nice with that blue, and you know if you check your contrast, it's a strong double a score, which is right where it needs to be. Alright, so for homework for primary, secondary and tertiary colors, I want you to duplicate this Figma file, or take your own screenshots of Google as an unauthenticated view. And, what we're gonna do is, redesign google.com, it's a pretty simple page, it's just the one search bar in the middle. And rename it if you want to, you know, make your own search engine name, or use Google if you want. And what I want you to do is choose one primary color, don't worry about the gradient or anything like that. Just make sure it has an accessibility score of 4.5 or higher. So, don't use blue, because that's what Google looks like. Try to make it look a little bit different, any other hue other than blue, you can choose this desktop view, or the mobile view or both, what ever you wanna do, to make it easier for yourself. Whether or not you do the mobile or the desktop, I do want you to have a primary search button, as the primary call to action. Let's go ahead and make that our primary call to action, use the mobile version as the kind of inspiration. I know the desktop doesn't have that, for this exercise, we want search to be the primary function. Make sure that is a full color, full background, no dainty stroke buttons for this particular button. Use any type of input field style that you want, keep it very simple overall, but I want you to focus on your color usage. And then for your second color, you're gonna have these little navigation items at the top, similar to the screenshot. You can use their same text items or put your own, and then over there in the top right or somewhere else, have the Sign In button. Don't use black, or fully de-saturated gray, for these items or for the button. Try to use a tiny value of that hue color. So for example, if you're going to use a color like this, say you're gonna use like, maybe you wanna use a purple or pinkish kind of color. So, if this is your primary color, and your hue is 310, well, make sure that if you use some other text, that you also make the hue 310 on this one, and then give it a little bit of saturation, especially some like for your gray color. Just make sure your hue is exactly the same. You can pull the saturation down to like one, if you want to have more of a gray text, but we wanna leave just a touch of that primary color, in the gray text, in the background of the Sign In button, and maybe even in the border of the input field or the background . And you can play around with the brightness, but for this exercise, I want you to pick one primary hue, and make sure that every one of your color choices has a touch of that hue inside of the color. And if you're feeling super into this assignment, duplicate all of your work, and then choose a second hue, for your secondary button and possibly some of your text. You can try choosing a complimentary color, on the color wheel, so if you chose red or pink, you might wanna try like a greenish, kind of greenish blue, something like that that might complement. And then you can try to use two different hues, for all of your different colors. But either way, make sure you get that first one done, because I think locking in that one hue, and seeing the different ways that, that particular hue can apply to primary, secondary, tertiary buttons, is a big step in kind of fully understanding how to really manipulate color for your interfaces.


=== FILE: 4-05 color definitions.txt ===
------------------------------
﻿- Color definitions. What do I mean by defining your colors? Well, if you remember back in the Text Definition lesson, this is really the same thing, you're going, beyond primary, secondary, and tertiary colors. We really need to define everything like background colors, border colors because ultimately we are creating a system that's going to be used for the first round of the designs or to even scale up for additional designs. So let's take a look at one of my recent projects and kind of really dig in to how I defined all the colors for this particular app. This is the SmartLine App from GoDaddy inside of Framer here. I've shown some of these screens before, but this is basically a big document that has all of the components and everything inside of it. Now, in addition to this Components document, I've also got this Color document. So after everything was said and done, after I had worked through color combinations, changed my mind, redid it, got some feedback. I mean, this is not a one-time, make the colors and then use them forever. This is an ever evolving process, down to the very last day before handoff. So if you look in this particular document, these are SmartLine colors. Okay. So these are all like one, two, three, four, eight, 12, 13 colors that I ended up with on all of the UI screens for this particular App. Now at the same time, GoDaddy had just gone through a huge rebrand and you can see a lot of that work on www.dribbble.com/GoDaddy So they have a brand new Brand book, new colors, new Style Guide, and not a lot of these particular apps that they have incorporated a lot of the new colors. And so I went through their Brand Guidelines and I pulled out some of the existing colors like this Everyday Blue 500, Everyday Blue 600, these were actual colors provided to me. We got to do our due diligence for the interface, and they are not necessarily saying that these colors are going to be used for text or white text. These are just kind of, a huge spectrum of all of their new colors. So these were the ones that were closest to the colors that I wanted to use. So I just wanted to point out here that I just added some actual new colors and I tried to keep it in the same naming convention for their actual like variable names, but I wanted to raise up this to be 3.0, and I wanted to lower this one down, so it wasn't quite as dark, so they were in the same ballpark. I wanted to have my AA score and I wanted to have my AA large score. So these are the actual, like primary colors just in terms of like actual hue, but you'll remember, I'm actually using black or this very dark color as the primary call to action. The primary hue was actually used as more of a secondary action here. So you can see like Cancel, Save, Call, Message, a lot of the kind of like action text, was using that green whereas the primary actual primary action was the actual dark color. So if you want to get really particular, the dark color was really the primary and the greenish color was kind of a secondary, but since it is kind of like the branding color, and this is the icon and the app icon is not black. It kind of makes sense to call this the primary color because it is the brand color. So you can understand how that might get a little confusing, but I just want to throw that caveat in there. So let's look at all these 12 different colors in detail. So we've got a name for the color, the hex code, and then a little description of what it is. Standard White Primary background in the app. Make sense? Now we've got SL GRAY hex code. This is Secondary. This is a Subtle background for secondary interactive elements. So if you look over here at the Components, you can see, let's see where is the list, okay, here is the list. This is this color right here. This is a subtle background for secondary components. You can see this very very subtle background. You know, if you're going to use a background color for every item, if you go too dark, it's just going to feel like way too much. So I want it just enough, even if you couldn't perceive that color, it's still fine because you can tell that these are modules but if you look at that on a phone, it is definitely very noticeable and I spent so much time, going lighter and darker and lighter and darker. A lot of time is spent just experimenting with all these colors and only at the very end or you know, when you're ready, can you define these actual colors. So looking back here, we've got our third color, which is this SL GRAY. This is an Accent Color, it's for Placeholder text and large single-field full screen values with extra labeling. So what I mean by that is, for example, this right here, you can say this is a huge number for entering an area code, and the hex code is, here is the hex code. And I can go ahead and tell you, this will absolutely fail color contrast. This is a 1.3 contrast, but this is also a very very large color. So you could imagine if I used like a nine five, nine, five, this would actually be way too dark for an Input color. See that is just way too dark. So I'm willing to use a Failing color because it's really large, I mean, this is a 60 point type size, but we also see find your new number, search any US area code. These are the labels for the Input field and the Input field is the entire screen. So even if you can't see that, even if it's gone, you can see the blinking cursor and you can see that it says search in the US area code. So with all of these surrounding elements, I'm okay using that as a Failing score, because it just looks better on the screen as a 60 point font. In fact, if you made it that nine five like I showed you, it's just too dark. It doesn't work as placeholder text. Okay, So that's our accent. If you look right here, we've got our second Accent color as like a darker gray and the reason I'm using the darker gray is because I need a darker gray that that's in the same ballpark that matches the interface, but this light gray that I'm using for the Input field is just, that's too light to be used on any particular like icon, or things that really need to stand alone as a readable element. So I need that second gray to be slightly darker so I can use it for things like this, for the contrasting on the white icon here and so on and so forth. So right here, we have our large text, which is going to be used for 18 point Regular, 14 point Bold helper text. This is going to be the large AA large score that's going to work for like this helper text right here, that's underneath some of these buttons, if you need it and then also any of these, this large text right here. So you can see this large text is a little bit lighter than that text right there. And so that's where the AA large and the AA come in because I want to have, as it gets larger it doesn't need to be quite as dark because more surface area in each letter form. So we've got our two grays, one for the large text at AA large one for anything under, 18 point Regular. This is going to be a little bit Darker. So it'll pass AA accessibility and that's where this color comes in. So this is my AA large, and this is my AA. So this is the primary color, this two B two B two B for primary Text and CTA color . So if we look back over here, you can see here is our Primary call to action, and then we've got our Secondary action and they are all using that same color so my secondary text is using that secondary background of primary background color, we've got our backgrounds, and then right here on all of our texts, we have that dark color, and also a side note, this is every single piece of text that is used in the app. Remember the rule of Four from our Typography homework, I've got three main sizes that are used throughout the app, 18, 16, and 14, and then for the occasional extra section, I'm using this 20 point Regular. So these are our main gray colors. So we've got this white, the background color, and then we have two different colors for texts and icons, and then a little bit darker for our gray actual text. So our AA large, and then our AA color. And then we have our main text and our main call to action. And then moving on, we have our, we got our accent red color here. This is a very subtle like red background that is coupled with this darker red, that would be for any error message or a missed call. So you can see I've got my two Hex codes listed here, one for the background and one for the text. And then I'm using the same red color for, to kind of fill in that icon to let people know when they missed a call. And in addition to these two reds, we've got our variety of kind of teal colors. Now I've already talked about these two, which are these two right here. You can see, this is used as a primary action color, for 18 point Regular and 14 point Bold text. It's a primary action for the text, not for a big button, and you can see this is used as darker action color for text sizes, less than 18 point. Remember AA, large and the AA. So in the same way we are using this background for error messages and missed calls, we are using this background, same hue but just kind of brought down a little bit for action items, kind of like this. So this is like slightly differentiated from standard list items that still also might be an action, but they're not really, a true full action like Call and Message, it's going to be a little bit different than selecting like a time of day or something like that. And then I'm using that kind of same exact style for these little, time-pickers. So it just kind of adds the background hue with the color pulled back with that text, it just kind of makes it feel a little bit more interactive like I'm actually doing something. So I'm defining this green color as doing something, Whereas a lot of these darker black colors for navigation elements or going somewhere with the exception of that big primary call to action, which is like, Save, Next, Go ahead, all those like big call to actions. So that is every single color used in the entire app. And it took a long time to get here. It took a lot of exploration, a lot of messing up and redoing it, getting feedback. It took a lot to get here, but in the end, you end up with something very simple that is scalable for all of the additional screens. Now I don't create a big color swatch and define so meticulously, every little color, in this way for every single project. It's not a bad practice, and in fact, I should probably make that more of a priority when I actually produce a finished product, but there are times when you're just going faster and you're working with a smaller client and you might just be working with one other person and maybe you're just working so fast to get everything done that you never really set up this big Style guide Style document because things are getting built and kind of put into the code and you have your code as like your source of truth versus trying to create it in a design document. And so that's what happened in this smaller project. This FibreStream project I've shown you this before but I was only working with one other person. Contrast that with the GoDaddy project, I'm working with a team, you know, I've got the VP of product, the VP of design. I've got probably three different Product Managers, two other designers, two different teams for development, for Web and native. And so you have to be a lot more organized and collected and very very like to the point, this is exactly why I'm using this, where it's used. Because it's just so many lines of communication, things can get kind of crazy if you don't have things documented. Whereas on this project, it was just one other guy and his developer. So we didn't have to go so crazy with the documentation, but that doesn't mean that I'm not very specific with my color definitions. Every single main Call to action is this orange. Every single black piece of text is the same color. And then anytime I have like a secondary little like Edit button, Edit, kind of a secondary text, small links inside of things that are just like helper links, they're always, always this shade of gray right here. And it's always got this little underline. And so I'm using the exact same background color over and over and over. I'm using the same background for this footer as I am for some of these selection images. And so even these Helper tags, you can see this one is on a light module. So I know that the lightest I can possibly go is like seven, six, seven, six, because that's right around the AA score, but on a dark module, and this is not full black, this is a one, one, one just above the zero, zero for black. I know that a seven, six, seven, six, that is going to be a little bit too dark and it's probably going to fail on my one, one, one background here. You can see it's a 4.6, 4.16 Whereas if I put back in the other one that I had, you can see that now as AA. So if I raise the lightness just a little bit, I can hit AA on the black background, the dark background, but it looks really similar to the light gray on the light module. You are going to have to choose a couple of different grays, also, you know see right here I've got a lighter gray for the Check box versus the text because if the check box was that dark, it would just feel too heavy and it almost seems active in a way and you want to have a distinction between active and de-active things. So this is where those kind of like a range of three to four different grays are going to come into place. So even though I'm not really producing a ton of extra material and a ton of documentation for this particular project, I am trying to define colors in a very specific way and then reuse them for all of the screens and all of those components. Okay. For Color definition homework, I want you to expand on the screen for google.com that you designed in the last lesson, and I want you to go in and design a Search result screen. It doesn't have to be complicated, to save time you can use this mobile version right here that doesn't even show all the results, or if you want to go all out, you can do both or incorporate the desktop version, but I want it to have the same look and feel as your previous screens and remember we're super duper focused on which colors are we using. You can see they're using the primary color for Sign in, and then they're also bringing in this green color but look at this, these text links are way darker than the Sign in button, but it actually looks kind of in the same ballpark. So you're going to have to decide, do I use the exact same color? or do I use a darker hue? especially I want to make sure I hit a 4.5 accessibility score and for some of these, maybe you want to go up to 7.0 or even higher in terms of accessibility. Design these extra couple of screens that match the previous set. And then what I also want you to do, create a small Style guide of swatches that kind of sucks all of the hex codes out of every screen. And then you're just going to make a quick little description, the same way I did the SmartLine colors and that will just kind of help you really see like, okay here is the palette. This is the color we're using for this This is a color we're using for that and every single decision has been meticulously made and it all works together and here it goes. And so if you can start doing this for your projects or your client work or whatever and you actually have a reason for all of these different color combinations, you're going to have so much more power when you go to present your information to whoever that might be to a client, co-worker, colleague, investor, whatever. If you can actually go in and show the reason and where it's all used, and it's the full system, it's just going to give your decisions a lot more weight and a lot more power. So get started with the homework and let's see what you come up with.


=== FILE: 4-06 amount modify.txt ===
------------------------------
﻿- There is no easy way to say this, but color is just kind of hard. It's hard to figure out it's hard to know how much color should I need? How should I modify these colors? It can be pretty overwhelming. So hopefully we've kind of demystified a little bit by kind of isolating the hue, saturation and the brightness, and kind of imagining saturation as white slider, the brightness as a black slider. And then the hue is really just the color of the color wheel. But what I wanna also point out is in the context of an interface, a red call to action is going to look different on a green background versus a white background versus a black background. The same way that right now, if I turn my computer monitor brightness all the way up, all of a sudden my neck is much more bright. And if I scroll to an all red page, this is purely the color of the monitor coming off of the screen right now. And it's shining on my face. And if I scroll down to the green, because it's here, it's reflecting on my skin and it's changing the color. So in the same way that this affects the color of my face, let's take a look at a couple of examples of how surrounding colors can actually affect how your brain perceives the exact same color in different situations. So I've recreated a couple of illusions here that I found online inside a Figma for you to check out for yourself. But I wanna point out something you can see right now, even if I zoom in this gray right here, and this gray right here is the exact same color. So you can see if I bring this over here, I'm not tricking anyone here. I'm just purely bringing that over. So because this is surrounded by white on the large end, this is going to appear lighter than this one right here, surrounded by the dark. So if I simply changed the position of these, the opposite effect is gonna take place. Now, the ones on the right look lighter, as opposed to this one on the left. And you can see it's the same exact color I can move them over here. Nothing really tricky is going on. It's just moving them around and seeing like the light from the white bar is affecting the light in the gray bar because of the proximity to that particular color. Over here on the next one. This is one of my favorites. This is a total mind bender. I probably spent too long recreating this and Figma. But I think it's nice to be able to have this. So again, let me show you A and B here. These are the exact same component. It looks like A should be a little bit darker than B in this particular instance. But watch what happens when I turn this red or yellow rather. So this is the exact same background color. I haven't ... You can't get in here and modify the actual wall symbol or the instance, but that's not what I'm doing here. I wanted to do this so you can see I'm changing the master component six, and then you can see the reason this looks darker. Again, I can pull this out, just grab this instance, pulling it over there. You can say A and B are exactly the same. You can see in my layers here. I have the shadow is actually right here underneath. So the A and B you're on top and the shadow is below so watch what happens when I take away the shadow. So what's happening here is I've got a shadow right here. That's underneath the B. But what I did was I adjusted the shadows transparency to make it equal to that hex code. And I don't know how they created the original version, but that's how I did this one. So it's just really interesting. The reason it looks darker or lighter because actually the squares on the outer perimeter of the B are actually darker because of the shadow that's what making it appear lighter, the same way that these black bars over here make these appear darker, the same thing's happening here. So if you have a medium gray surrounded by black and darker colors, that color on its own is going to look darker and dark colors are gonna make other colors look darker. So you have to really punch out the saturation and brightness when you want the contrast on dark backgrounds. Whereas if you put the same exact pieces, A and B, I can pull, let's say, let's make a copy of them, put them right here. And then let's also check them out right here. The A and the B in the very bottom look much darker because they're surrounded by all of this light gray. Whereas these actually look a lot lighter because they're surrounded by all of this dark background. So it's just a couple of fun examples to show you that surrounding colors can really affect the way that the actual colors are truly perceived. Even if the hex codes are exactly the same. This one is pretty trippy. There's a guy on Twitter, professor Novick that created these. And I thought it was really cool. So I created it in Figma. So we just have a bunch of blue, green, red, blue, green, red, blue, green, red, all over. And then if we zoom out here, it looks like we have assuming that you are not colorblind, or at least you and I see colors the same way I see like kind of a bluish kind of purple blue ball here, a green one, and then a red one like blue, green, red, blue, green, red, blue, red, blue, green, red, green. But if you look, all of these spheres are created with this particular shape. So you can see if I have these stripes, I'm taking the stripes off. If I hide the stripes, you can see that every single one of these spheres is just kinda like this skin tone color. And it just has like two different radial gradients. And it also has this kind of inner shadow that I've added, what's causing that is in each one of these, there are the stripes. And then inside of each one of the stripe components, I've either hidden the red and the blue, or I've hidden the green to make the red one show up, whatever color is on those spheres. That's kind of what it makes it look like. So if I wanna change this green one to look blue, I can hide the green, add the blue lines. And because of that blue, it's like vibrating into the other colors, just a couple of fun illustrations, just to show you that color can be tricky and it might even be trickier than you thought it was. So how does this apply to interface design? Well, the way that I apply this to interface design is my actual preferred method of choosing colors is more of a monochromatic kind of a system. I pick one hue and I like to use that one hue for all of my different components. And I've shown you that some, but let me dig into that a little bit more. We've got our sentence sampler app. I've shown this before this time. I really wanna dig into the color scheme for the most part, it's kind of this gray, black and purple. There are a lot of different shades going on here. The way that I made this a little bit easier on myself is I started laying everything out and then I started choosing some different colors. I really wanted to nail down what color this was going to use. So I tried some green colors, tried some lighter linear gradients, ultimately decided on this hex code here, which is actually more of an HSB value. So I've got my hue is set to 240 and then I've got 50% saturation and 100% brightness. So instead of going way over here, that would look a little bit too dark up against all this other stuff. So I left it at 50 because I wanted this nice light purple that was saturated, but it looked good on a dark background. So a lot of times, like I said, on a dark background, this is going to look a lot different than it would if it were on a full white background. If we did something like this, send it to the back and then made this white, that is going to appear a little bit differently than it will when it's like fully surrounded with black, it's gonna really like stand off a lot more because of that color around it, it kinda the dark color surrounding it makes that button pop off more. Whereas this one, it still works. It's just a little bit more subdued. It's not as high contrast. So if we were gonna modify this color on this background, we might give it more saturation. We might take the saturation from 40 up to 60, maybe 70, maybe 80. It kinda just depends. Maybe we change the hue little bit and we give it even more saturation. There's kind of different things that you can do, whether it's on a white background or a black background to really make that primary action kind of come out and punch across. Once I've gotten that particular hue and I've shown this before, but I just think it's really important to kind of hammer in the fact that you can totally design with this monochromatic scheme and still have a pretty lively rich ... Let's just remember the hue of 240 here. I'm gonna go back to this instance and let's check out the background of this actual tile here. I wanna go in to this symbol and let's open this color up. So look, same exact hue 240. And then all I've done is I've played around with the saturation and brightness. So before this was at like 40, and that was at 100 roughly speaking, or maybe that was 50 actually. So you can see that's the exact same color. So now to find a nice dark color, I'm just gonna leave it on HSB. I know that hue is not gonna change whenever I drag this. So I'm going to pull it down here. And sometimes I'll slide it around just to try to find a nice dark color, other times I'll just use some math here. I think I was probably dragging this around 'cause if I was just trying to experiment with math I probably would have went with like 20 and 10. Most of the time I'll use like even numbers just because it's easier to kind of remember. 22 and nine, that works fine too. So same exact hue, dark background. And you can see this looks a lot different than it would, if I added a black background, completely black. It looks pretty similar. If you kinda zoom in here. Let me hide one of these. If you look at the difference between this block and then that it's so subtle, so subtle. But you can kind of see it just kind of adds this richness. When you use this monochrome color scheme, there's a little bit of a richness in the dark colors and in the grays. And every single color inside of this app has that hue and is not fully desaturated. So even this gray right here, let's go in and dig into that. Open up this gray. So this gray on top of that background, 240 hue, 11 saturation and 18 brightness. So same exact hue. So all three of the background color and this, they're all the same hue. And this purple might not work as well on white. So we might have to find a different primary color, then we could still use that same hue principle to kind of drill down into all the different variations with the grays and with the darks. I think this was one of the first projects where this whole hue concept really clicked for me. I had done it in the past, but only to a varying degree, but this time I got real scientific with it. Really kind of pushed myself to make all of the exact same hue. You can see this one, this one, I probably typed in some numbers 240 hue and then 10 and 50. So kind of flipping the saturation of brightness 10 and 50 to give me that nice rich gray. Because look what happens if I turn this into fully desaturated. It's just kind of a ... It's gray and it works okay. It's definitely not bad, but compared to the richness of ... Even these symbols right here, it has a little bit of a bluish purple taint in the background. It's almost hard to describe, but when every little piece has some of that saturation inside of it, it just gives it this really, really nice feel. So if I go back and change that. And you can kind of tell what's happening here. Like if I go back, that's got a little blue, gray, a little bit of blue, back to gray. I'll show you one more section of this. Let's go into, let's say this section right here. So even all of these things ... And I remember spending an obscene amount of time trying to fine tune these colors. Like once you've got your layout in place and your topography set the tone, the amount of color that you're using and the modifications that you use really, really makes it a big deal to kind of just take it to the next level. This is the regular instrument background, which I have here. It looks like I've got regular. There's like a downloading background, empty and then selected. 240, saturation is 10. Brightness is 26. If you have selected something, we've got 240, 10 and 35. So I'm changing the brightness between 26 and 35. between the default state and the selected state. So I've just added like an increment of 20, just to the brightness, just to kind of give it that look. And you can see, I wanted to show, I've got a little cursor in here to show this one's being selected. So just that 20% of brightness increase is just enough. to give kind of a different color. But it also just, I know it's gonna work. because it's in that monochromatic hue spectrum. Okay. Lastly, I wanna show you a pretty cool tool called Adobe Color that will possibly help you out selecting colors. and will definitely help explain some different concepts around choosing and using colors and kind of modifying them. All right. So if you go to color.adobe.com. or you just search for Adobe Color, you will come to this webpage. All right. And so we've got a couple of different options here over on the left. And the one I've been describing, the one I use for sentence sampler is this monochromatic. So you can see that you basically, any hue that you choose, it's gonna give you kind of a range of different colors. that are all in the same hue. So if I go to HSV, which is kinda similar to HSL or HSB, the top number here is my hue. And so for my sentence sampler project, I was at like 240. So if we've got 240, you can see that these are pretty ... Like this color right here is pretty similar. The only difference is like changing the ... I'll leave that at 240 and then I change some of these that's changing the overall color. So you might not need to pick out all your colors with this thing, but it's definitely helpful to see like related colors. And especially if you're using like Adobe or something, it'll give you a little Adobe Color swatch to export. Another cool one is called analogous. And this is gonna give you like related colors, colors related to the ones there. So it's kind of like in a closed spectrum. If you're having trouble picking colors that look good with your main color, this is a great way to do it. Pick this analogous color. And if you go all the way out, it might be a little too extreme, but if you kinda go into the mid range where the hue isn't quite 100%, I mean, it really depends on the type of project. If it's really poppy and punchy, kind of this brutalist design, you might wanna go to the full extreme with these big, bright colors, but these are gonna clash a little more easily I think if you bring it back down to like 80, 70, you'll get like a little bit more of a muted color scheme, just a little bit. I mean, you can experiment with this too, because you can use this middle guide and get these analogous colors that are semi-related and you might just get in here and say, "Okay, well actually all they're doing is changing the hue to 30 degrees." We've got 330, 300, and you could probably do like 270 right here. If you wanted to stay on like a 30, 30, 30. So you can start using a little bit of math with the hue to get these like related colors. So once you can kinda isolate that hue, and then you can add and subtract like 20 degrees of hue or 30 degrees of hue, like come up with these little mini systems in your mind for choosing colors. And then you can kind of really start to explore that once you land on something that you like. The next one here, it's called triad. This is just gonna give you this kind of like three directions in the color wheel. I can't say that I would ever use this necessarily, but if you're trying to come up with some decent colors, you could experiment with this and see if you come up with something you like, I personally don't think I've ever used triad. And I also, I typically don't use a color wheel when I'm picking colors, but if I was trying to find some complimentary colors, some different things that just look good, this is definitely a great resource to use. And speaking of complimentary, complimentary, like I said, it just means opposite the color wheel. So if I'm going full red, complimentary is like full green. And if I pull in the saturation, you could start to see how some of these complimentary colors could work. And it's not like to be fully 100% complimentary that you have to use blue and yellow to the extreme. You could use blue right here and then have this kind of adjacent yellow, kind of cream, even into the green colors. It's more of an adjacent complimentary. This is like I said, it's a great way to pick out some different colors and you can get some crazy effects like compound and different shades of the same color, but for interface purposes and for my own personal preference, I'm typically sticking to the monochromatic and maybe occasionally complimentary. And the analogous one I believe is pretty cool as well. So if you were gonna start out with one or more of these analogous, monochromatic and the complimentary, these are the three that I would kind of go with, 'cause these are gonna give you some of the most kind of, not necessarily common color patterns, but those three, in my opinion, are gonna be the most, just easy to work with kind of color systems. So definitely go and check out this tool. Okay for homework, I'm gonna get you to design a little bit of a calendar widget, not a full blown calendar view or anything but something that would be inside of a calendar that you would click like new event or add event, something like that create event. And then this would be like the form that you would use to create that event. So a couple of input fields, check box, another button, and a call to action. And in order to make this a little bit easier, I created a wireframe and I've already designed it. So I'm just gonna go through and kinda show you what I've got going on here. So, first of all, I just went ahead and took a screenshot of one of my favorite calendars called Fantastical. And then I just use like all day, when does it start, when does it end, to kind of come up with some just the input pieces that I knew that I would need. And even for the wireframe, I'm trying to decide whether or not add event in black or add event in white, look better. And to my surprise, the black on the blue measures a contrast of 5.3, whereas the white contrast actually only measures 3.0. And so this is another one of those interesting situations where in my personal opinion, I can more easily read the 3.0 white text, than I can the 5.3 black text. And so according to this color equation, it's saying that this has more contrast. So theoretically it should be easier to read. But this is one of those areas again where the contrast scores, I think are a great critical must have as a very strong rule of thumb. But this is where another one of those gray areas where it's like to me personally, and we could test this, we could test it with many, many people and see if our assumption is wrong or correct. But I ended up going with the white text here, because I thought it looked better. It looked higher contrast even though it was barely passing AA large. And again, it goes around with the surrounding colors and what kind of makes that stand out. So I just created these really quick basic input fields for event name, the location of the event, the all day is going to be like a check box. And I wanted that to be a little bit smaller, kind of in the same style. And then you got to start time and an end time, and as I'm laying this out, I'm just trying to figure out, okay, what are all the pieces that I need to put in here? Started playing around with the spacing a little bit more. And then I realized also since this is kind of a wireframe, we don't wanna go too crazy with float labels or anything like that. So I went ahead and created another version that had these actual labels on top, felt like that worked a little bit better. It's a little more clear, a little more straightforward. So I updated the screen to have labels on top. You can do your labels however you want. In this particular example, I just wanted to make it extremely straightforward, especially when you're designing wireframes. You don't really want there to be any possible questions. You want it to be so straightforward. Not really boring, but almost boring in a way because you just want it to be so descriptive. You're kind of heading off any questions that someone might have about this. So right here, I'm trying to decide, okay, the alert is more of like a dropdown or like something to select from, it's not really an input field. So I'm playing around with possible different button styles. I think ultimately I ended up just making the input fields a little bit darker just to kinda make them sit back into the layout a little bit more. And then I decided, okay, I'm not gonna spend too much time really trying to design the alert button. I just wanted it in there as a placeholder because I want you to design your own layout for this. So while you're laying this out, use this as a very loose guide. You don't have to make it exactly like this. You can turn it into a three step process. You can do anything you want, really. But I just want you to kind of use this as a rough guide to come up with either a monochrome color scheme or an analogous color scheme or something complimentary. And maybe your button and your all day checkmark, or maybe the the active state of your input field. Maybe those are different colors. So very specifically choose whether you're going monochromatic, analogous, or complimentary. Maybe you do three of them. It's up to you. I don't want you to have to go crazy with it, but pick at least one of those color schemes and go with it. And try to design your own version of some kind of event form field using this wireframe as an example. So go ahead and get started. And I look forward to seeing what you come up with.


=== FILE: 4-07 gradients.txt ===
------------------------------
﻿- Gradients can be used in a number of ways to enhance your designs 'cause they can be generated with code and they don't come with any kind of overhead and performance at the same way that big images loading in or illustrations loading in, not that those are bad things, but gradients have this super power because they can be generated with code. So I wanna look at the three ways that they can typically be used. Number one, they can be used to create visual interest. If someone's ever asked you to make something pop or it needed to be jazzed up a bit, sometimes you can do that with a gradient. They can also be used for a utility, fading things out or making smoother transitions from one thing to the next. And lastly, they can be used for interactivity. They can be used to create depth and to have the Z index of your screen kind of raised, they can kind of create these lighting effects. So first of all, let's take a look at a few examples for ways that they can be used to create visual interest. All right, good old classic stripe.com. Well, check this out. They have this visually interesting gradient in the background, which is definitely kind of one of their branding staples, but what's interesting about visual interest when it comes to visual interest, creating those with gradients, most of the time it's gonna happen with analogous color. So things that are close to each other on the spectrum. So if you're looking at the color wheel, it's gonna be going from kind of a blue to a purple to this kind of lighter green. And anytime you're creating a gradient with complimentary colors, like a red and a green, it has to travel through the literal gray area of the color spectrum to get into that color. So most of your visually interesting gradients are gonna look the best if you're using analogous colors that don't go straight across the color wheel. And that's exactly what Stripes down here with a purple to their blue, to their green. The one thing you have to be careful though with these gradients, you have to check multiple colors to see if it passes accessibility. So I've got white as the foreground, and then if I'm checking this text, you can see, okay, great. This is AA, passes AA, but then if I come all the way over here to this really light minty blue, then that starts to fail. And if you check it kind of along the spectrum, you can see it's about AA large in the middle, and then over here on the darker color, 'cause there's more contrast in this area than there is over here. So they can probably get away with this, but it does get into the failing zone of accessibility on this section. So that's one thing you have to be careful with when you're putting text on top of gradients. Okay, another example, let's take a look at this Axon design system. You can see there's a very, very subtle gradient going from this darker red diagonally down to this lighter red. It's very, very subtle, but it gives it a little bit of kind of visual depth. And we took their brand colors and then just kind of added a lighter color. So they had this kind of brand dark red that was the Axon red and the brand Axon blue. And we added just a slight variation. I don't even think we changed the hue, It was more about changing just the brightness a little bit and maybe the saturation, but then that gave them the option to have this kind of darker blue going to the lighter blue if they wanted to use a blue header or a darker red going down diagonally to this lighter red, and it's very, very subtle. And that allows them to create a little bit more of a variety in their internal applications without having to rely on any stock photography or images or illustration. So it gives them a little bit more of an opportunity to add visual interest with just a little amount of code to generate these gradients. And you can also see that we're using them in this kind of call to action here for the search, and on down here, you can see some of these buttons. Right in here, you can see that some of these larger primary actions just to kind of keep that theme going where we're bringing this grading across to some of the primary calls to action. All right, here's an old project of mine where this was a timer, called Timer+ and you can set these timers and you can name them. And I was playing around with this idea of bringing this timer, instead of going to a full circle, I was just gonna go into this kind of semi-circle that went all the way across. And I thought it would be cool to use this gradient. And then if you were editing the time, I thought it would be cool to carry this gradient idea down into selecting the time. So you're going between hours and minutes and seconds. Now this design does have some probably readability issues, some contrast issues, this was several years ago. So not my best work, but it does show you I'm still using this blue and purple and I didn't even know about analogous gradients at the time, I just chose something that I thought looked good. It just so happened that the ones that look best were these analogous gradients. And if you look at page two, you can see that I'm also experimenting with this kind of green to blue, and this kind of orange to red, these different color schemes that you could choose, but if you look right here, this green to red or green to pink rather, this is getting pretty muddy right in here. Now it's not to say that you couldn't use this for anything, but this is a good example of a color spanning across the color wheel to get to its complimentary color and that results in some kind of blurry, muddy kind of grayish, not that saturated and clean of a gradient. One more example of a very subtle visually interesting gradient was on this particular prototype called LateShift. This was kind of a survey. So I've got this darker blue that kind of goes down to this dark purple. And then I've got this extremely contrasty pink button on top of it, which is not a true complimentary color, but they are analogous colors, but they're further apart. So it has a really nice, kind of goes with the color, but on the color wheel, it's kind of down almost like a triad quadrant. And so I'm just using this very, very subtle hue shift and this white and the pink on top of that gradient to kind of create this really rich interaction. But gradients can be trendy, they were really trendy with old iOS work and we had this big shift to flat colors only, but now you're starting to see gradients kind of sneaking back in here and there. So you need to use these wisely, use them with a restraint, and sometimes it can be a branding question or just a design direction in general. Before you go experimenting with these too much, you need to ask yourself, is this the type of project that's gonna have and use a lot of gradients, or are we gonna stick to kind of flat colors? And so you almost need to set the direction upfront of what you wanna go for before you start going too crazy with all the gradients. And one last visually interesting thing you can do with gradients is kind of create this spotlight effect. So if you look at these FiberStream designs, you can see this very, very subtle radial gradient in the background here. And it almost looks like there's a dark surface and someone shine a flashlight onto the surface and it's only kind of a very soft light is hitting the surface. So it kind of makes it have this dimension, this floor that's actually in side of the image. And if you look down here at these routers, you can see it almost looks like there's a spotlight on each one of these. And if you look at the actual shape, you can see there's a radial gradient on the actual background. And so I've got it the same exact color, 333 going all the way to a 0%, 333, to kind of create that effect. So you can say if I brought that all the way up and I fade to the same color, but I want the background to bleed through. So I went from a 0% to 100% of the same color, and then that created the radial gradient. And you do have to kind of be mindful of the size of the gradients when you're working on these, 'cause you can see if I went crazy with this, it wouldn't work. But I have just enough to where the gradient 0% is ending before the edge of the shape. And I've got the position in just the right spot below the router, so it has the shadow. And if you actually look hard at these, I actually created these routers with nothing but shapes and gradients, and a couple of kind of inner shadows, bevels, but I'll get into how to create something like this with gradients and shadows later on in some of the style lessons, but for now, I just wanna show you a variety of ways to create visually interesting things with some simple gradients. All right, so now let's take a look at the way that you can use gradients for utility sake. Now, if we look back at this RED camera concept, you can see right in here on this product info, this kind of gradient fade out. This is a great way to create a little bit of depth and kind of give the impression that more information is below there. Now you could imagine if this gradient was gone and I just did a dot, dot, dot, and the More button was maybe right here. That would still be okay to use, but adding this kind of gradient in here just gives it a little bit more depth, and maybe a little bit more interest. Specifically for this kind of concept, this dark concept, it kind of adds that depth and it adds maybe a little bit of mystery 'cause things are fading out. Just gives it a little bit more visual appeal. And so even though we're not really trying to go for full on visual interest, although it is creating that interest. It's really used as a utility to say, Hey, there is more to the story here. And it's an easy way to kind of hide that text. And if we really wanted to, we could do this at any point. So if we deleted that, if we had a certain character constraint, we could move this gradient up, and have this right in here, move your More button up there, and the same exact thing was done here. And the way that you create these utility gradients is you simply have the same hex code or HSB value. In this case, it's white going to pure white. The part that you wanna fade out is 0% whereas the part that you have fading is 100%. And as long as that is the same hex code as the background, then it's gonna work out. Another example of that is on the Shift Nudge website, where I have all of these modules laid out and I have the course lessons kind of listed below. But when I first laid this out and everything was kind of laid out, it just felt kind of overwhelming. So I wanted to show all of the lessons, but I also wanted it to not be overwhelming. So I use the same exact technique here. So I'm using an actual gradient overlay on these to just indicate that there is possibly more there, and I didn't even use the More button 'cause I kind of was going out on a limb thinking, well, maybe someone will tap on these because it looks like there's more. It will create interest which will create action. I think this is just a very, very simple way to kind of fade things out and to smooth over a little bit of that transition. So if you look at this example, we've got kind of this main video area here, but we're also incorporating some text and a Share icon. So whenever you're using text on top of images, you never really know what image that someone might use especially if this is used for like a content management system. So look what happens when I take off my overlay. So all of a sudden, I'm getting tons of image bleed through onto my text. There's no way that I can reliably have my contrast be at a certain level, especially if I were to get some kind of image that came in really bright white, and it would just completely shatter the text. And most of the time adding a drop shadow on text is not really gonna look that great. So if we were to go here and say, okay, let's put a big shadow on our text. That would definitely make it readable, but it also just doesn't look good. It doesn't really look that good. There are some times some ways you can possibly make it work where it's very, very subtle, but you're typically gonna wanna do that with the addition of a gradient. So if I remove this shadow completely and bring back in these images, let's see, let's go to this one again. So you can see this simple overlay right here. So now if I remove all of these images, you can see the overlay in effect. So this utility gradient it's going from, looks like I've got 80% black here. It is the same hex code transitioning to the same hex code just at different per se values. So if I bring back the images, I'm also playing with the exact position because I don't want it to fade out here because then I wouldn't have enough overlay with the image. So I have the gradient starting up here, and now I know if I pull this handle, this 80%, I know that everything here is gonna have an 80% black overlay. And so even on a white photo, I'm guaranteed to have a passing contrast score of 15. So it's gonna be very, very noticeable. And so I could have even brought that down darker, but that's just kind of the, it seemed like 80% was a good opacity stopped for that. So these types of utility gradients can be very helpful to create these environments where your text can still work even if there's an unpredictable image in the background. Another really cool way to use these kinds of utility gradients. Let's say you're in Figma and you want to have a big image for your header of your site or app, something like that. So I'm just gonna pick this random photo, and let's actually pull in one more just to show two different examples. I've already got this Unsplash plugin installed, so I'm just choosing a colorful photo here. And that one's mostly black, but let's do another one 'cause that one's a little too similar. Let's do one more, we'll do three of these. Hopefully we get an actual really colorful one. Okay, fine, that'll work. Actually, you know what? Let's cut that, go undo a couple of times and then paste this one back in. There we go. Alright, so let's check this out. Let's put these all on their own frame, I'm gonna hit command option G while these are selected, then I can extend this frame. Let's actually extend these frames. No, that's not gonna work. All right, pulling these frames down, and I'm gonna give them all a white background to kind of pretend that these are almost like the top of our website. So starting with this one, let's actually just go ahead and I'm just gonna option drag this down just so I have a rectangle that's the same size, let's remove the image fill, and let's add a gradient fill. Let's see, what do we wanna fade this out to? So we could technically, if we wanted this background of the website to be a kind of a dark color like this, then we would want our gradient to be the same color as the background. So we want that to be there, and we also want our 0% value to be there. So now, I can use this shape and let's start going in and adjusting. We actually want the full color to be down at the bottom and we want the 0% of opacity to be at the top. And let's just see here. I also wanna make sure that this one is there. Okay, that one is there. I think I made the wrong one at the top. So we want our 0% to be at the top and 100% of the bottom. And now we just wanna make sure that the gradient bottom edge is aligned with that photo bottom edge. And then, let's get back in here and see our 0% is extending too far past the top, so we wanna make sure that the 0% is below that background. You can pull it further down here just as long as it doesn't extend past, it'll be fine. And you can even pull this one up if you wanted, if you didn't wanna see that kind of sidewalk stuff in the grass that looks maybe a little dirty, we could bring this up a little. So all of a sudden we have this kind of cool orange and concrete image that seamlessly fading into the background. And we could either export this entire thing as an asset for the web, or we could export this image as its own asset, and this could be in its own little Div container on top of the image. That way, no matter what image you brought in here, so even if I brought this one in, I could still use the same overlay, and fade out any image that we put in here. This one doesn't work quite as well, just because the image is very colorful at the very bottom, whereas this one wasn't, but you could still make it work. Even with something like this super bright, you could still fade that out. See, this one doesn't work quite as well, this one would work a lot better if we're fading to a white background. So if I bring this gradient over here and I align that to the bottom, but even that could work. So if you wanted to put some type writing here that was on top of the image, that white type is not gonna work on here, but it would work down here. But let's just say we wanted to fade that out to white, we could very quickly, very easily change these to all white. And we have a pretty nice fade out there. We could play with the actual height of this. Maybe this little quasi thorn isn't fully visually interesting, or maybe we would wanna bring up the gradient to get that to be covered up. So like right in there, maybe. And we could also experiment with making this a radial gradient. We need to make sure our white is on the outside, okay, it is. And then if we're gonna make this a radial gradient, then this needs to be kind of fully up here, then we can kind of play with, okay, we want this to be kind of right in the image. And then we want this radial gradient to kind of, as long as we're not hitting and seeing this hard edge, we can play with the radial gradient and the position of that radial gradient to get it in just the right spot to where now this really cool flower image is fully fading out in kind of this rounded fashion. So even right here where the blue would normally be. And if I bring this back in and toggle this, you can see where it's fading in out. So it's just kind of a cool way to put this kind of vignette around an image, and if we go back to this one, we could even say, man, what if we faded? What if the background for this website was this kind of cool purple? And then we use this same linear gradient to handle that. I'm gonna grab that color and this color, and we'll make the top one zero. Oops, grabbed the wrong one. 0% there. So maybe this one doesn't work quite as well because there's not as much color, but you kind of have to play with the combination of what does the photo look like? What does the gradient look like? Play with a couple different options, but this is a really great way to use gradients as a utility, and you saw it. You can use this for fading out text, you can use this for fading out images. And look at this Axon example again. Here's an example of where I'm using this very, very subtle probably like a 40% black to a 0% black to indicate this mobile table that you can swipe over, and there's more that you can view here. Now there's a number of different ways that you can show that there's more content available, but the same way that we're fading out that text on the Read More for the RED camera stuff, we can use that same thing here to fade out these lines and the cells. And it's just kind of a very easy way to add that little bit of utility, that little bit of affordance that lets you know that there is more there. You can see that Spotify is even using the same technique here with all of their artists headers. They're taking this big image and they've got this programmatic gradient back here to fade to their background color. And then they're using the same thing in reverse as you scroll, very, very slowly, they're starting to bring in the gradient in the top. So they're bringing in the grading in the top that will ultimately turn into the entire background for that header. It's very, very subtle. When you get the hang of using these utility gradients, it's very, very powerful. And the beauty of this is it's all generated with code. I'm using the exact same utility gradient on this Android icons website where I've got this full video, but I wanted there to be more contrast on the text, but I didn't wanna do this fully big overlay. So I'm just using this like 80, 90% black fading up to maybe 50% black. So you can play with both values to kind of set things further back in the background or to let them bleed through into the foreground. And you can see on this side as well, I'm using a big radial gradient right here behind these little animated paper things. Same thing here, I've got a big radio gradient behind this computer just to add a little bit more of the spotlight effect. And finally you can use these same types of gradients for adding depth and dimension to buttons. Now, again, this is something that you'll have to make a decision on whether or not your buttons and your styles in general for your project are gonna use gradient because it's definitely can be trendy. It can be subject to someone's personal opinion, whether or not flat colors or gradient colors are gonna look better. But if you end up using gradients, this is a great way to do it. So this button, for example, this shows kind of an analogous gradient where I've got, let's go to our HSB value so we can do this more clearly. So at the very top, you can see I've got two 220, 80 and 100 and then the very bottom, I'm going to 60, 80 and then 90. So I could've left that at 100, but I wanted the bottom to look a little bit darker. Typically, if you're gonna have this on a button, you want it to look like your top color is lighter than your bottom color, because light comes from the top, same way that if I were to grab my backlight here, if all of my videos look like this, it would be pretty creepy. And so sometimes it can be kind of creepy to have light coming from the actual bottom unless there's a very specific reason to do that. So in general light comes from the top, I'll cover a lot more of this and the style section, but when you're creating gradients, especially for buttons, lot of times it can be most helpful to have your lighter color on top, slightly darker color on the bottom. And it kind of works well, you could have a very simple layout with a button like this. But if you wanted to, you could also use the kind of utility gradient where I've got my flat color here, just a simple 3377FF trusty blue color there, but I wanted to add a little bit of extra spice to it with this little gradient. So what I've done here is I've got a black color, at 0% at the top, and I've added 20% of the bottom. So you can see if I really cranked this up, we'd have zero at the top going to 100, and that would just be too much. You really have to have some subtlety in your gradients for them to actually work. You could even do 10%. It might be kind of hard to perceive that, but you could also have this at 10% on regular and then as you roll over, maybe it goes to 20%. I had the wrong one selected. So there's some different things that you could play with in terms of utility gradients and adding this kind of interactivity, same way with these checkboxes, You can see here, I've just added a very similar almost utility gradient. I've got grayish color, let's look at the hex code. Well, you can look at the saturation. This is 92 saturation, actually this is brightness. So instead of 100 brightness like white would be, I've just gone down to 90. I think I have this at 92, kinda want just a little bit of contrast between the border and the gradient. If I went the same value as the border, that could look a little weird. It doesn't look horrible, but I did just a little bit of difference between there, so going up to like 93-ish or so. And this just kinda makes it look like because our light is coming from the bottom and the dark part is at the top, it makes it feel like it's set back a little bit. Like it can be checked. But then if we check the icon, then we want the light coming from the top and the darkness at the bottom to make it look like it's been activated. You can see if I had changed this gradient around, I moved this dark color to the top, and this light color to the bottom, it could technically still work because it looks like the color has been indented, but if we did that, we might want to rotate these colors to make it look like it was an actual button. So maybe in this case, we would want that to feel like it was stuck out of the page just a little bit, and we're kind of manipulating the Z index with a gradient. And again, this is a very, very, very subtle gradient. And then we are making the checkbox look like it's sunk into the page with just these simple little gradients. Lots and lots of things that you can do with gradients, especially when it comes to utility, with interactivity and even adding visual interest. So just a couple of pro tips just to kind of hammer in the points. If you're trying to just create visual interest, you're working on marketing sites or things like that, you have a little bit more leeway with your values from transitioning from blue to purple or green to blue, things like that. But if you're trying to get into the utility function with the zero to 100% gradients, or even the buttons and interactivity, you wanna use those very, very, very subtly. So you don't wanna go overboard with your gradients with interactivity and utility, whereas you have a little bit more opportunity to do that and the kind of visually interesting kind of way. So for homework, for your gradients, I want you to take a look at the Sketch icon, the Sketch icon right here. So I'm gonna go ahead and take a screenshot of that, and we're going to paste it into our design tool and it's got a lot of cool gradients in here. So I want you to go ahead and recreate this shape. So you can just draw a rectangle, hit return, delete that point, connect the existing points with command J, and then you can kind of manipulate this over here and we're gonna add a fill. And then you could bring this shape over here, add a linear gradient, and we're gonna make the gradient go from here to here, and we're gonna use our Selection tool. It doesn't have to be perfect, but just to get an idea of how we can create this visually interesting thing with gradient. So I'm gonna duplicate that, shift H we'll flip it, and then you can say, you could probably use the pencil or something else to get in here. You could even use rectangles and masks, whatever is the easiest way for you to do this. And then take that shape, add the linear fill, and just use the dropper to start creating these gradients. You can see how incredibly subtle this gradient is. It goes from this kind of orange down to this yellowy color. You could also adjust your little shapes to line up a little bit better. So for the first exercise, let's just recreate the Sketch icon or any other icon that you might wanna do. I just chose the Sketch icon because it's just some simple triangles. And secondly, let's recreate the Stripe background. Same thing, let's create a rectangle just like this and choose all of the different colors that they chose for their background images. You can do it straight across to begin with, that's gonna be a little bit easier, and then maybe after that, you could rotate them. Whatever's easiest, it's just something that kind of gets your gradient usage going. I just want you to kind of experiment. And once you've created the Stripe one, you could create a different one that's completely different gradients. Maybe you create your own pattern similar to the Stripe header example. And then once you've got your Stripe header, I want you to go ahead and create a utility gradient that goes from 0% to 100%, and apply that to the text on any of your old projects that might have been your typography homework, or any body of tags that you've created for any of your older projects. Go ahead and try to apply a little utility gradient that kinda fades that out just so you can start playing with it. Make sure your hex code for the background is the same as the hex code for your utility gradient. And then also take one of your old projects and try slapping a gradient on one of the buttons, whether it's an analogous gradient or a slightly kind of overlaid utility gradient on top of a flat color. So a variety of gradients for you to create. So get started and I can't wait to see what you come up with.


=== FILE: 4-08 shades of grey.txt ===
------------------------------
﻿- Believe it or not, gray can be one of the trickiest colors to master inside of user interface because there can be so many different variations. And most projects that you work on are gonna have multiple shades of gray, because you need to account for dark text, medium gray text, icon colors, light gray backgrounds or some light gray dividers. So there's a lot of times you can kinda go overboard if you're not really keeping your gray colors in check, you might end up with multiple different colors and they're just slightly different across multiple different screens. So it's always best to kinda come up with three to five, maybe a few more if you have a few different color schemes, but come up with a very solid strict kind of system to deal with your grays and know that going into your project before you get too scattered. So let's take a look at a couple of examples here. I've taken screenshots from Twitter, Facebook, Gmail and Pinterest. And I have captured their colors in these little swatches here. So I've got the Hex code and the HSB value. So we can take a look at the differences between all of the colors and the grays. So Twitter is a pretty simple example here, you have your basic Twitter blue. Then you have your darker color here, your dark text which you can see in the side navigation. And also and the usernames and also on the actual tweets. Then they have a secondary gray, the 687785, this is gonna be used for some of this metadata, like the username and the timestamp of the tweet. This color is also used for the icons and the label, the count of retweets, comments, likes, and so on and so forth. Then so we've got our dark gray, and our medium gray, and this is passing double A text by the way. We also have this lighter gray, this is really light gray, this E6EBEF this is gonna be used for these divider lines. So we've got this really light divider line here. And even this one, this big block of color, it looks darker because there's more of the color, but it's actually the same exact Hex code. So that's just a much larger border kinda separating the timeline between the kind of tweet box here. But it is the same exact color, even though this one looks a little darker. And then we've got our last gray here that is F4F6F8 and that's the background of this little trends for you area. So we've got the light gray there, and then they're reusing the same gray that we have number four here. They're reusing that same gray as dividers on that little background. So all in all, you can look at in there, obviously they're using white for the background, so I threw that in there. But look at the hue values, it's very very close 208, 210, 209, 207, 210. Now it's not 100% evident if they were using Hex codes or HSV values or some other mechanism for choosing the color, but they've done a really good job keeping all of these grays in the cool blue kinda Twitter family. So a lot of things just it feels like it goes together because the hues are so very similar. And then they've adjusted the saturation and the brightness of each one to just kinda create a nice looking color palette. So moving on to Facebook, kind of a similar color palette, but you can tell this is a little bit muted because they're not using the white background like Twitter is. So I've pulled in their grays and kinda the same thing. You've got these the brand blue and then you have your slightly darker blue here. But then you got your dark text, your medium gray, and then you've got your darker gray they're using for some of these background colors. For example, this gray and this gray, they look different. But it's the only thing that's making it look different is this border and that's one way that you can create a little bit more of a use for one color is having a secondary color and sometimes using it as a border or sometimes not. So a pretty nice example from Facebook as well. All right, then we get to Gmail, Gmail, Gmail, Gmail, what have you done. I'm not exaggerating here, these are all of the grays and it's likely that I may have missed some, but these are all the grays and the variations that I actually found from this screenshot of Gmail. So you can see just from looking at these swatches that there is a variety of kind of warmer these darker color grays. These are all pretty warm with the exception of this one, this one is kind of a bluish color and then there's kind of a variety of warm and blue grays inside of here. And one of the biggest ways to tell the difference if you can't quite make it out with your just purely visually, you can see that all of these grays that are in the 200 hue range that do have some saturation and brightness, this is gonna be in the blue color realms. So anything with a 200 or so hue is gonna be right in this bluish kind of purple area. So if we look this one's 206, and it looks much bluer than the 180 on this one. So if we open this up, we can see 180 is actually on this TiO blue color spectrum. But they've got the saturation pulled all the way out. So it's naturally going to look a little warmer. Most of the neutral grays will kind of appear like kind of like a warmer gray compared to the cooler grays. Same thing with this, but then you get back to the 200 range blue and it's gonna feel a little cooler. So the ones that are zero, are gonna feel a lot different than the ones that have a hue at 200. Simply because that hue is at a different range and it's gonna produce a slightly different effect. Now, I don't know what was going on at Google when they designed this. This is a really, really old product. And I would imagine that there have been multiple teams working on this, 'cause you do have this consistent number four color, you've got the number four color for this icon, you've got some of the text over here, like the timestamps, you've got the secondary tags for the first line of the email. But then you've got weird things like this inbox area, this is a very warm gray on top of this very cool gray. And it kind of creates a lot of odd color combinations. So and even this right here, this 14, number 14, this is a very, very different gray, than this is right here. And then you've got a very different gray for these check boxes, so there's a ton of variation going on here. Now I don't mind this design so much, but once I got in here and really started analyzing the grays it was painful to continue producing all of these swatches. And if you get in here and you really start digging in these blue borders are slightly different than this desaturated gray border. And it's just a ton of unnecessary Hex codes that are being used. And again, I'm not trying to fault anyone at Gmail, because it's probably an older product that has old code for this for the inbox system, maybe some new code for some of the new designs and it's getting all mashed together. So, but it's just a great example of what happens if you don't really get a handle of your grays. And let's move on to the Pinterest example right over here, which does an amazing job with just very few grays. So if you look down at this color palette, they really only have these three colors right here. This fifth one is really the only variation that I could find, which is really only a variation of this color. So this color right here number five is a 25% version of number three. So if we look at this kinda zooming out, we've got three basic colors, we have our dark text, which is the number two here, dark text here, dark text here. I didn't label it, but you have your dark text right here and your dark text right here. So a pretty consistent usage of dark text, even this 14 pins, 14 weeks ago, all of this is that same color, the pawn 333 very common, go to kinda dark text without making everything looks so dark and contrast. It's kind of like a nice charcoal a color. Then we have our second gray number three here. They're using that for these icons here. And they're using that for the secondary navigation items up here. And they're also using it for these icons over here. And then what's interesting, it almost appears like this drag and drop button. This is the only thing that kinda feels out of place, 'cause they're using a lot of big blocky kind of fore background even though it's a light gray, it's kind of this chunky feel, and they're not using a lot of this dainty thin call to action style. This one button feels slightly out of place just in terms of their overall style. But, and look, this also looks darker, this looks darker than that icon. But remember from one of our other lessons, these colors are going to appear differently depending on what is surrounding them. So this gray is surrounded by a light background or kind of a darker background than the white. So even though these are the exact same Hex code, and you can see that if I just draw a rectangle and make this color the same, you can see that this is the exact same color here but it just appears a little bit different on this side because it's surrounded by slightly different colors. But overall, they do a really really good job of providing lots and lots of variety with just these three different grays. The one area that starts to get a little bit questionable though, is this last saved to, this is gonna be that 8E8E color. And while it might work for some of these bigger bolder colors, because it's a really thick font, it's a lot more readable. Some of these thinner weights to me, I don't think that that's really gonna fly very well. You can see this I've got the contrast already checked here. This is a 3.28, so it is passing double A large, but really with a font that small, you'd want it to be a 4.5. So I could see them introducing the 777 color as possibly a third gray, right in between here. So if we took this, move that over they could very easily add this in as a darker gray. And actually this should be probably switched with that one 'cause it's a little bit darker. So this could be their triple A dark score, their double A medium gray score, and then their double A large score for some of these bigger items and some of this iconography. But overall Pinterest does a really good job, just in general for a very conservative usage of their gray color. Which is a huge leap from what Gmail is doing with theirs. But you can see there's a lot of different styles with these colors. This one is kind of these warmer desaturated grays kinda goes along with the red color scheme that Pinterest has with their logo and the same color they're using for some of their other accent colors. Whereas something like Facebook has a lot more of a hue associated with their individual colors. You can see again all these are in the same kinda hue color space. And Twitter does a similarly good job with having theirs inside of that color space. And I didn't really point this out as one of the examples but one of the worst things that you could do with a color gray is have a big full color background or some kind of very colorful background and then just use a random gray on top of it. You're always going to want to use the same hue variant of that color, and then bring down the darkness or the opacity, or at the very least, use the color black and use the opacity all the way down. That way, some of the color bleeds through the border, or the background, or whatever you're trying to produce. Never use that fully desaturated gray on top of a color because it's just going to look really, really weird. For homework, let's get a calculator design going whether it's a desktop calculator, or an iOS style calculator. I've got some examples posted down here. So what I want you to do is once you have one kind of laid out like you like it, try three different variations. One with a neutral gray where there's absolutely no saturation in any other colors whatsoever and you're only using this kind of gray scale black and white color scheme. Then for your second one, duplicate that and then start to add an either a warm primary color or a cool primary color, some kind of color of your choosing for some of the more colorful buttons like the equal sign and all those. And then try to mimic that hue inside of all the other grays, maybe even make a copy with the desaturated grays and the saturated grays just so you can see the difference. And then for your third version, make something that is completely colorful full color background, full color equal sign button, so maybe you play with some complimentary colors. And then try to redo the grays again, where you're not using desaturated grays but you're using very intentional either black or white with opacity on top of the background color, or you're picking that one hue that you're using as the background to kind of play with the gray range inside of the different buttons, the dividers, any other kind of gray thing that you're using in your designs. So it should be a fun little exercise, design the calculators get your colors going and I can't wait to see what you come up with.


=== FILE: 4-09 white almost.txt ===
------------------------------
﻿- It's important to understand that the color white is typically going to appear closest to the user within the context of your screen layout. Because typically, if light is hitting something, the brightest objects are going to be closest to the foreground, and the darkest objects are going to go backwards into the background. This is why you'll see a lot of interfaces, especially when you get into mobile design and informationally dense interfaces, you'll have a light gray background and then white modules that are on top of that light gray background. But it's really a lot more delicate than just slapping in a gray and then putting a white on top. There's a subtle nuances around border lines and shadows and color differences that can really play off of one another and can sometimes conflict with one another. So it's really important to nail down your white and your very, very subtle, almost white light grays when it comes to borders, dividers, background colors. And this can apply to other colors and other combinations besides just white. But for the majority of your interfaces that have a lighter kind of structure, this is gonna really come into play with just those modules that you want sitting off the page. Let's take a look at some examples here. We've got two artboards here in Figma. And just to very quickly point out, this is pure black background and a pure white background. And then I got pure white here and pure black here, and then each one of these squares to the left of the pure color is 90%, 80%, 70, 60, 50, so on and so forth. So if you look at this, it almost seems like this white is kind of jumping off of the black background, like it's starting off slow and it's jumping off. Then if you look over here, it almost looks like someone pressed on this white sheet of paper, and there's a big hole right here. So this is just a quick visual example that naturally your white colors are gonna jump off the screen, and your darker colors are gonna sit back on the screen. And this will become even more important when we get into dark UIs. But it's just as important with lighter color UIs, and it's just as important to nail your white colors and your background. Back when I was working on this Shiplify project, and again, this is like seven years ago. So there are some issues with some other pieces of the design. But I remember really stressing over. I wanted it to just feel very, very clean because it was so informationally dense. There was a lot of information here between. Reference number, pounds, shipping locations, dates, places, prices, statuses, lots and lots of information. These are some of the early designs after I had done wireframes, and I'm trying to divide all of this information with this tiny little divider. So I've got a huge giant block of very informationally dense things. And I also wanted this entire section to be tappable, so you could select it. And you can see right now it looks more almost like a read only list. And there's not a very, very clear divider, I mean, you can kind of see it. And the big reference number does kind of help divide it as well. But once I took this to the desktop view, it kind of fell apart and I couldn't quite get it to work with just the white background, even though I desperately wanted a clean, white negative space design and background because this is so such dense information, and I wanted it to be really clean, really nice. And so I thought, "I'm gonna use a white background, this is gonna be great." But it just didn't quite work. So ultimately, I decided to go with something like this, so I'm still using a lot of white backgrounds. But then I'm bringing in this very, very subtle gray background, so that I can have these white modules kind of just sitting above the background. And now because this has its own tile, it gives me a little bit more room to divide these and kind of do things in between here. So now I can add more buttons in here, like the price or the phone number. But still, I could also have, you could imagine that these tiles are now tappable. And so that gray background just kind of lends itself to sitting backwards just a little bit, you can say if I went too dark, then if I tried to put other buttons in the background, it would almost end up being, it's like the darker you go, the more contrast you're going to increase and the more visual weight you're going to create. So there is a very delicate balance between hitting just the right gray and then going too dark. So you could imagine if my call to action is this really dark color, then I got to be careful when I'm using these darker gray buttons and the deactivated toggle switch here. But it does give me a little bit more room to play with these kind of sunken filter buttons. And then the more important content that's sitting on top with the white background. You can see I'm playing with the kind of gray family of buttons here with a slightly darker background with this very faint border, which gives it just enough contrast actually feel like a button. Without this border, these grays would be too similar to really tell apart. So I'm adding this very, very subtle border that almost looks like a drop shadow but drop shadows end up, if you don't use them very, very sparingly, they can very quickly kind of muddy up your interface. And with such high density and such a large amount of information, I didn't wanna clutter things up with just another visual element. But you can tell if I go down here to the desktop, now I can carry the same exact kind of motif here, where I'm using this very subtle play with the light gray, and then the white elements that are sitting on top, and again, I'm referring to the structural colors here. But it allows me this interesting dynamic where now I can have this definition of my color usage where it's like okay, now, the light gray, and the slightly darker gray buttons are more of like these controls and these filters, and the white tiles are now active search results. And these are tappable, clickable tiles that can be interacted with. And it doesn't really take away my primary call to action, this dark color. So my primary call to action is really, really dark color, nothing else gets this color, but nothing else is on this gray with this big fill background. And I'm using the kind of, the brand color ends up becoming the kind of secondary color, that way there's a little bit of contrast. But even though this information is incredibly dense, I've made a very distinct decision to have this like almost white, slightly light gray background for the filters, and then these white modules that are popping off the background, and that creates just enough of a visual contrast and distinction to know that it's like, okay, these are set back in the background, so I can filter everything here, and then the ones that are bringing to full whiteness, those are my options. Now that's not to say that this is the only way that this could have been done. Someone probably could have pulled it off if everything was a white background. But then again if I went full white background, I'd probably have to make a heavier use of borders. And with so much information, you had to be careful because if you go overboard with your borders, borders around your modules, borders dividers, and then borders around the filters, it can just start to feel very, very, very, very visually cluttered with too many dividers and borders. So if you can balance the white and the light gray full colors, it'll just give it a little bit more of a breathable, cleaner design look and feel. So let's take a look at some examples on the iPhone for white and almost white treatments. First up, we're gonna look at the Settings app. So let's go here and just check out the way they're using white and light gray. I would say there are, just in terms of structural colors alone, there are three primary structural colors. We've got the white, pure white for the modules, then we have the light gray background color, and then we have this kind of halfway in between, but still very, very light border divider color. And you can tell that they're using like a half pixel on the top and the bottom of each one of these modules, because if they weren't using that divider on the top and the bottom of the full module, that contrast wouldn't be quite as strong, the distinction between background and the white module wouldn't be quite as strong. So they use that border just to give it that extra little lift on the z index. And then they've got a very subtle divider here below Airplane Mode, below Wi-Fi, and so on and so forth. And then any of these other screens are going to follow that exact same pattern. And then we also kind of look at this other gray for the arrows. You can imagine if those arrows were much lighter, we wouldn't be able to see them, and if they were much darker, it would just be very, very overwhelming to see that many dark, dark, dark, dark, dark arrows. So the shape is simple on the arrows, but also the light gray is used very, very strategically here to where it has a little bit more weight than the divider, but not too much to where it would be distracting over and over and over. And so they've got this gray background that works as a nice, it's almost got a subtle blue tint to it, possibly to relate to the the kind of general blue icon that you can see up here in the top left with the settings and the back buttons. So really any one of these, they're using that kind of white module color with the almost white background. All right, so let's look at Instagram here. They're only using white for their background. And they've got a very, very tiny light gray border on top of the stories here, right up there, and then also below the stories. And their header is probably just a touch of kind of a gray. It's really hard to tell. But I think it does have a tiny bit of gray in it. But they're not using any particular background color for the app because they really have a lot of photos that kind of serve as just the primary portion of the interface. So there's lots of, interesting from Justin Bieber there, there's a lot of different photos and comments and things like that, that really break up the background. So they don't really need an additional element on top of all of this stuff. But then if I go to Profile, and I look at some of the settings in here, you can see that same white background, but that same, really similar to the settings on the iOS Settings that we just looked at, they've got this very, very faint light gray border. Sometimes that light gray border is just enough to let you know that this entire thing is tappable, I can hit this entire big thing and look at the difference here on the Manage Your Time, see Set Daily Reminder, and the info, and that arrow, this doesn't look as tappable as these do, and actually these all don't look quite as tappable because there's not a divider line behind them all. And it's actually a little bit inconsistent here where you've got Settings. You know, they have the divider lines below the settings, but then they have these arrows with no divider lines. They are still using the divider line between, but you can tell like even here, there's a lot of negative space between Following and Followers. And then there's a pretty nice amount of negative space here but they don't quite look like tappable buttons, even though I know that they are, I can still tap, and especially if I tap and hold on Privacy, you can tell where that line goes. But just contrast this with the previous screen on Settings, where you do have the little dividers. It's just one of those things that you have to be very, very intentional with. And it's best to be consistent. I'm sure they have, they're changing these designs all the time. So you might be saying something completely different if you look at your version. But these are just some very, very subtle white and super light gray elements that I wanted to point out inside of Settings and the Instagram app. And if we go to the Facebook app, we have white backgrounds for all these modules, but then a much darker module divider. You could see this as like a 10 pixel border all the way across. Or you could see it as a really dark gray background. And the reason they're using this color, I believe is because there's a lot of different posts that there can be, they have people you may know, they have photograph posts, image based posts, there's a lot going on here. So they need a little bit stronger of a border, or a background to divide these modules. So the more you have going on, a lot of times that's the more you're gonna need to separate your content with that darker color, especially if you're using a light UI, you're gonna wanna use one of those slightly darker backgrounds. And then there's also the reverse of that, that we'll take a look at in just a minute. But I just wanted to point out a couple of mobile examples where the white module background and then the dark gray module background, we're varying super light to a little bit darker in the Facebook example. And it's just good to take a look at all these different apps that have been designed over and over, they've iterated, iterated, so take screenshots of these and use them as reference when you're trying to pick your own gray background colors. Another example of where I really had to delicately balance white backgrounds with gray modules, and vice versa, was the SmartLine app. And you can see it here, the goal here was to make it very clean, very modern, I didn't want a lot of, I tried some variations where I had bigger darker input fields and things like that, but I really wanted it to be as minimal as possible. If you look down here, when you're selecting one of your numbers here, I just have this giant block of text that you can choose from. And then I'm bringing in some very subtle shades of green, which could technically count as a hue, like a saturated gray, but I wanted these to be slightly different than the dropdowns here, it's just a very, very, very, very subtle gray. But you could tell if I put a border on this, even if I brought it down right in there, that doesn't look bad. Overall, that doesn't have a bad look. And I could even do like 0.5, if I wanted to, which would be pretty similar to something like iOS does. That doesn't look bad. But it also changes the direction and the style of everything. And I wanted this very, very flat, gently tinted, gently colored version of kind of the direction of that. So this is the direction we wanted to go. It's a constraint that I set up front, no divider lines, if you can help it, no divider lines whatsoever, I'm going to use whitespace and subtle color shifts to make this happen. And that meant it was harder to do. But I think it resulted in a nicer, cleaner interface than it would have looked otherwise. So even on some of these kind of this main feed area, I'm using very, very, very subtle tinted green color here, and then nothing but negative space, because the information is not too overwhelming that it requires a border, or it requires a background, especially when you compare it to some of that Shiplify carrier information type of layout. But this one, there was gonna be a bright color or an avatar for every single one. So that plus a bold name, plus the white negative space around here, that kind of let it not need a border. And it didn't really need a full gray background. And in fact, we kind of decided upfront, we want white backgrounds for a super clean interface, kind of what I was trying to go for with the Shiplify, but then I ended up having to revert back because it was just too much information. So with these lower density interfaces, you can get away with less dividers, less borders, but the more information you get, and the more things that are going on, sometimes then you had to bring in more elements to support the division of all the content. So we're not using any dividers or borders around here. But we are using them when you get into this thread here. So it kind of we wanted to mimic the native iOS to a certain degree with its own kind of a SmartLine flare, but we didn't want it to be quite as dark as the normal iOS. So we're using this very, very light gray for this kind of divider, and it's just enough to let you know that this is kind of contained content. And then we're bringing in kind of that darker charcoal brand color for the user message. Even for the input field here, it's a very, very light gray with just enough contrast on the text. And you can tell that this gray on top of this white background, it kind of feels like it's sunk into the background a little bit, so input fields can work well with this dark gray color. So on a very, very practical level. If you're working on a layout, and you want to go with a white background, a lot of times the best place to be is gonna be in this kind of F0F0 range. And sometimes, you know, you might wanna go anywhere from 90 brightness, which is gonna get you into the E5 section. But a lot of times you can stay in this 94 to, let's say, I haven't seen many things working that are lighter than F5. I found that F5 is about as light as you can go for any significant amount of contrast that the eye can still perceive. Now, if you did wanna go to like F7, F, I don't know F8, F9, FA, you could technically do that, but you can tell that it's really hard to perceive that difference. So F5 is about as light as I would go on any kind of gray color, even for the background. So if I reverse this, and I said, okay, you know what, I want F5 here, and I want this white on top, that could still work but it's very, very, very, very subtle. So you just have to be careful and mindful of what you're using these hex codes for, but this is more of a practical tip. So you can tell if I made a copy of both of these, and I added a tiny little inner border, black would obviously be a little too harsh unless you were kind of going for that very harsh look, which could be cool as well. But you can start off in like the CCC range and then kind of adjust from there. So CCC is pretty good, kind of a nice gray. This is at 80% darkness, and you can see if I just play with this and I bump it up to like 85, that could possibly still work, that would be D9. Sometimes I'll try a CCC, I'll try a DDD, because I know I'm going up in value. If I go to EEE, that's just not quite enough, that's too too subtle, too subtle, it's not gonna work, it's gonna end up looking blurry and muddy on this one. But actually, if you look at this one, that almost feels like a little bit of a drop shadow. And it's a little bit more distinguishable from the why only, so if I were doing this, I'd say, okay, well, the E almost works. What if I just knock it down one notch to like ED, I might even try, okay, that one's ED, let's see what happens if I go to like E5, which would be midway. So that could even work. Put E5 there, but it's not quite gonna work for this one. I don't think, E5 could work for both of these, that's getting closer to just enough. And then the other option here would be to put a drop shadow on this thing. But you're definitely gonna wanna, that's not gonna work. This is not a good drop shadow, you're gonna wanna make sure that your blur and your Y, you probably wanna go to like 24 or so, maybe 20, the Y being at four is okay, you could probably even increase it to eight, or leave it at four, let's see, and then you're gonna wanna play with your opacity. But you can tell the drop shadow is just not really gonna work on this gray module. And I'll cover a lot more about drop shadows in the style module. But that's just not gonna be a good option for a gray module. For a white module, however, because the white is sitting off of the background, this is gonna work okay. And so we can increase the axis, we could play around with the spread. We could really pump it up. Let's say we did 60, and let's do like eight on the axis there. So you can see that all of these are fairly viable options. And if we wanted to really get nitty gritty, which we do, we could go back to this background and say, okay, if F5 is the absolute lightest I wanna go, what if I just start knocking this down F4, F3, F2, F1, F0, maybe F0 is a little bit better. You can tell that this is incredibly, incredibly subtle. But these are the granular decisions that I would start to make as I'm laying this out. This is gonna look one way on your laptop, but it's also gonna be a lot different on your phone. So make sure that you're mirroring your designs to your phone if you're designing for mobile. So for homework, let's create a simple little chat app, whether it's a recreation of iOS Messages, or you look at Twitter DMs or Instagram DMs, and actually look at all of the different DM methods that you have access to, to see how they're handling the messages and the modules that are popped off. Some of them don't use modules at all. But for this particular homework, let's have a conversation between two different people. And maybe it's a full screen. So you'll have one module that is dedicated to the person on the left, one module dedicated to person on the right, and play around with the background color, have one where the modules are white and the background is gray, then reverse that where you have gray modules on a white background. And then maybe take it even further to where you're going a little bit more, you're really pushing some kind of floating module concept. Maybe you bring in some extra colors, maybe see what a full yellow background looks like, or a full color background. And maybe you start to introduce some drop shadows on an existing grayscale. So three different slightly versions of white and light gray. Maybe you try one with borders, one without, and get a feel for what looks the cleanest, what you kind of gravitate towards, and the subtle, subtle differences between those hex codes and the brightness values. So I can't wait to see what you come up with and good luck.


=== FILE: 4-10 dark ui.txt ===
------------------------------
﻿- All of the exact same principles and lessons apply to dark user interface. It is just a lot more difficult to get right. Because of the fact, if you go just a little bit too bright with any of your dividers or your colors, it's gonna show up, a lot more dramatically than it would if you were just using a regular light background. Dark mode for an app is often thought of as a feature, when it's really changing some hex codes around. So why can't you just, reverse out the images and make it look good? Well, let me ask you this: Does this image look good when I reverse out the colors like this? And the answer is 'no, it does not'. So, unless you want your interface to just not look that good, then you don't need to reverse out the colors. So purely reversing colors is not going to work. Another thing that is often not going to work is just using pure 100% black as your background for your app to be dark. There are some exceptions and if you look at the - the new iPhones with the OLED display. You can see that, like for example right here on the settings screen, you can see the dark black, 100% black background. It blends with the entire hardware of the phone, because these are actually pixels that are turned off. Instead of full red, full green, full blue, these OLED pixels are actually fully turned off. So it blends seamlessly with the actual hardware. And there's not actually that many instances, other than maybe a true OLED mobile phone, where full, full black is going to make sense. And it does make sense to a certain point, for these apps, but if you look at other apps, inside of dark mode iOS. You can still see there's lots of places where there are lighter grays and different variation of color, that - that just, it just stands out a lot more than some of the lighter UIs. So I'm gonna dig into one of my old projects, to just go over some of the hex code usage, some of the color usage, and really, really focus on how and why I'm using certain colors, and certain styles for dark mode. So, lets take a look at these screens right here. This is again, the MyMonero desktop app. I've got a sidebar here. Let me go to that background. Sidebar bass. That is another symbol. So, check this out: I've got one six one four one six Now I don't believe I used a very explicit hue saturation brightness format on this particular project. What I did, instead, for this particular project, was I, I ended up using a sequence of hex codes. So, if this is my darkest color, one six one four one six You can think of these values as - Remember this is red, this is green, this is blue, in hex code format. If I grab this inactive icon color that I'm using. This is four nine four seven four nine. So what I did on this particular, on - on these particular colors, I'm using this format, I'm removing some of the green in the hex code. So, and let me actually go monospace with this, because it will make it a little easier to see. So fully de saturated hex code of these would be four nine four nine four nine just like that. And this would be one six one six one six. So, lets take a look at the actual HSB value of this. So this is actually 0% hue, 0% saturation for both of these. So these are fully de saturated, and lets just bump these up right against each other here. All right, so, check this out: You can just barely see the difference here. This is kind of a rich, purple-ly gray. And this is kind of a rich dark, it's got a bit of a saturation to it. And, you know I covered a lot of this in the gray video, so this shouldn't come as a surprise that I'm not using a fully de saturated gray. This ends up becoming pretty critical in, in dark mode. If you are only using gray scale, it would have a little bit of, kind of reddish, kind of dry feeling to it. So a lot of times, I will add in a little bit of saturation to the hue and in this case, I end up in the 300 range for the hue. And almost accidentally, cause I'm pretty sure I did these with hex codes. But, my - my, the way I did it was just removing some of the green. And another good example of this is the Twitter UI. I think if you go to Twitter dot com, and you're looking at the display. You know the default - the default I think looks nice. I think you can totally get a good experience with the light design. And I, I actually love dark UI. I love dark UI. But I don't like dark UI when it's not done that well. And I don't think that this dim - this dim version to me, it just has too much saturation. And I think a lot of these lines, there, they kind of stand out a little bit more than they do on the light UI, because of the dark background. The same way that this light shines and you can see it a lot more easily with all the dark background. You're gonna be able to see these borders a lot more easily on this dark background. So you have to be so, so subtle with your color selection. And then if you go to the display and do 'lights out', this is - what they're doing here, is they're just bringing everything to black. Everything to full black. And this could work, if it's an OLED display. But even then it just feels like these borders are now all over the place. All I can see are these borders and these bright icons, and it - the text is, is it just feels like the contrast of the white on the black, is vibrating a lot harder and a lot more powerfully than the dark text on the white background. Because we're used to seeing that. We're used to seeing the display on a default. And typically speaking, you're gonna have a slightly better reading experience, if your dark text on a light background. And again, this is - it goes to personal preference. It goes back to what time of the day is it? Are you in bright sunlight? Or are you lying in bed? You know there's a lot of factors that play into this. And it even depends on how bright you have your phone setting. And so if - you have to kind of consider all of these. That's one reason why some sites or apps will go full black. But I just don't know if full black is just really, truly the answer here. All right, pardon the transition, but sometimes it's really difficult to film these videos, and not bleed into the next day. So, I'm coming at you from the next day, even though this is the same video. And it's gotten very cold, so I'm gonna stay bundled up. I don't wanna stay too long in the theory department of selecting colors and talking about how it can be difficult to design dark UI. What I really want to do is get into an actual example and show you some of my thought process, while I'm redesigning one of these dark UIs. So, we have here, these are just a couple of screenshots that I've taken from the Garmin running app. I know it's kinda hard to see here, with the extremely fast, sped up video, but I'm gonna post a full length video down below. It's gonna be about an hour and a half. And I highly encourage you to check that out, if you're interested to see all of the decision-making process, while I'm going through here. But at a very high level, I'm - I'm really trying to focus on the typography, and the layout, and the negative space, and visual hierarchy as the primary objective. To really clean it up. And these go into all of the dark colors. Tweaking the hues and everything. So I highly encourage you to check that out if you're interested to hear a, kind of a play by play decision-making process on that full length video. All right, so let's take a look at just kind of the high level changes that we made on this little redesign. You can see right off the bat, really, really clear that the colors, are much, much different. Even though it's very, very subtle. Look at the difference between this black, and this charcoal, and this light gray, and this border, and this big block of text, and this big block of border, and then these blue, there's just a ton going on, on this screen. There's a lot going on. And don't get me wrong, this screen, the original screen, it's not bad. But, I just, I can tell right off the bat, like look at the negative space here. And here. If anything, there should be, you know, less negative space between these two items. Than there would be around the top and the bottom. And that's, you know, that's what I did here, was just, really working on the negative space, and the typography. And, really working on the typography and the layout first, and getting that feeling right, and then coming in and adding color and adjusting color. Typically that is the process that I would use for really any layout, but especially for dark colors, dark UI. Making things dark, it's not gonna make it that awesome looking. So you really have to nail every aspect. And then get in and fine tune your colors. So even for this particular design. I wouldn't necessarily consider this full on done, good to go, ship it. This is where I might, I might get ready to pause here and say: 'Okay, this is, I've cleaned up the negative space, I've worked on some things, but there's still a few things I wanna tweak. Like maybe these numbers are too big. Maybe we do use a darker background for the top, or maybe we have custom icons instead of the standard ones.' Now that it's getting to a better spot, now I might think: 'Okay, well maybe, maybe these at 17 semi bold, those could be medium. Maybe these numbers are actually too big, maybe they should go down to 28.' I might start tweaking things like that. But I would also, I would also make a copy of this, before I started changing a lot of stuff. I might, you know, I might wanna show someone, like, this is what it looks like with the dividers. This is what it looks like without the dividers. You know? And without the dividers, maybe there's a little bit more negative space. And, and maybe there's one where, it's like, here's one without any background for any of this, and maybe we bring in the line. And there's different ways we can see how this works. Maybe, you know, it just kinda, it gives you a way to kind of explore and try to figure things out. And it just gives you a new baseline to work from. But I think once you get it to a point that, you feel like the typography and the layout is a little bit more locked in, that is when using the color selection methods, and really reducing the clutter of everything. Like look how cluttered this once looks, compared to this one. All it is, is a little bit of negative space around these things. Letting things breathe a little bit more. And removing these big, unnecessary dividers. Sometimes dividers like that might be necessary. But in this case, I think we really want to put the emphasis and work our visual hierarchy to put it on the actual data. Instead of the big - Could even play around with bringing in that secondary color as - These are my runs, maybe the personal records makes more sense to be in that color. Especially if, you know, they're kinda locked into that. And even these, actually, one thing I forgot here, on the D5, we should put that at 210 as well. And give that a tiny little bit of saturation. Maybe a little bit more brightness. That might be a little bit too much saturation for the main white color. I might be tempted to actually bring this down to just five, four or five maybe. Like right in there. But it just kinda, it puts everything in that same color space. But it's not quite as saturated as something like the Twitter dark mode. All right, long lesson this time. But I think it's worth recording these longer lessons, so you can kinda peak over my shoulder. And see the decision-making process as I'm doing it live. So, for your homework, for the dark UI. I'm gonna give you a couple of options here. I want you to take any one of your existing projects that you really were excited about and turn it into a dark mode, dark UI project. If you want something completely new, I'm gonna provide a few more screenshots of existing apps, like the Garmin, and few others down below. Choose any of those to redesign. Kind of the same way that I just did on this video. So you make your choice or you could do both of them. I just don't wanna overload you with too much work. But, really think about with dark UI, removing clutter, not too much visual contrast between white and black. Or any of the other elements. Try to get it almost as little contrast as possible between your structural colors and then make sure that your other colors are really activated where they need to be activated. So lots of options to choose from for your dark interface designs. You know, pick something that you're excited about. That you would be proud to show off. And, you know, if you need to spend a little more time on it, then that's totally fine. But give yourself an hour or two, to really dig into all the little details. And make sure that color, even thought it's a really important part, make sure that you're still nailing your typography and layout before you feel like you're done. And if you're having trouble, you know, ask for some feedback from the group but post your work and can't wait to see what you come up with.


=== FILE: 4-10 full garmin redesign.txt ===
------------------------------
﻿- [MDS] So we have here, these are just a couple of screenshots that I've taken from the Garmin running app, and I guess before I get started, I wanna point out, this is not a bad design. This is pretty standard. You got your icons, you've got some nice negative space. This is pretty standard iOS kinda thing, so this page in particular is not bad. It's pretty standard. This page is a little less standard, and overall, I mean it's a decent looking design, so what I wanna do is kinda dig in here and talk about their color choices, and what we could do to make it, really take it to the next level. So I'm just gonna select some of the colors that they've got here, so we've got this black, I'm gonna try and keep an eye on the hex codes here. So we've got zero C, zero C, which is not quite black, pretty close. We've got one A, one A here. Now we've got this lighter gray, which is two eight, and we've got this little guy here. Well, that's six C, and just kind of quickly cataloging some of these colors that they're using just for educational purposes. We've got eight eight eight right there. So you can kind of already see the range of grays that they're using for some of this stuff, and let's see what this border is here. This border is gonna be five five five, so a little bit darker. I'm actually gonna sort these by darkest to lightest, just in terms of the grays. More than likely, this border is also, this vertical border. So this is a part, I don't know until I really dig in, but this is a little concerning that they're using this color on the top, and this color, a much darker, a three six, three six, three six on the interior border. So let's grab all these, and then let's put this one here. It's not horrible, but just a touch concerning. Eight, eight eight, we've already got that color, so I'm just making sure that these aren't different. So let's see, eight, eight, eight is 53. This is gonna be, should be the same. Yeah, five, five, five. Two eight, two eight, do I already have that one. I don't believe, did I get that one? Okay, yeah, I did. This one just seems a little darker. Isn't it interesting that this color right here, this one, is the same color as this? But again, remember our color amount lesson, this is gonna appear much lighter on the dark UI than it appears here. Right here it almost seems black, but you can see if I drag this over here, that's the same hex code. Okay, just making sure. Okay, got zero, okay, so that one's already taken care of. You know, and I guess I could probably just put these in descending order like that, straighten these up a bit, tidy them up a bit, and that's probably all the colors they're using. Five eight, I think we already have that one. Five eight, right, no we don't, so that's a slightly different color, for that icon. So you can see there's already a pretty big mix of grays here. So we've got five, five, five, and five, eight, five eight, which is not quite that different. Sometimes you might need darker colors like that. Let's see, would this one be lighter or darker? I think that one's, should be a little lighter, yeah. Okay, and let's check these text areas down here. Okay, that's eight, and this should be eight as well. Double check the border, five, we have that, and let's go ahead and grab this blue color that they're using. Pretty standard to have the blue. Same color, probably same blue for all of this, would make sense. Oh, slightly different blue here. And it looks really really really close, so I don't think that could have been an accident. I'm just gonna delete it for now, 'cause I don't think we need two blues. Okay, so I've got all my colors that they are using here, and I'm really just grabbing these for reference, and really just to kind of document this, just to see what they're doing, and also just to show the range of colors that they are currently using, more of kind of a documentation. I wouldn't necessarily always do this if I was gonna do a redesign, but I'm gonna do it for now, and I'm just gonna go into one of these older projects and I'm going to grab some iOS components out of here, so I wanna grab this little UI bar out of this older project so I can pop that in. It's a white background, and I'm gonna go ahead and make this black for now, just a darker color. And I might as well grab, do I have a home indicator in here? No I do not. Sometimes I will try to go grab the official home indicator, but it's really just a rounded rectangle, so you can pretty quickly just draw a rectangle and then radius the edges. It's gonna be white. The only thing that you will typically find is that for the iOS style guide there is an official height of pixels that you need to leave there, and I can't remember exactly what it is. I bet it's like, I feel like it was like 28. I can't remember. I bet you we could do a quick Google search. Home bar iOS height. Height for home bar. Oh, I thought we could find that quickly. Home bar. Okay, it's probably in there, but I don't wanna take forever. Let's go into this one. Home indicator, size is 34 points, and they probably have it, yeah, okay, there you go, 34 points, there we go. So what we're gonna do, make this 34, and we will now bring this over here. I'm gonna make this go all the way across. Send it to the back, and remove the fill, group these things, make it a symbol, or component rather, and I'm gonna call this home indicator. Lotta times I'll have these set up from the very beginning, but it's pretty quick and easy to do this on the fly as well. So now I'm just gonna get some of these pieces in place. Running, and we're gonna go, we're gonna go black and white for now. First of all, just, you wanna get all your pieces in place. Not too worried about, they're probably more than likely using San Francisco Pro, but I'm gonna use Enter just because it's open source, and if you're on Windows you have more access to it, and it's also a really good font. So I'm also very quickly going to draw a rectangle the same size as this. It's gonna be 88. Okay, send that to the back, and I'm gonna remove the, actually, instead of removing the fill, I'm gonna give it the same fill, and now I'm going to use my line tool, actually my pen tool, to make three points. I'm gonna hold Shift to make sure this stays at a 45, and then make sure those get lined up, and I'm just gonna choose that blue color, move it over a little, and give it a stroke of, it looks like about three. We're gonna go, leave it at center, and I wanna go to the stroke option so I can get this rounded corner, and the rounded cap end, so sometimes that might be a little bit too large. Because I'm not trying to go for a full custom icon or anything, that's close enough. I don't need the exact iOS standard pure, exactly-doesn't-have-a-pixel-missing-at-all kind of arrow, I just need it to look kind of similar for now. Might measure it, see what this is from the edge. Looks like it's 10 pixels from the edge, so we could do 10. Sometimes I'll do eight. Sometimes I'll do 12. I'm probably gonna do 12, because I was just measuring from the tip of the color block on the other one, but you can see, if we go to outline mode, by hitting Command + Y, this is actually measuring 12 to the actual vector line, but because we have the center stroke, it's gonna measure it to the outer edge, and because we're using three pixels of stroke, we're gonna get about a 1.5 width right here. So if you could see if I drew a two pixel by two pixel block, you can tell that it's about one and a half on each side. So any time you've got an odd stroke amount, it's gonna give you half of that on each side, so we're looking at a pixel and a half on each side, which is not a big deal. No problem, just wanted to point that out. And let's vertically align these two. Sometimes I might bring this over just to make sure that's looking good. So now that that is designed, I'm gonna grab all of this stuff and group it and call it title bar. Doesn't really matter, I'm still just, I'm getting all of the elements in place. That's all I really need right now. So now we've got another background, about that size. I'm gonna go ahead and make this an even 260, and I'm gonna put it right here on the bottom, three four. Let's go ahead and make it the same color, might as well. Let's copy this. We're gonna go July. Let's make it kind of a little more current. We'll do January 2020, and we'll go with like a regular there. I would be really tempted to redesign the entire thing, but I don't wanna go too far with that. I need to bring this over here to make sure the size is pretty, it's a pretty good size. I might be a little large. It's about the same. It's a different font, so that's close enough. I'll put this back where it was, and let's go 16, from the top, just to be on an even four-point grid. One thing I don't love here, you got these two arrows, these two blue arrows are very much competing with one another. I know that this is gonna control the month, and this is gonna navigate backwards, but right now we're defining this blue arrow as navigating backwards, and you could argue, well hey Matt," you're also navigating backwards here, but this is navigating a month backwards. If this was a standalone pattern, I wouldn't mind it, and this is obviously a standalone pattern, so I definitely don't mind it here, but when you've got these two patterns together, it's kind of like ah, we're saying, you know what, blue arrow means navigate backwards, and right now this is not navigating. This is cycling through a calender, so even if we used an arrow, I don't know if, I definitely would not use a blue arrow down here, even if it was, if I hold Command and do like nudge, nudge left, nudge up, left up, left up, left up, and even if I made this, you know, two pixels, I'm just trying to eyeball a similar shape, that's just gonna, that, to me, that just conflicts too much, like that is, that's like putting two big buttons together that look exactly the same that do completely different things, so first of all that is definitely something I would change immediately. I would be tempted to, at the very least, put it as a gray arrow, just because that way at least it's a little bit more closely-related color-wise, with the month, and it doesn't create as much competition. Another thing I would probably do, I might be tempted to put this in the center here, and I don't know for sure, because that might conflict with some of this stuff over here. Yeah, I'm not sure here. I would probably just make this swipeable. There's different things you could do, but I don't know exactly what I would land on finally, but I do know that I would not do the blue arrow here, because it just seems like it's too much. And a lot of times, what I'll do with, even this thing, I didn't do it with this one, but with a little arrow like that, I'd probably put it in like a 16 by 16 container, and center it inside of that container, and if I remember our mathematical and optical centering, it is gonna make it seem like this is a little further to the right even though it measures mathematically all the way around, we're gonna probably wanna cheat it to the left just a little, to make it actually look horizontally centered, so I'm gonna go ahead and create a group out of that. Might as well go ahead and do a component, and then I'm gonna remove the fill off of that background. So now I've got a little component that I can move around and get little, slightly more accurate measurements with. Looks like I moved my background in the process, so we'll put that back in place. I guess one thing you, sometimes you might wanna do is leave a fill on the actual background, and maybe you make it the same. That way it's sometimes easier to grab the, I guess I'm not clicking it enough. I think I had this selected and then I would click and try to move it around, but it was still the background selected, so apparently I need to click and then drag it around, and that will be a little bit better. All right, here we go, 20 and 20. Might need to go 22. This is one of those times where I'm willing to trade off a 17-point margin, instead of a 16-point margin, because I'm kinda basing it off of this text group, and this is gonna be at 16, and this is kinda measured aligned to the bottom of that one, because this looks horizontally centered, whereas one pixel up does not look vertically centered, so I'm gonna actually cheat here, use 17 on the top, even though it's not on the four-point grid, for the sake of visual alignment, and also I don't even know if I'm gonna keep this here forever, so I'm just gonna hit Shift + H to reverse that horizontally, put that at 20 and 20. There's other things that we could do here. We could standardize every month with a three-letter month, so we could do Jan, Feb, March. That way everything would have a pretty kind of similar length and pattern. If we did January, February, they would all be varying lengths, so if we had September, it would be a little longer. November, it would be longer as well. If I can spell, November, so just a little bit longer, and that would sometimes affect the, if you are positioning these arrows off of the width of the text, that would go, you wouldn't necessarily want these arrows moving around if you were cycling through the months, so you would either choose to fix the width. Why does that look up higher? For some reason that looks up higher to me. 17 and 17. So you would either fix the width of where these arrows were, or you would fix the width and still do it like that, so there's consistent negative space between it every time you cycle through. It'd just make it a little bit cleaner. And that's one thing that I would probably do, is whether, you have plenty of room to do the full-month name, but I would go ahead and I'll try these out at like, I'm just guessing, 24 for now, just to see if that would work. I might need to do 32 to anticipate longer names, and a lot of times what I would do is go ahead and think, okay, what is the longest, September, October, I would imagine September is probably one of the longer month names. I don't know 100% without double-checking, but we'll just do September for now because I wanna just move along. So let's actually check the contrast here. Just assuming we don't change the background color, assuming everything stays roughly the same, so we've got a 4.0 contrast. A lot of times with icons themselves there's not a lot of, there's not specific requirements around icons. It's more about labels and text, so a lot of times I will go down as low as I can go and still hit A, double A, large, so 626262 on a one-five background. That will make it where it's not commanding too much attention, but it's still contrasting enough to actually be seen, and we have the double A passing 888. Whoops, let's pick the background. I've got 888, so that's double A, so we're good there, and the icons, I'm okay with putting them at double a large, for now. We might decide later that maybe, you know what it needs, a little bit more contrast for people to see it, but just for now, for the sake of just moving along, we're gonna move that. Okay, so let me very quickly, as quickly as possible, put in the rest of these X'ed snippets here. So we've got 0.7. We'll call that 28. White. Average daily in miles. This is pretty tiny right here. I'm not sure if we wanna go larger. Usually like 13, 15, and 17 would be your go-to iOS sizes. That's not to say that we couldn't change it up a bit, but that's kind of like where you would wanna start, with your three sizes. I almost feel like we could bump these up a little, just for fun, and make sure these are center-aligned, and vertically align them. Now, what we could try to create a component with this because all these are roughly the same, but I'm not gonna worry about that right now. I'm just gonna duplicate it. I thought I centered those, but I guess I didn't. 22.5, it'll be easy enough for us to change these later if we need to, and then if we ultimately decide that we're ready to lock it in, we can pretty easily create a component and redo this, but because we're just starting and I don't wanna kind of component myself into a corner, which is something that easily happens if you try to get too organized too fast, I just want to do this quickly without worrying about the components. Okay, so let's line these up a little bit better. One thing I would do in this particular, remember everything is a box, so if everything is a box, that means that we have four boxes here, and you can see that they've got this in an actual box, so let's go ahead and do 375 divided by two, which will give us 187.5, so what I'm gonna do is I'm gonna make these transparent at like 20%, and I'm gonna go 187 there, and 187 on this one, and then that'll just give us a simple little one-pixel divider in-between these two. And let's make these a little bit smaller. We'll do 80 for now, and all I'm gonna do is just use that as an anchor to align this horizontally, and this is where a component would come in handy, but I can also just quickly grab all of these and say okay, let's put these at a zero border. That would be 10, 20, so I think I'm gonna keep these at probably a zero. Because there's built in line height here, I'll keep these at a zero border for now, just to see how that feels, and it might be too much, but we're not sure, so let's just do it. So we'll do 16 on the top, and let's do, okay, I guess I need to put these underneath. So we'll do 16 on the top, and because of our big text box, we're gonna get an extra, what is that, 10 pixels of margin in there, and this one's a lot smaller, so we don't have that negative space on the top or the bottom, so in this particular instance, we need to kind of visually imagine the same amount of margin here and here, so the top might measure 16, but the bottom might need to measure 24 to actually look right, and that looks close enough for now, and so what I'm gonna do is go ahead and move those down, and I'm gonna move these up, make that 16, do the same exact thing. Again, components would have been faster, but I don't mind doing a few manual adjustments. Those weren't quite right-aligned. I had them over. I could tell that these two were over a pixel each, so just right-align those really quickly. Okay, so I want to, right now it's feeling like maybe there is a little too much negative space on the bottom, so I'm gonna move these up to, let's do 20. We'll do 20, and them I'm actually gonna bump these up, maybe like one, two, and I'm just kind of firing from the hip here, just trying to see what looks good. It's very likely that I'll come back and change this all. And also, I'm gonna go ahead and just group these. I'm gonna select the background, the big number, and the text label, and group them all. That way now I can just grab them as individual things, and I'm gonna hold Command and select the backgrounds of these and just hit zero, to make the, sometimes if you hit zero it goes to 100%, but I'm gonna hit zero twice to make it go to 0%. That way I have this as a little mini component, but now I've removed the background from each one of those. Okay, so just kinda looking at things, before I start making too many decisions, let's go ahead and have view personal records. Let's go ahead and do running activities, and we'll do Breckenridge running. Looks like I went on a few runs when I was in Breckenridge. And see, I don't know what they've got going on here, but they obviously did not account for lowercase descenders, like in the lowercase G, and I'm gonna go ahead and include that because it is something that can be tricky. Maybe they only tested with, well, it seems like you would have caught that. Athens Running, if running is gonna be on the end of a lot of these different activities, they probably shoulda caught that, so I'm gonna grab this exact same font size here for the seven, 25, 19, 11:33 AM, and there is so much room over here I don't know if we really need to, I don't know if we really need three line breaks. We have a lot of horizontal space, so I'm just gonna go ahead and do the time here, and I'm gonna end up, I'm gonna put these in different text blocks, because, I've said this before but it's easier to manipulate and design and move things around when they're on separate text paths. I guess we can do 20. We'll make this September just so it's a little more believable. That would be, what is that, nine, no, is that August, September. Let's do like September 20th, and then the time would be 11:33, so I'm gonna be a little bit more conservative with my color blue for now, and I'm gonna make these the white color. So it almost seems like I could almost see this being, like, when did you go running, oh, it was on the 20th, so let's put that there. The 11:33, I'm not sure. I feel like the miles, the amount of miles you ran is a little more important, so I'm gonna put that in the first spot, and I'm gonna put the time close to the miles. They have the time and the miles together. It could be argued as to which one of these should go where, and we can make decisions on that later, and I might end up changing this entire module. I just, I'm gonna get all the pieces in place, and just see how this starts coming together. So let's go ahead and group that, and let's go ahead and grab one of these little arrow components right here, and I'm gonna click on this title so I get activated into this group, and I'm gonna pace that in place, and I will temporarily just move this stuff over. I wanna make sure I vertically align this little arrow. I want it to be aligned with this lowercase X height. If I align it with the cap height, or the ascenders on the lowercase I, that would end up putting it, if I aligned it with the capital letters, I'd need to put it like right in here, and I if I zoom out, that would just kinda look shifted, like it's a little too high. However, if I was gonna go with title, all caps, that would actually look pretty good. Actually, it needs to go down maybe one pixel. So that would be aligned with all caps, but if I'm gonna go title case, like I did, that might need to come down one or two pixels. It doesn't look horrible right where it is, but I just think it looks better where you come down a pixel, because it just kind of has this lowercase feel. And even if we ended up scaling this, then it would still work, because it's like right in the center of the, even if we ended up scaling this it would still work because it's kinda splitting the difference between the uppercase R and the lowercase descender, so the X height right in here is gonna be kinda the bread and butter for aligning things. And also, I wouldn't scale it like that. I would probably draw a new icon that was like 24 by 24. But for now, let's just use that one. I'll set these at 20 points from the edge, just for now. So let's see what we got here. These are 15. Let's go ahead and bump this up to 17, and "view personal records" should probably have a similar style. Might even get that same arrow. Just make sure I get this nice and vertically aligned as well. You can almost put it on a half pixel, because it's like, is it better here or is it better here? Sometimes you could, you could do 19.5, and that would look a little bit better. Sometimes you have to do that. Okay, somehow that arrow did not get paste into that group, so I'm just gonna move it down there. And let's put this at like 16 from the arrow's edge, just for now. This is not fully working yet, but I'm just getting all the ingredients on the page before I start making too many decisions like that. And so I'm gonna quickly draw these little arrow things so let's go in here and round these edges on the top only. Escape out of it, and choose that color. And let's go ahead and just duplicate it, and kinda rough in, whoops. I'm gonna kinda rough in where these are. Not too worried about the exact position right now, because we're just kind of getting things in place. Okay, so I cut those, and I paste 'em here. Bring 'em to the front. And maybe I'll knock these up a bit. Okay, let's see, okay, so they've got these mini headers here, totals and running activities. Hmm, so maybe we try these at 13, and we try all caps. That way they're a little bit more subtitle. Maybe they command a little bit more. Maybe we can do this with, with the kind of font weight and the letter forms versus adding a big block of visual separation. I don't know if it's that important to really really separate this information, because it's not a ton of information. So I'm gonna start trying to tighten up the spacing here. We'll do 20 on that edge. I'll leave it at 20 on the top edge for now, and then I'm gonna put these at, just gonna move them up. I'm looking at the spacing between totals, and the top of the zero, and then the spacing like right in here doesn't have to be exactly the same mathematically. I just wanted to have a nice even negative space in there. And we might find we wanna delete these backgrounds out, and maybe we wanna put these up on their own. If we're not using these dividers, then we might not need those backgrounds. I'll leave 'em in for now, just so we have it, but that's what I'm gonna do. Okay, and few personal records. Hmm. This feels like it's just sticking out, like an anomaly. View personal records." If I'm running and I'm looking at the details of my runs, this is like, okay, I'm looking at July. I wanna see what I did this month, so this is like an average daily mile, and kind of pitiful. I only ran a few times in July last year. View personal records. I mean, it's probably an important link, but it feels weird right here. I'm just trying to, I'm wondering if there's a better place for it. And sometimes, I don't know if, it doesn't say view, it doesn't say view Breckenridge running, it just says Breckenridge running. It's just the title of the thing, so sometimes it's worth putting like a verb on the action, but in this case, maybe, maybe, maybe we put it in line with totals, because we kinda wanna see, what are the personal records for all of my totals? So maybe we put this in a 15 point font, and we just say personal records, and we kinda use this box right here as a way to center, didn't mean to screenshot, and again, I don't know if this is gonna work right now. I'm just experimenting. Gonna see how this feels over here. Personal records, maybe it says view records. Really, what I'm trying to do is get this down to a smaller label. Command + Option write, personal records, maybe this one, maybe since this one's going somewhere else, we wanna bring in this blue, and another thing I wanna talk about with this blue, I really don't, I don't think this blue border is doing any favors for the design. It almost feels like it's a loading bar. I just think it's kind of, it's taking a little bit of the meaning out of the color blue, so I am personally totally fine with getting rid of that. I wanna align the baseline on this. I'm trying 13 point font. I don't know if that's gonna be too small. Maybe we'll go semi-bold with that. I haven't really settled on the exact weights that I'm gonna use yet, so far I'm using medium, and bold. Actually, I'm gonna change that to semi-bold, so I'm gonna experiment with using semi-bold and medium, and then now we can probably get rid of this because we've removed the view personal records. We've put it up here with the totals, and again, that is a temporary thing. We might change it later, but now I want to see, so these are all my activities, all my running activities, so let's keep this at a minimum of 20. Again, I'm looking at negative space between here and here, and I know we haven't really fully gotten to the dark UI color stuff yet, but it's important that we get this layout stuff down, because ultimately the typography and the layout are really the two most important things. I mentioned the Twitter dark mode earlier, and the typography and layout on the Twitter, it looks pretty great, but the color is where it starts to not be quite as great, so even still, if your color is amazing but your layout and your typography is not spot on, then you might have a problem. So we really have to nail down the typography and the layout first, before we do color, and sometimes before we even experiment with other typefaces. That's why, a lot of times, when I do wire frames, I consider them more like, I consider the wire frames more like typography and layout designs stripped of custom font choices and stripped of color choices. 'Cause sometimes it's helpful to just work on those two things at once. All right, so you can see now I'm readjusting the vertical of this arrow because now I have a little bit more of like a, even though it's numbers, it's more an all-caps situation, so I want this to be aligned vertically with that now, versus this. But I definitely wanna prioritize the baseline alignment of these two text items, and right now this is not doing it for me, so I might need to rethink this. I'm almost wondering, almost wondering if I should go white with this, because these seem like a little bit more important, and all of this seems a little more important than the other stuff, so I'm just gonna move this around and see what it feels like. Breckenridge running, hmm. Maybe we'll try semi-bold with the title. So we could do like a pattern where we do semi-bold white, and we're kinda varying the texture here. So what if we did that? I don't know if this is gonna work, but it's worth a shot. Just kinda add some typography interest here, almost like calling out this stuff. 920, we could even see what does this look like if we say Sep 20, 2020. That might be too much, 'cause we're already saying September 2020 at the top. And I'm almost thinking we could consider not putting the year, because we say the year at the top, and that would save us a little bit, so we could consider doing 920, or September 20th. We could even leave it at 920. I just, this is more of a formatting preference, but I don't know if I actually love the nine slash 20. I almost prefer to see September 20th, maybe something like that. This would be something good to discuss with the clients, or the brand team. You almost wanna standardize the way that you would display days of the month and days of the week, and month, like are you gonna do a period or no period? Are you gonna do, are you gonna do something like 9/20/20 and call it a day? Are you really gonna set a standard for how you're gonna do this? Because in my opinion, September 20th, it just reads a little better than 9/20/20 with these. This just seems like a quick way to do it and doesn't really seem that thought out. I don't know if this is right yet. Just stuff that I'm thinking about as I'm trying to lay this out. Let's go ahead and make these 15. I'm gonna go with eight on the left and right of this. So this is looking a little bit better. I'm not 100% sure how I should fully handle this. I'm gonna go with say 36 points of padding here. That would be like eight times three. That would give us a little bit of negative space in here. This is probably something I'm gonna come back to, so I am definitely gonna go ahead and create a component out of this and just call this run, because I know I'm gonna duplicate this, and one thing I wanna do is let's just go ahead and make this bigger, and temporarily hide our home indicator. Oh, let's just hide that, and obviously, this is not gonna work, 'cause it's just too crunched together, so we really need to figure out a good spacing system for this, and a lot of times you need to design list items like this with your kind of spacing system in mind, and already I don't love this layout, so I'm just kinda wondering, should we do something like this to balance it out? Maybe this should be larger. Let's see, that's 17, these are 15. We could consider going down to 13 with that, and let's bring these up to four. That feels a little better. I'm kinda liking that. But now we need to move this over. Be eight again, and move that over to be eight. And we might decide, you know what, maybe 12 looks better. Maybe 12 points of spacing looks a little better. It actually looks a little more even. If you think about negative space flowing through here, let's see if we can get our pencil tool here. So we imagine, can I change the color of my pencil? We're just kind of imagining water flowing through here in these different little areas. So imagine where I've got these yellow lines. This is, you know, think about your negative space as this flowing dynamic thing, and I wanna make sure it's flowing naturally through all of the individual little nooks and crannies. So I'm looking at, would it get bottle-necked in here, would it flow nicely all the way through? So I'm looking at all of this as a big composition, on a tiny micro level, and then I'm looking at, you know, how is it gonna work through beneath running activities and around the individual objects, and maybe there needs to be a little bit larger or a little bit smaller of breathing area. You know, I will get in here and adjust this probably 20 times before I feel like it's in a good spot. You just, you're gonna move on, you're gonna move around, and so right now if I look at this, this looks a little bit too open and airy compared to these, so I'm almost wondering like, maybe I really crank up the negative space here, and make it feel like this section up here is a lot more related just in terms of the full layout. So even doing that feels a little bit better. There's no reason we have to cram all this stuff in here. Really, the only thing we need to do is we just need to show that there are some running activities down here that we can swipe to. We're not, no one's gonna arrest us for squeezing in things too tight or making them a little bit longer. If I were to put running activities like all the way down though here and you couldn't see it, and you had your home indicator showing, that might be an issue. If these were too big and these were all pulled down and you couldn't even see the stuff, that would be a problem. But as long as we can hint and use this affordance, that there is some stuff down here, as long as we're starting it at least right in here, we'll probably be pretty good, 'cause it's very easy for anyone to scroll through a web, it's easy for anyone to just scroll. I mean, that's what we do all day long on our phones. We scroll, scroll, scroll. It's a feed, so it's, doing this with a thumb is very natural and that's not a problem to have people scroll. So I'm gonna hide that temporarily again, and I'm really forcing myself to try to not use dividers here, because dividers, look at the difference between this screen and this screen already. There is a lot, you've got these big bars, and these big borders, this giant blue. What I've done is really strip all of that out, and I could actually probably change the background to what they have to make it look a little more similar, and I don't mind that at all. But I'm not even done yet, but you can almost start to see how this looks a little cleaner. All I'm doing, haven't even changed the colors, and color is only a portion of the dark user interface, but you really need to be mindful of all of these little dividers, and so if I was gonna put in some dividers, let's actually put some in just for reference. So let's start off making them in the exact same color. So let's make another one like right in here. Bring that all the way over. Same exact color. Need to brighten this up a bit for myself, so I can see what I'm doing here. So I would be tempted to really play with, a lot of times what I'll do is I'll put it at the exact same hex-code. Let's just call these divider lines. And then what I would do from here is I would just start to gently nudge this up one pixel at a time, to see what is the absolute lightest gray that I can use and I can actually still see the divider line, and the contrast on this is gonna be very very low, and you don't really need to check your contrast on your borders. It's not really that important. You can see, if you can see that, it's like a 1.0 contrast. So I just did that for reference. You don't need to check your contrast on little dividers, unless it's a very interactive piece of your button or something like that. But also, I don't know if we need this. I'm not sure if we even need that, so one other thing we could do, we could get rid of these, and we could also go back to our background shapes, and we could put an inside stroke on these. We've gotta bring up our fill so they actually show up. And then what I would do here is I would move this over so they kind of overlap. I'm making them 188, and then I'm gonna move, I'm just gonna move them so they overlap by one pixel. That way only one of them shows up. So there would be, if we were to butt them right up against each other it would look like a two-pixel border, but I'm gonna overlap them by one. That way only one of the borders shows up. We don't really need a border right here, so I would be tempted to either move this over and make it 189 or I might leave it and just, yeah, I don't really want a border touching the edge, so here's what I'm gonna do, grab both of these, move it to the left one time, and then hold Command and hit right one time, so that way we don't get this unnecessary left border, and then for these two , and then for these two I'm just gonna Command, right-nudge, so the border here goes away. And sometimes when you're working with dark UI, it might be helpful to make the background black, just so there's not too much unnecessary white contrast, especially when you're hiding the background. You can imagine if you have a black bevel on our phone, and that kinda also kinda reminds you of why the native dark mode on iOS has this black, 'cause it kind of blends seamlessly with the hardware. But you can see this looks kind of harsh, these white letters are really vibrating. This is 21.00 contrast, so full black, full white, 21, it does not get any more contrasty than that. And that's kind of hard to see sometimes. It almost makes you, it looks like a light shining in your face, and it's kind of a more accentuated effect of what's happening with these dark borders here. I mean they're dark borders but they appear very light against the background, so when we bring in this color, it starts to soften the 21 contrast score. It at least brings it down to 19. But another thing that you can do, let's see what we can get away with and still be triple A, by bringing this color down. It's gotta be 7.0 or higher to still be triple A, so we've got 9D9D9D. So let's go ahead and make these white colors 9D to tone that all down, and that might be too much. These might not stand off enough, but I'm gonna go ahead and try it on this one as well, 9D. So I think that knocks it back too much. It is nice and readable, but I feel like it's all a little too flat, but maybe we can just adjust up slightly from here and see what is a nice-looking contrast, where it still looks like a nice standout-ish color, but it's not full white necessarily. Maybe it's this D5 color, so let's go in and select these and make it all D5, see how that looks. D5, Enter, so now you can see this is starting, this is starting to work. It's a smaller contrast. If this was full white and we were using black, or like a charcoal 222 or 333, it's like your standard go-to, but when you're working on dark mode, you really have to consider the contrast a little bit more. 'Lotta times the white is just gonna be too, too bright, and so I would be tempted to go with something like this D5 that we just chose. So, and I might just sit with that for a little bit. Let's see how that feels after moving some, let's see how that feels after moving some things around, and you can see now, now that we have totals and personal records on the same line, especially with this line across the top. That's starting to feel like a nice balance. One thing I should probably go ahead and do, I should have already done this, let's bring in these dots here. It looks like an eight and a four, but if I just go, I'm just gonna go four for now and go one, two, so that's two. If I hold Command + D, one, two, three, four, five, six, seven, eight, nine, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, one, two, three, four, five, six, seven, eight, nine, 10, 31, I don't know if that's how many dots there needs to be, but that's what I'm gonna start with, and now I can, if I hit tidy up here, it's gonna move the left one all the way over there, but I want this to be distributed horizontally instead, so let's group that and cut it, and then paste it to this layout here. And honestly, I don't love the way these bottom edges are cut off, so I am going to go ahead and make this entire thing rounded. I don't know if adding the cut-off edge as the base, I don't know if that really does anything. And you know, I'm also tempted to see, what does this look like if the background is all the same? Sometimes it can really clean things up, and I think I might be able to choose this entire, so maybe I use the same border here as these tiny little dots. That might be, that's probably a little bit too subdued, but maybe not, I don't know. I'm gonna just play around with choosing a couple different colors here. That feels too bright. And so this is where you could imagine that your grays would start to get a little bit messed up. We're using a gray here, we're using 888, D55, 888, and then for here we're using 255. We've got 888, we got 6262, so probably, you know, at a certain point, we're gonna need to start making some gray choices and setting some constraints on ourselves, but if we say these are the exact colors that we're going to use, then we can start to hinder our creativity. Maybe we really do need something in the fours for these little dots, or maybe it needs to be like 2F or in the threes. Maybe we need 3636 for these dots. And then maybe we can try 36 for these borders. But then that might be too much for the borders but just enough for the dot, so we definitely don't want to put ourselves in a corner yet. We're not quite ready to make final decisions on these. And I'm gonna see, okay, I can go 7E for these subtitles and still pass double A, so let's go a little darker with those. And let's go ahead and make these a little darker as well, these here, so instead of sticking with our 888, we're gonna do 7E. Actually, I don't need to choose that, because it's a master component. 7E. I still don't love the way this arrow, something is not working fully how I want it to right here. Maybe there's not a time of day on this. Maybe that's gone, and maybe this is what we do. I'm not sure yet, you know, 'cause it doesn't, you don't necessarily, just because it's there doesn't mean you have to have it there. Think about do I really really care at a high-level glance, do I really care if I see the exact time and day? Or would I be totally fine with only seeing what day that was? Would I be fine seeing what day this was? And then having to tap into the detailed view to see what time it was? I don't know, I'm not sure yet. Not sure yet, but this is something that I'm wondering about. Maybe we bring in one of these little dots as a divider to kinda tighten this up a bit. Maybe that's eight. We might need to go more than that, just a little way to add some interest. Just trying to mix it up a bit. Just experimenting. I might, I'm honestly, I don't know what to do yet. I'm just gonna keep playing with it until it feels like it works. Maybe we do need divider lines. Maybe we use this two five color for a small divider line. Two five, and what I'm gonna do is I'm wanna make sure that this is 20, this is 20, and, there's a couple different ways you could do it. You could do it all the way across, or you could have 20-pixel margin, and then a 20-pixel margin, both ways. Both of these could work. I'm trying to think about the way this would look if you were scrolling these lines. My tendency would be to go all the way to the right. I kind of like the way these are attached to the right when iOS, for that iOS standard. There's part of me that just appreciates the way that looks. I just pasted this into the component, and just seeing how this looks here, I'm gonna expand the component to include that. That way that'll give us a little bit more of a realistic version, but so now that I've put this on the bottom and I've got 20 points of space down here, I'm going to go ahead and I'm gonna go ahead and grab the component itself and I'm gonna hold Command, and I wanna add a little bit of room to the top of this component. And sometimes that can be tricky, so another really kind of an easier way to do this is to draw a rectangle, send it to the back, and let's go ahead and select this component again, constrain the bounds like we had, and then I'm gonna measure, okay, so I got 16 on top, we got roughly 20 on the bottom. If I make this the same background, but a little bit lighter, that'll let us see if that's a decent size or not for that, you know, I want this to look like a tappable thing. Four, that's 20, this is 16. Okay, so there's a couple things we could do here. First thing I wanna try, I am going to paste this in, send it to the back, put it back kind of in its proper spot, so 16 on top, and let's call this background, and let's hide that line that we put in there for just a second, and now we'll expand our component shape, and then tidy this back up. So another thing we could do is we could try to see like what is this like if we have maybe these runs are sitting above the surface because they're tappable. Instead of having, see look right now we've got these big titles. We're treating these totals and running activities as like big strong blocks of dividers, and they're almost commanding more attention. They're raising to the foreground a little bit more, but what if we applied that same technique to the actual tappable items? Right now, these are all tappable, but these titles almost have more weight, and they're trying to compensate for the lack of tappability with adding the color blue, but to me the color blue kinda loses its value when you put it in that context, and you could even consider putting this down here. I'm gonna leave that up there for now, but something I might consider is adding this color to the background here, and maybe this is 25, and you could imagine, if we went with like a two-pixel margin, that would have a little bit different of a look than, and you could also duplicate this, and make this a little bit longer, so you can have some tests, so okay this is what it looks like with two, this is what it looks like with four. If you'll remember back to my sienna sampler example, I experimented a lot with one, two, three, four pixels of spacing, and sometimes that might be an aesthetic thing. Maybe the concept is we're using four pixels of padding around everything, and that's more of a concept that we're using. I'd have to adjust my resizing constraints. But that would be another way to look at it. For now I'm just gonna use a simple one-pixel divider, and I'm also gonna experiment with this background color, like how light can I possibly get this color to where the divider background is still showing up, and I might have already been at the lightness. So this is starting to work okay. Starting to work fairly well. I don't mind this as much. I definitely feel like this is much cleaner than this right here, so I'm liking the way this is starting to work. I don't know if this is how it will finish or not, but it's starting to work okay. And honestly, I don't know if these dots tell me that much. I know that's probably based on the days but it also feels a little busy, so I'd almost be tempted to do, I'd almost be tempted to see what does this look like if I've got, there's week one, week two, week three, and then week four. Let's say some of them might be on a half week, so I don't know, maybe, and this would depend on, you know, talk to the developer and see what can we show here? Should we show every day? I don't know if that necessarily works. It might be better with the smaller dots. I'm just not sure yet. Just trying to think here. Probably do wanna put our dates in. 71, 731, but you know, it's like do you even need it. Do you even really need to say this is the first and this is the 31st? Because you're saying July right here, so I know this is the first of the month, and I know this is the end of the month, so I'm not even sure if you actually need those days or not. I do think it's helpful to have the miles, because that's actually, you know, what you're tracking against, so I would be tempted to bring one of these up here, and do zero. I would actually probably wanna align the zero up with the T to start with, just to see how that feels. Probably, that might mean we move our dots in a bit, and then I would try, let's see. That would be one, two, three, four, five, six. So let's say that our five is here. We'd wanna space these out vertically. We'd have five, four, three. Okay. Maybe we don't have the big dots. Maybe it's just small dots. Something like that could work. You could even experiment with the width of the days. If you needed to fill 30 bars, so if you had 30 slots to fill across this much space, let's say you've got 44 on this side and 44 on this side, we'd almost do like a 30 pixel grid here. Or excuse me, a grid that's divided by 30, so we've got this 44 pixels on each side of this potential graph, and then we've got 287, so if we did 287 divided by 30, we'd get 9.5, so if we did 9.5 pixels by 9.5 pixels we'd have every day of the month. We'd probably need to 31 actually, so 9.25 would be as big as we could go, but that wouldn't even give us a divider, so nine is probably as big as you could go and still fit 31. We could even experiment with putting these at eight pixels and having a little bit smaller of a divider. You'd really have to put 30 all together, so let's Command, select all of this and hit Command + G, and then we have all of this in a group. If we wanted to run a quick test, we could put this one, remember, at our 44 position, and then we would just do, okay, that's two, three, four, five, six, seven, eight, nine, 10. We've got 10, and now we could do 20, 30, and this would be 31. We've got 31 objects selected here, so could we do a two-pixel margin between them all? And we definitely could, but that means something's gotta be the kinda foundational thing that sets the precedent for how wide everything is, so if we did nine and one, we could get 33 pixels on each side, which is a little bit of a weird margin. 18 and 18 I like better, but then you still, you really need some space, so I'd almost be tempted to put these back at eight, and then put this at one, and then just kinda group these and center them inside of here. That way we've got 49 and 48. There's not really a lot we can do, and we'll know that on some months it might be 30, some months it might be 31, but this would give us some room to grow here, and then I might wanna redo my dots to match up with 31 actual days. Then we have a little bit more of a true reality of all of the days. Move this down. I would either bottom-line these dots with the zero or I would kinda center-line them. Let's see how that looks for now. Do four, we don't want it to be too far away from the dot, because this is the starting point for zero miles. And then we could say, okay, well these, I'm just kinda randomly clicking a few that I can make higher, and then I'm gonna randomly click a few ones to make smaller. This would be like really active, really really active, and then this would be like quasi-active. So I might delete this, and then make a copy of this one, bring it back in. Get that at zero. And I might, you know, I might have a couple different versions of this. I might take one out. Maybe I leave this one like that, and then the other one, maybe I have a different one where it's like, you know, I need to make sure this works. If somebody's barely running, probably also need another version that would have no runs. What does that look like? You just leave it empty. And it actually looks like they have a little bit of gradient here that I did not do. I actually like the gradient. I'm gonna add that in. So it goes a little lighter at the top and a little darker at the bottom. Pretty nice-looking gradient. So now that I've got this gradient I'm gonna hit Command + Option + C, and then I'm gonna Command, select all of this, deselect the background by holding Shift and Command, Command + Option + V to paste this gradient. It does paste the corner radius on that square, so I'm just gonna go ahead and bump that out until it's fully rounded, and then I'm gonna do the same thing on this, so Command, select all the stuff, Command + Shift, select the background, Command + Option + V, and then increase that. So that's kinda cool. I like that. The gradients might not quite be accurate. You might actually want the gradient to be across all of the shapes, and it only changes color as it gets higher. So the way you would wanna do that, you would actually have to unionize all of these, and then re-paste the gradient. That way you've got one gradient that affects them all. And you could even experiment with like, what if these were a little, what if we changed the hue to 20 there? And the hue was, or maybe that stays at 40 and this hue is at 30. Sometimes I'll go and I'll make these even numbers just 'cause it feels like the right thing to do. 70, 90, maybe that's 100. That could be too much, but it also could be, it could also be great. It seems like these gradients are maybe a little bit better than these others that we had. Pasting those on again. See how these are really, these are really popping off the background because it's using a little bit more of a saturation. It could be too much, but it also could work. Another thing that I would play with a little bit. And then if we really wanted to kinda go all out, I might make a copy of this, and I might start changing, change the background, so let's check out this blue. This blue, this is probably a brand color, but let's say, let's call it, let's say 200, all right, we'll do 210, I'm gonna bump this up to 70, and I'll bump up the brightness to 100. We don't want the saturation to be fully saturated, because on dark colors the saturation too high can almost start to look muddy. Usually if you bring it down a little to the 70, 60 range, it'll pop off a little bit better. So I'm gonna do an even 210, 70, 100 here. And then we'll use that as our new color for blue. And we'll remember, these backgrounds, I'm gonna go to HSB and we'll do 210. That way we're in the same exact color space, but now let's just see what happens if we add 10 increments of saturation, and let's just increase the background and put that at 210, and we'll increase that 10 increments of saturation. I don't know if this is what, exactly what we need to do, but I'm just gonna do this as an experiment. So 210, and it's already at 15 brightness. What happens if we go 10 there? And we could just, I guess we'll just copy and paste, and we can't forget to do our gray colors as well. Let's grab this one, 888. See, these are all fully desaturated, and see how this fully desaturated gray starts to look a little weird on this blue background? I mean, it is a dark background, but it doesn't quit go with it, so gonna go 210, bump it up to 10, and you can play with the difference of what these are. I'm gonna go 210, 1050, and let's check this hex code on the new background. This background is now, okay, so that's double A plus. We probably want this a little bit darker. We want this a little darker. Or excuse me, we want the text a little bit lighter. We want it in the 7C or darker range, or, excuse me, lighter range, because we want this to be double A, so we're gonna bump that up. Five, six, seven, eight, nine C, so right in there, let's see what that HSB is on that now. So we're gonna go 210, 10 and 60, so in the eight range, that's definitely gonna pass, so it's one point higher than 4.5, but that's okay. I'll use that for now. We could play around with going to like 55, just keeping an eye, make sure this doesn't go lighter than 7C. just for the sake of rounded numbers, just for now, we'll leave it there, and see how that works, and I'll go ahead and add that to this number, and let's go ahead and change that one as well, and let's go ahead and change these numbers to that same gray, and then for these little dots, we're gonna go 210. Let's put these at 20 and let's give them a little saturation, and we could even consider going up a little bit brighter, maybe. Maybe that's 210, and there's still some other grays we need to adjust, so we're gonna play around with this monochromatic 210, and actually we already have a color for that text, so I'm just gonna grab these little gray things we haven't changed yet, and make them all this hex code. Now look at, and you can really start to see the difference here. Look at these weird grays, borders. Now that these have some blue hue, these are really starting to look like they need to be, have a little bit of hue added, so let's Command + Select all that, and we're gonna go back to 210. We are going to give it just that little bit of, I'll leave this at 15 actually. And let's, I'm gonna put these dots as the same color as this, to see if they even show up. Looks like they're not quite showing up, so I might need to go, let's go 20, 10 and 20, maybe 10 and 30, and let's grab this hex code as well, put it on these. And remember, these are instances, so they're not gonna update. I'm not updating the master, so I'm just gonna delete, I think it's quicker to just delete it and , I think it's quicker to delete it and reduplicate it, because we haven't changed the names or the overrides or anything. And we could, if we really wanted to, we could break these away, detach the instance, and we could experiment with aligning the, we could experiment, because we have two lines of text here, we could possibly put this in the center, like that, instead of aligning it with this first line only. A lot of times, you do want your arrows to line up with your text, but when you have multiple lines like this, usually it can be fine to, we're vertically aligning with this entire block, so if we just keep remembering that all of this is a block, this is a block of stuff. It's really like two blocks of things together, inside of this larger block, so if you could imagine, and then we have, you know, another block right here, these are kind of all the blocks we're dealing with, so you could imagine it's not gonna be a problem to align this block with this block. So there's different ways you could do it, but you could even imagine if, what if this thing is actually, if you think about it like this, it makes a lot of sense to align the arrow with the group of things. Let's bring this over here for reference. So if you think about all of these elements, let's actually see if we can, something like that. If you start thinking about all of these as full blocks, you can almost start to click them together a little bit more easily. I'm gonna actually delete these, because, no, actually, no I need to keep that there. Let's just go backwards. I'm gonna go back. Back, back, back, back, back, back. I'm gonna go back to where these were all still components. Keep on going, keep on going. There we go. Okay, now this was my master component, so what I'm gonna do is I'm gonna align that one. That way these will be aligned as well, and we can't forget to change all of our grays. 210, 10 saturation. All right, I think that is close to everything. I don't know if I love this here, but I'm not gonna worry about that too much. There's also part of me that wants to see what does it look like without those lines. It does feel like it, maybe it does give it a nice little structure. Let's just double-check these guys. Okay. And, you know, maybe, what if we tried another one where these were blue? I don't know, let's just see. It's kinda curious. Maybe we got a little darker on the bottom of these. So a couple of different options. All right, so let's stop right here for a moment, and let me bring this back up to like a true 812, and I'm gonna show my home indicator, wherever it may be. I think it is right here. Okay. Move this over there. All right, so let's just take a look at this. Let's just go full-screen. I'll move these over a little bit more so I can isolate them a bit more.


=== FILE: 5-01 direction.txt ===
------------------------------
﻿- There's an article that my friend Dan Mall wrote a decade ago that talks about the difference between art direction and design. And in the article he defines art direction like this. The visceral resonance of how a piece of work feels. In other words, what you feel in your gut when you look at a website, or an app, or any piece of design work. Usually it's described in touchy-feely words like elegant, grungy, retro, and more. So he's trying to describe the difference between just straight up design and art direction. Art direction and design kinda of combined together forms design direction. But overall, direction kinda means the same thing. How does it feel? And why does it feel that way? Direction is the why and the how mixed together. Now all of our foundational concepts, from typography, layout, color, all of those are critical to master. But when you add in the why while you're designing those foundational principles, that becomes part of the direction and the style behind the direction. So you can layout your typography perfectly. Your layout and your colors can be really nice. But without a clear vision of the direction, it won't be as powerful as it could be. And sometimes there can be a little bit of magic involved. I remember when I was back in design school, my typography professor would critique our work. And he would tell us, it's just not magical yet. You know, I won't know it until I see it. And I remember getting so frustrated that he could not put his finger on why it wasn't magical. I just wanted to be told what to do. But the truth is the magic comes from exploring, and experimenting, and trying things out. But the thing that helps with the whole magical process is to have that vision, to have those adjectives that you can pin towards the thing that you're working on. So let's take a look at some examples to try to demystify this magical direction. First of all we're gonna take a look at the notion.so website. Very, very simple. Very clean usage of white and a dark text color with this simple gray. And these kind of red calls to action. But if you notice, this background right here has a very, very small touch of yellow. And you can kind of see that compared to the white background here. So if you look at the block icon, which kind of resembles a child's letter block. You know, the kind that you could stack on top of each other and you can spell words with. It's kind of what it is symbolizing. Kind of this youthful, playful idea. Just in the brand mark alone. But then when you add in this yellow background and these almost pen and paper, kinda notebook style illustrations, and then with the red primary action. It kinda gives me a feeling of being young, and being in school, and having these yellow legal pads, and the teacher's red marks. Now it might not create that same sense of emotion for you. But to me, that's the feel that I get from all of these elements combined. But if you were to strip out the block and the illustrations, even if you left the colors the same, it might not have quite the same feeling. So it's very, very subtle in terms of the feeling and the direction that they have chosen to pursue. But I think it works really, really well. Because Notion is an incredibly powerful tool. You can use it for all kinds of different things. But boiling it down to a simple little building block and adding in these fun little illustrations, and making it just seem as simple as one, two, three. And then we got a bonus number four here. It just kinda feels friendly. And it feels like it has a kind of a learning environment kind of vibe. You could imagine if these illustrations were multicolor, big gradients, lots of big scenery, and it had a lot more of this kind of trendy startup vibe that you see, it would have a very different feel. And I think what they've done here is they haven't over-designed it. They've gone with a very intentional direction that seems a little bit unique, even with these secondary buttons. You can see they have this like one pixel stroke in light red with a slightly tinted red button. Even these icons are in red. And just very, very subtle drop shadow. All of these very tiny elements all combined together create a pretty nice feel, a pretty nice direction. And they're very, very consistent with that all throughout their product. Now something like the Notion example, it looks fairly simple, almost easy to pull off. But I can assure you if you could go back and see all of their designer's work, they probably have iteration, after iteration, after test, after test, that they experimented with before they landed on that particular execution. They might have had the vision for creating the school vibe and this kind of youthful, friendly, school-time vibe. But it takes experimentation through your execution, through color, through typography, through your button styles and things like that before you can really nail the execution. But knowing that you have the direction and then using that as a filter for all of your design decisions, that is what helps you kind of get to that path of creating that magical design that just feels right. Now sometimes you might have a project that already has a design direction associated with it. And maybe it's your job to pull in all of that information and then kind of execute that into an app. Maybe there's branding that exists and there's no app. And so you have to kind of figure out a way to pull that branding into a particular app. So this was a project that I worked on through an agency a long time ago for a client called Dr. Phillips Center. And it's a performing arts center. And you can kinda see this logo is meant to represent the kind of, the guy that stands in front of the orchestra and does his little thing. Maybe he's a maestro. I can't remember. But whatever that guy is called. That's kind of the idea of this logo mark. And so they've created this as their brand guidelines. And they're using this pattern of that swoosh mark to show kind of all these different treatments for their branding. They have typography, colors picked out. Kind of this fruity color scheme with the orange, and the red, and the mango-looking colors. And so they've kind of created these directions. And so it was our job to take these branding guidelines and create a new web presence for them. So they have a lot of tickets that they sell, a lot of events that they want people to come to. So they had fairly strong brand guidelines that they wanted us to adhere to. So in this example, I simply just took this direction and started creating these element collages. If I zoom in here... This was created, like I said, long time ago. I did these in Photoshop. Just taking that direction, I was making decisions on the design that I wouldn't really have probably made on my own. But because I knew they had these colors, these gradients, this typography, this style, that helped me very quickly make certain decisions that was right in line with their brand, that was right in line with the vision that they'd already set. So I typically wouldn't use a pink to orange gradient or a yellow call to action with kind of this peach text on top of it. This is not necessarily something that I would immediately design because I'm more drawn to the darker color schemes and kind of techy, clean modern layouts. But it's not hard to make these decisions when you know the vision of the direction that you need to go. So in this example, I'm just laying out potential options. Here's maybe a headline. Here's a little kicker, kind of eyebrow little text treatment. Maybe the color of the titles are orange. Maybe we show the attendees who've signed up as circle avatars. Kind of playing around with some rollover states where maybe this color is kind of the most hot and dynamic color. So maybe we pull that out for the call to action. And maybe we bring in this cool background for rollover. So I'm exploring on how can we pull this direction into the way that we're executing the style. Because at a certain point, it's not hard to layout this typography with proper spacing, good size, good color. But without the style, it might end up falling flat. Especially if it's supposed to represent something that has such a strong visual direction. So I'm just kinda going through a bunch of different options. I'm just exploring. And I'm not trying to make a website. I'm just making different things that feels like Dr. Phillips Center. Or at least I hope that feels that way. A block quote with the same colorful... Another example of design direction that I want to point out is in this ExxonMobil design system. They currently had kind of a soft style guide with particular colors. They had a font that they already had set in place. And they had a few things that we could use as raw materials. So some of the early explorations were just pasting in some of their existing style guide elements, pasting in these different forms that may or may not work with their kind of style that they were going for. And before we really locked in on a design direction, I pulled in all their colors and I just started working on one of the more difficult UI pieces, which is these kind of crazy lookin' tables with lots of different columns, and rows, collapsible, selectable. This looks like a decent table that I designed. You can see I've got all these layers in here, and I'm workin' with the inside borders, and really tryin' to nail how would a big form like this work from a UX perspective on a mobile screen versus a larger screen. So this is kind of a biggish version. And this is kind of a smallish version. So how could we make this work? And so as I'm exploring with this, starting to realize that this doesn't actually fit with the design direction that we wanted to go in. So we kinda decided that this needs to be kind of a corporate, kind of a cool corporate design direction. There needs to be, you know, imagine you've got a well-tailored suit and it's got a crisp collar, and a nice blue tie with a pressed white shirt. And everything fits really nice, but there's maybe some sharp edges. Not anything too gaudy. Nothing too startupy. Nothing with a bunch of gradients. Just some nice, clean, corporate but with a edge of cool kinda color. So this was some of the early exploration that just didn't really hit that mark. This feels more like maybe like a young startup that's just tryin' to make some cool UI. It doesn't really have a strong direction. But you can see in some of these final applications, we are bringing in just the absolute very, very subtle gradient that gives it just that touch of cool look. But it's very sharp, very hard edge. We decided no border radius on anything. Everything's gonna be a sharp edge. Every button is gonna be fully sharp. No one pixel, or two pixel radius. The icons like this, they're gonna be sharp icons here. And then we're gonna have these kind of prominent, dark and stark headers for the tables with just a really, really clean and crisp layout. So this new direction, this cool corporate direction that we set for ourselves just really, really helped us to kinda nail the direction and the execution for this. So again, this is not my personal style. I wouldn't choose necessarily to design my own personal site this way. But for a huge company like ExxonMobil and their internal internet systems, it makes a lot more sense for them. It makes sense to have this big corporate presence that doesn't feel like a startup. And it doesn't have any one designer's personality injected too deeply into the design. They need it to be a little bit more, you know, board room style, crisp, clean, with a touch of modern flair. And that was the design direction that we used for this project. And again, it helped us filter every decision, every execution for the typography, the border radius, and the color usage. Everything was filtered through that direction that was set early in the project. But sometimes you don't have a strong design direction when you first get started. And what do you do when you have something that you're starting from scratch? And maybe you have an idea of what you think it might be but you're not really sure yet. Well sometimes it just helps to kinda come up with some adjectives. Okay, I want this to be fresh and modern. And I want this to be colorful but not too over the top. I want it to be maybe a little tiny bit trendy, but not too trendy. I want it to be a little more timeless, but just really impactful. So those are actually some of the adjectives that I thought to myself when I thought about the Shift Nudge brand. And you probably remember seeing the website. You can see I've got... You know, I'm usin' this funky typeface. And I've got a lot of different color usage. But it's not over the top. I wanted this kind of impactful. You know, I'm personally drawn to a lot of dark UI. And so I wanted it to reflect a little bit of my own personal style. But overall I wanted it to have this really clean, modern, fresh, yet somewhat timeless. I didn't want it to be too trendy. And so a lot of times, that might be through the typeface that you select. You know, look at these hard edge, lowercase t, lowercase g, the hard edge v right here. It's kind of a funky typeface. And so it took me a long time to actually find this typeface and land on this design. And I just want to show you just quickly everything that I went through to get through. 'Cause this was a process of days, and weeks, and probably months. Because I was thinkin' about this project forever. And nothing existed. I wasn't just buying a UI kit and getting started. So first of all, you can see this art board. I've got Shift Nudge logos everywhere. So I'm tryin' to play with this idea of different arrows pointing in different directions. Maybe it looks like an S and an N combined with some arrows. And I'm just playing around with tons and tons of different things. And finally I thought that I landed on something that I liked. So I was playin' around with these different colors 'cause I did want it to be colorful. And then ultimately I landed on this thing that I quite liked. I like these big puffy, big rounded edge things. And I thought a bout playing with these shadows in here. So I brought that logo into a new document. I'm exploring with colors and exploring with gradients. And finally landed on something that I thought I liked. And for a long time I thought, you know what, this is a nice Shift Nudge logo. It's got two arrows comin' together like a shift and a nudge. And there's different colors. 'Cause I wanted it to represent, you know, a lot of different aspects of design. I wanted it to be inclusive. And so these are the ideas that I was thinking of. But eventually I just didn't quite... It wasn't quite magical yet. I had a good direction that I was still ironing out a bit. And my execution on the direction just, it wasn't quite converging the way I wanted it to. And it was very frustrating for me. And so I tried to expand the brand. And I thought, maybe if I just add some typeface and play around with, you know, some different executions. But it almost felt like a person sitting in a chair without a head or somethin'. It just felt slightly off in certain circumstance. And I know this is not a course about logo design necessarily. But the same thing can really apply to user interface, to websites. So you can see eventually, eventually I got to the point where I wanted this to be more simple. I wanted it to be a much simpler mark. I felt like that was too much goin' on. So I decided to kind of combine the colors and to combine these shapes. So instead of doing a giant arrow with an extra little kicker thing, I just kinda created these two different shapes and put them together. So it has the same kind of style. And it's still got this overlapping white area. But it's just much more simple. And I thought, you know what, I would definitely wear that on a T-shirt, or have that on a pin. The other one, it's okay. And there's nothing necessarily wrong with it. But it just doesn't feel magical. And so I was much more in line with this new design. And so then I was like, well I need to get a bunch of icons designed. Again, the process continued. I worked on a huge variety of icons trying to nail down the direction. You know, maybe I use these lines to represent typography and color. And maybe I use gradients. Or maybe I have these abstract shapes that represent each one of the modules. You can see I'm workin' on typography, layout, color, style. You know, I already had the idea and the vision for what I wanted it to kinda have. But nothing was like, the execution was nice. I think this looks cool. I would be happy to put my name on that. But it wasn't... At this point, the execution was really nice, but the vision wasn't quite being met. So I was still tryin' to find where the vision met the execution. Goin' over here, you know look, I'm working on layout with maybe exploring. You know, I would not be happy to share this work and say look what I did 'cause I don't think this is very nice. But I'm still working. I'm like maybe I need to be a little bit more literal. Here are some. Maybe this is start. Typography, you can kinda start to see where it's starting to evolve. And then I thought, oh maybe I go super simple with these gradients things. And I felt like neither the execution nor the vision was really getting hit home on these. I do like these, but it just felt a little flat. Didn't feel magical yet. I made another version of all these icons that were even crazier. And then eventually I thought, you know, this is just... I'm goin' in the wrong direction here. I need to kinda put these in context with my icon, with my logo mark, and try to get some things that actually work together, that really just matched some of the puffy qualities of the logo mark itself. Eventually I landed on this color scheme and these colors with a stark background. And then once I started kinda layin' out this potential site and found the typeface that I really enjoy, it started to make a little more sense. The vision and my execution started to kinda bridge. And I started feelin' good about it. And I show all of that because I don't want you to get frustrated if you're not 100% satisfied with your designs being magical. Sometimes it takes a long time to cycle through as many bad ideas, as many bad executions as you possibly can to get to that one point where you're like, finally, something about this is working. What are the things working? For mine it was these big rounded puffy colors on a dark background. And that was the one thing that I could kind of attach to that kind of finally made the design direction and the execution kinda come together. So don't get frustrated. It can be a very difficult process. Even if you know the direction you want to go in and you have an idea for how you would try to execute that, sometimes it falls short and you don't quite get to that point where it makes magic. So you just kinda have to keep pushing. You have to get feedback from others. You have to keep executing ideas, get more feedback, execute, feedback. It's a big, big cycle. But it's a worthwhile pursuit to really create those magical designs. At the end of the day there's nothing wrong with not having some earth-shattering, mind-blowing concept that is the best thing you've ever made in your entire life and it'll be the greatest thing of all time. There's nothing wrong with dialing it back and just kinda keeping it simple. But you need to at least have some direction that will lead you down a path of having a way to make sure that you're executing the way that you want to be. Because if you're just scrolling through the popular page of Dribbble while trying to design something and you're like, oh that looks cool. Oh that looks cool. Maybe it should have a dark background. Maybe I should red, maybe green. Sometimes that can be helpful to get inspiration. But at the end of the day, you really have to have at least a small slice of direction. And what do you want it to look like and feel like? So it doesn't have to be some monumental concept. So I'm gonna show you two more examples of minimal design directions that it's a very simple concept, but they're executed really well. And I think it works really nicely. The first one is Paul Jarvis' current website. If you don't know Paul Jarvis, he's an author. He's also a designer and runs an analytics software platform called Use Fathom. Check out his website. He redesigns it often. So it might not look like this by the time you get to it. But he's using one type face, one color, and these tiny little underlines. And I guess he is bringing a second color for his hover states. But it's really simple. It's one font size, that's it. And his links have a tiny underline gray, that's it. And he has made the decision to give his website this huge left margin. It still works as it gets smaller. But he's made the kind of stylistic decision. In his minimal approach, he's using space and a tiny little style for the hover effects. Even the titles, the H1s on his website. It's the exact same size and the exact same spacing between the H1 in the paragraph as a paragraph and a paragraph. So it's incredibly, incredibly simple. But it's very memorable. Like, you don't see websites that look like this typically. His footer is all based on typography. And it's very, very simple. His product list is the same as his blog post list. So this is a very, very simple visual direction where the execution is absolutely critical. And a lot of times, I mean, most designs your execution is critical. But to nail such a minimal design, it takes a lot of time, and a lot of mastery over just simple typography techniques and layout techniques to kinda hit a good visual concept like this. All right, last example is this little app called Numi app. This is a little Mac calculator app. And I don't know why I've always remembered this website. It's just so simple it hurts. But it's also great. It's just Numi, Docs, GitHub, Buy. And it's really simple. And if you look at the video, it's actually a really cool app. If you look at how it works, you just type in things like with natural language and it will give you the results over here on the right. So I actually use this app quite often as a fun little calculator app. It just has this clean minimal look that is just memorable. Most apps and most software, most website that you'll see, they really, really try to go all out with their style and their direction. And sometimes you can bring it way down, just like the Notion website, or this Numi website, or Paul Jarvis' website. Sometimes the direction can be soft and your execution delivers on that softness. And it's just simple, clean, modern and memorable. And sometimes that can make it easier to scale up a big application, or to last longer. Because oftentimes the simpler things are, the more scalable they are in the future, the more timeless they are for the future. So take those things into consideration when you're making your designs and you're thinkin' about your design direction for your projects, whatever they may be. So design direction homework. Just to really kinda sink our teeth into this idea of using adjectives for how we would try to execute things, I'm gonna have you design two product modules. So you could use like a Dribbble size art board for both of them, or iPhone, or whatever you want. That doesn't really matter. But I want you to have two product cards with an image, a title, two to three sentences, and like an add to cart button. One of them is gonna be selling crayons for children. So I'm thinking adjectives for that would be fun, friendly, playful, happy. So use those adjectives to design for selling crayons. You could have colorful background or blobby shapes. Whatever you think would nail kind of a children-based, fun, friendly, playful, happy kind of direction for that product card. And for the second one, exact same format with image, title, two to three sentence description, add to cart button. But this one is gonna be fountain pens. Exquisite, high-end fountain pens. And the adjectives that we would want to describe this one would be sharp, elegant, premium, classy. You know, high-end, modern. Somethin' to sell these really high-end fountain pens. But it's the same exact kind of content. And I want you to execute two different styles with two different sets of adjectives to just kinda get a simple exercise under your belt with using these adjectives to design these different types of products. And so really push yourself to make decisions on the design that you personally wouldn't have done without having known what type of adjectives that are used to represent that. So best of luck and I can't wait to see what you come up with.


=== FILE: 5-02 subtle.txt ===
------------------------------
﻿- [MDS] Being subtle often comes down to paying extreme attention to detail. It's an exercise of using a strain versus every single design trick in the book. Something that is subtle is not necessarily obvious. For example, professional food taster might be able to perceive subtle differences of flavor that most people can't actually pinpoint, even though they can tell a difference, but they don't know exactly what's going on. There's subtlety in involved. And there's a lot of different definitions of a subtle, subtle is an adjective that can mean so delicate or precise as to be difficult to analyze or describe. His language expresses rich and subtle meanings. It can mean delicately complex and understated, subtle lighting, subtle tastes and food. It can also mean making use of clever and indirect methods to achieve something. He tried a more subtle approach. Capable of making fine distinctions, a subtle mind. Arranged in an ingenious and elaborate way, crafty or cunning. So at the very root it's clever and crafty and subtle, it's understated. A lot of times it's more powerful. There's an old proverb that says a gentle tongue can break a bone. It's kind of that play on subtle, the subtle play on the power of words versus the power that comes from physical strength. Subtlety and the details of your design provides a connection between the interface that we're designing and the end user. You can take all the things you know about a potential user, the goals of the business, and you can subtly craft an interface that matches those desired outcomes without the UI getting in the way. So without going too much further, I'm gonna walk you through the new Bite app that just came out and walk you through some of the subtle design details that I think they really nail. This is, it's pretty fun, it's like a Vine remix, like a Vine reboot. So you've got these popular kind of like a fun, it almost seems like it has like this nineties feel to it. But look, I mean, this is just a couple of modules with these big rounded corners they're using the subtle white opacity so you can scroll through these and they're not too worried about having some big gradient on the images so even if you're on an all white background, it might be slightly harder to read, but they're kind of, they're just using some very, very simple, very subtle little details here to make it work. I mean, if you look at this, it's nothing but a tiny line of text for the description. You've got the user's name, when it was posted, three days ago, it looks like you can share it there. And then you can comment, this little, very small little window and then the heart. So very, very simple, but it just has, like it's very focused on the content even more so than Instagram, I would say. And just a very, very cool example of interesting, subtle UI design. You could, you could recreate this UI and probably half an hour even designing the icons from scratch, maybe an hour, but you know, it probably took them a long time to get this way. Pretty funny, interesting content here, but I just really wanted to point out the way that the UI looks. It's like super subtle, super duper subtle. And you know, they're using that white opacity, so you can see behind the gray and then it goes on top of the blue and it's just nicely done. It just got a nice feel to it. So don't underestimate how far you can go with your subtle UI design. Using restraint and being subtle is like a tiny flax in your designs that make things really come together as opposed to getting on stage and flexing and posing, and really trying to show off your UI elements when really the focus should be on supporting the action of the user and the action that they should be taking. So I've got a couple of examples here that are not quite nailing the subtle nature of design details. So really quickly, just scanning through this, think of, can you see the major call to action first and foremost? Where should we click? Where do they want us to click? On the orange stuff on the blue stuff or on this black stuff? White orange, blue, gray, where should we click? First of all, I don't know where to click on the site to take action. If you read, if you take a little bit more time, easily create, customize and share your professional digital portfolio website. Now I've actually never heard of portfolio gen. I kind of randomly came across this, but I thought it would make a good interesting, tear down for some problems that I see with the site. So create your portfolio, it seems to be the main call to action, but you can tell that it just, the orange is blending in, they're using orange for the header orange for the H one, kind of the main call to action here. And then they also have orange view sample portfolio. And then they're using orange in the title, orange on icons. And that's a lot of stuff to read orange, you know, three, six, nine, 12, 15 different little things. That's probably too much to read. I definitely don't want to take the time to read all of that. And there are some interesting things about the design. You know, this treatment between the title and this little line and this color of text, like that has the potential to shape up into something semi nice. Then you have this really, really light face on this blue background that's hard to read and kind of an overwhelming amount of content. And it's all kind of flat. It's all everything's same size, this is a little bit larger, but it's just so busy and blue, blue, blue, orange, orange, orange. It's just kind of like everything's thrown at you and nothing is really delicate and subtle. There's just a massive amount of design details, kind of flying at you and it's just hard to digest. It's too much. It's like trying to make your first dish and you're just dumping every spice that you could ever imagine into the dish. And it's like, it just doesn't taste good. Sometimes a little salt and pepper can go a really long way for something really amazing. All right, check out this next example, another random website I found called dub.com. And I know that these could very well change by the time we're actually watching these videos, but bear with me, this is what it looks like right now. So on first glance, this is not too bad. I don't like how this is kind of tucked over to the left, I feel like it should be maybe a little bit more in line with the actual, main section of the website. It just seems like they had to move this way over here to make room for this giant illustration. And then all of these are quite distracting. I don't want to see that right now. And actually this little logo is, it feels, I don't know, I think there's some work that could be done on that. And it feels like it's competing with all these colors and there's some harsh gradients here, very, very strong gradient there and just some kind of odd, flat colors and gradients. There's a big mix of things going on. I think this could, this has potential to get there, but right now it just feel kind of cluttered. And it's like, well, let's use gradients, let's use flat colors. Let's use things that are flying out and let's use kind of this gradient background with a stripe here and lots of different details being thrown at us all at once. You can say here, let's use, the gradient, the big white border and the glow, which is a lot different from these. There's not a real strong, common theme between the buttons and let's use a giant shape in the background. And there's not a lot of consistency between the topography. There's probably, I don't know, six to eight different concepts that are being used here. And I'm not trying to, you know, really smash this website and say that it's horrible or anything. I just want to point out there's not a very digestible format consistency, with just a subtle amount of design details. This third example, Covidieo, randomly stumbled across this again today. And this one gets a little bit better. It's a little more subtle, it's a little more cohesive. They've got a nice big header up here. I like the free trial button, I do not like the free trial hover, cause it's really hard to read. You could technically say, okay, start your free trial, free trial. I don't think that these colors are working on hover and there is something a little bit odd about the centered or almost centered text. And then this is left aligned. So there's a little bit of layout issues going on. And then they're bringing in these big patterns. I actually liked the patterns, they've got a nice strong photography right here, and I don't even mind some of the concepts that they're doing and I love the typeface, but they're also doing a lot. They're trying to do a lot here with left center line, different colors, different rollovers, lots of patterns. These triangles have been scaled down whereas these are a little bit larger. It seems like the pattern should probably stay the same size and this typeface, I don't necessarily mind it. It could work, but they're using different size here and here and then they're using it even larger here. Now I do like this combination, but something like this big high workout video and this small text, that seems to work together, this kind of area, but then right here, you have all of a sudden this is much larger and this is much smaller. So I think they should probably consider keeping the same size text and so there's a lot of changes that are happening and you can see it just, it kinda makes it feel a little bit busy. It was just a ton of a, ton of design details that are not subtle, it just kind of slammed in here. And it's got really good direction, I think the design direction is really good and I think this is really fun, but the execution is not quite getting there. And so they are missing the mark on a couple of like foundational layout and typography type components here. And it's just kind of, it's making the vision not be as impactful as it could be. So let's look at Apple's iPhone 11 pro website for a stark comparison. And it's not necessarily fair to compare these smaller startups compared to the iPhone 11 website, but it still doesn't mean that we can't look at this for inspiration. Just, I want to point out, first of all, incredibly simple. There's not much design going on here. It's just a little bit of a navigation and a buy button. So there's a very subtle detail here that happens. They could very easily put all of this information below the phone and it would still seem kind of cool, but they have a big drop shadow on this phone. And you can see that it's slowly fading in this stuff, see how dark it is there and then it kind of comes up and only when it goes away, and then there was pro. And you could argue that maybe some of this is over done, but they're really trying to showcase this as a work of art, kind of like a gallery look at all the different views. And it's, again, this view is, there's not much going on here design-wise, it's three rectangles and a couple of lines of texts, but they very specifically have chosen these background grays and the subtle contrast between the gray and the black here to kind of give that canvas feel, the art gallery feel for their phones. And you can see here, there's a small black overlay on top of this image. And as you scroll it slowly, slowly fades out. So you can take a closer look and you can see these phones right here. They're not flying in out of the bottom of the screen. They're barely changing their Y axis coordinate as you scroll. Everything's barely changing. Very, very, very subtle. Same thing here, we're fading in these images, bringing in this really big pro camera system. We've three upped-ourselves, talking about the three cameras and they could have left it at this and scroll it away and just scroll that image in the background. But they've added this very subtle rotation. It's not a giant full 360 degree spin. It's just a very subtle, like 5 to 10 to 20 degree rotation there. And then it fades out slowly. And so each one of these panels, there's not ton going on here. It's just, they've got this kind of strict left edge here. And you'll notice if there's text on the other side, it usually ends around right in the same place, but they're setting the stage for all these subtle interactions to happen. They laid that out and bring in the next section. And it's just a very simple line, very slowly going to the point out the ultra wide camera. And look at the very subtle fading in of the little bullet points. Not only are they fading in and up, they're kind of slinking in. So they all have a slightly different speed at which they come in. Very, very subtle, incredibly subtle. Some people might even argue that, Oh, this is too, this is too over the top. This is, you shouldn't spend so much time on this, but I disagree, I really, really love these subtle details. And then as you get done, as you, they wanna move on from the ultra wide camera to one of the other lenses, they fade out in a slinky kind of way. And then the same thing happens here. It's just really satisfying to see all of these details taken care of like that. And again, if we look at this, just from a static composition standpoint, I wouldn't look at this one static composition and say, wow, this is the most amazing thing I've ever seen. But when you think of everything in context and you're scrolling through, they've created this experience where there's a little bit of these things sliding around. If it was just here, here, here, and it was just statically scrolling. It might not be quite as nice, but because they've added these subtle animations and these subtle differences in the design details, it really makes it come to life. And they slowly bring this in to be a full background, see how this is just subtly growing and becoming the full background image. And then they're fading it out as you scroll up so that they can have enough contrast behind their text. And this is simple, you know, if you've got your three type sizes, one really large header type size, kind of a large body and slightly smaller, if not, maybe the same exact size, maybe only two types sizes, but this one's just a little grayer. Highest quality video in any smartphone. And they're mimicking this little block quote here with the way that they did the top, you know, they chose to go three lines here instead of four, instead of, you could easily fit highest quality video in any smartphone all the way across, but something about this kind of creates this downward momentum. And it adds just that subtle decision to make that particular piece less wide. That just adds to that subtle nicety of the website. I mean, there's a lot here. This is a really long, big website and there's tons of details to check out. But being subtle goes way beyond full web pages and down into the tiny details of all interfaces. Details like just the right amount of corner radius on a UI element, the subtle enter and drop shadows on different elements. The subtle animated shift on Spotify's header as you scroll through an artist page. Change the color of the cursor, when a different text color is chosen inside of Sigma. The subtle differences of style that a one pixel gap versus a four pixel gap of space can make in the overall design, the subtle shadow and color changes in the on, off toggle in iOS. The subtle increase of drop shadow opacity, and a slight raise in the white coordinate of a hover effect on a button. All of these things come together. It's like a, a design is ultimately a sum of all of the little tiny details. So a lot of times the more you can boil your design down into the absolute essence of typography layout and color, that is when you're going to have the biggest opportunity to add in those subtle details. That really take it to the next level, whether it's little design details or animation or things like that, you leave a lot of room to incorporate those subtle design details versus throwing everything you've got. Colors, patterns, big images, everything, and just slapping it all on the screen all at one time, all in your face. Sometimes it can be overwhelming, you know, think back to Paul Jarvis's website, very, very minimal one type size. There's not a lot of stuff going on here, but he could very easily start to incorporate some animation and some really fun hover effects or some animation when the things come in, if you wanted to, there's a lot of opportunity for some really cool animation. And, but it's also, it could be overkill for this. There's, a balance, there's a, just this kind of notion of using restraint. It's very, very common for young designers to just try to do everything because everything is possible, big job shadows, lots of color, texts that just does everything cause you know how to use a rotate tool. It takes a lot of restraint and a lot of willpower to rely on the fundamentals, the absolute fundamentals of typography, layout, color, and just putting that into a really, really nice package and then bringing in those subtle details of color, animation, accents, things like that. So for homework, there's not gonna be a specific design exercise for this one. I just want you to really start to train your design eye, to notice all of the subtle details in your everyday life, whether it's digital design or something in your house, your apartment, something you see while you are traveling, just learn to embrace and appreciate the power of those subtle design decisions that you see kind of all around you. And sometimes you'll start to notice what could be better, what is really working and you can carry that mentality into your own design work.


=== FILE: 5-03 corner radius.txt ===
------------------------------
﻿- As simple as corner radius sounds, it can really have a big impact on the way that your interface feels. And it might go unnoticed by a user, they might not know whether it was sharp edges or a two or three pixel radius, or a completely rounded edge radius, but just from a branding perspective from a style overall direction corner radius is surprisingly very impactful when it comes to determining kind of the feel of your interface. So on one end of the spectrum we've got our sharp razor edge interface buttons, maybe input fields, and it doesn't mean that you have to have the same exact radius on every element in your design, but from a general perspective, especially with your primary calls to action. You have the sharp razor edge, zero radius buttons. And then you've got your slightly rounded two, three, four, maybe six pixel radius buttons. And then you've got your much larger radius, your eight pixel, 12 pixel. Sometimes if you're going really big, you might have like a 20 pixel radius on a big button. A lot of times the sharper radius is gonna be a little bit more elegant, or a little bit more just kind of sharp maybe in your face a little bit. And then as you get a little more rounded it becomes slightly more friendly, maybe a little more bubbly, a little less serious, perhaps not necessarily serious from a, this is a serious business perspective but more like we're very serious about our product and I don't know, more of a welcoming. Think of the difference between Uber and the buttons inside of their app versus the buttons inside of Lyft, you can tell there's a pretty big difference between the black sharp edge buttons and the pill shaped rounded pink buttons, they have a very distinct different look and feel. And of course it is colors and things like that, but it's also this button radius. And this might also apply to input field radius, helper button radius, and even like module background radius. So I am going to set up a quick artboard here inside of Figma, and we're just gonna experiment with a few things as it relates to corner radius. So let's go ahead and get our rectangle in here. I'll give it, let's just give it a 16 pixel margin. And I'm gonna do like a 60 pixel height, and just for now I'll make it black. And let's call this Button. Let's make this like 16 point bold. White, bring it in there, center it. All right, I'm gonna group it and we'll call it Button. So there you have your very simple button, duplicate this four, five, six, seven, eight, nine, 10, 10 will be fine for now. All right, so we'll change that to be big. Let's just make this one too or six, eight, 12, 16, 20. Maybe now let's do like, let's do, ah might as well leave it at 20. And then maybe this is 24. 24. There we go. So it might be a little bit difficult to kind of see these all lined up this way but definitely a big difference between something like this, the sharp button on the top of this right side, and then something like that. So maybe if you're bringing these over here and comparing the two, you can see that the corner radius is going to affect the layout a little bit. A lot of times this left edge will hit up against this button edge down here and it might feel like this button feels definitely not as wide as this button, because there's simply, all of that surface area that's not getting accounted for. So it's definitely gonna just give you a different feel. If you're going for that sharp, elegant, I don't know no nonsense kind of look, I know that I've definitely designed, both sides of this both with my Zipper app, the Exxon Mobil had some sharp edge buttons. I even started doing the shift nudge originally with sharp buttons, but then kind of, I wanted it to be slightly more friendly, I think I ended up doing something around the six pixel range for shift nudge. You see a lot of range, you see a lot of range within this particular style. And you can see you know back from our, back from the kind of Lyft versus Uber example, I don't know exactly what their color is necessarily, but you can see just between the corner radius and the color, like that's a that's a big difference. And that will make a big difference in your app. So if we reverse that just to see, you can almost see, like this, rounded button and black feels, maybe a little more friendly than this one. But this sharp edge button in pink, it feels kind of friendly as well so it's kind of a subtle thing and it really goes into like how you're branding, your project and maybe another big determining factor as how you're gonna use your corner radius is gonna be, if you have like modules, oops I didn't mean to do that, F5 will do a gray module. And let's just draw, see as 343. I'm just gonna paste this into here so I can, imagine we have like a floating module in here. So say we have this floating module with 30 pixel edges here. Let's give it, let's use our smooth shadow plugin. I just hit command backslash to pull up the Search and type in smooth and then those plugins are installed you can hit return, pull those up. So I'm gonna just apply the shadow. Let's, I'm gonna stop. Smooth shadow, there we go. Just give it a decent little shadow, probably needs a little bit more Y axis or a slightly darker background. Let's do F0 maybe. So something like that, it's good enough for now, if we're gonna use these big rounded radius edges for a module like this. Then, probably, we're definitely not gonna want to put this sharp edge radius on it like this, we wanna make sure that we have enough room around everything. So you could technically use this sharp edge button on here inside of this radius, but it's kind of starting to clash this big radius doesn't really look nice up against that. And especially, I mean it looks okay, 'cause we've given it quite a bit of negative space but say we wanted this to be even with some margin that we have over here and maybe the margin for our text or whatever else was up here was only, maybe we did 16 here as well to mimic, we've got 16 on the edge here, 16 there. And let's say we wanted 16 and on the bottom. And we want 16 over here. Let's do that. Okay. So that right there is not going to work. We're just, if you drew a tiny square right in here. You can see that from this angle to this angle is only seven pixels, compared to the 16 pixels that are here. So what we'd really like to see is kind of a mirrored corner radius there. But if our background is at 30. And we put this button at 30 also that starts to look a little bit weird because we have this. Now, we have, so we have 16 here, 16 of the bottom. But if we draw this big rectangle here, the space from here to here is not gonna be 16, because this is actually from corner to corner so it's actually more of a representation like that from from this straight edge to this right edge is 16 pixels. So it ends up being more like 20 or 22 pixels out. Imagine you've got your water flowing through here. You've got a lot more room inside of that area and you can just visually tell this is like, it's got this kind of weighted negative area. Just feels like a little bit clunky and it doesn't seem fully correct. So there's a cool little mathematical formula that you can do to find the perfect radius for this section. So, what you wanna do is, whatever radius you have here. So this is 30. And then you've got 16 pixels of margin. So if we do 30 minus 16, we'll get 14. And that will give us the perfect radius to keep this space nice and even all the way through, you can tell this. It almost looks like, like a stroke around this. Now if you zoom out. You can see there's like the perfect amount of radius around this. And I'll show you this with another example 'cause it's kind of a cool trick to get that perfect negative space around here especially if you wanna nesting gently in the bottom. So you can see if I change this to 24, it still kind of works but it gets a little, maybe a little heavy in there. But again if we have a 24 radius, and a 16 pixel negative space. We'll do 24 minus 16 and we have eight, so if we change this now to eight instead of 14. It gives us a very tight, kind of negative space in here and it's gonna be a little bit more mathematically correct versus what we had earlier so if I move this back up. So if we like the slightly more rounded button, it's gonna fit a little bit better with that tighter margin. So where this one fits on the 24, eight and 16 equals 24. But if we actually like the 14 rounded button better then it might be better to make it mathematically line up and just reduce the margin of that button a little bit. So there's like a fine line between that negative margin and the outer module, and then the button inside of it, but that doesn't necessarily mean that we couldn't go 20 on both sides and then move this up. It's not completely off limits to have this bigger area, but you just kind of have to be careful because if you if you go too far out of bounds, with this big wide area, especially if you're like, "Oh I got about 20 pixel buttons. And I've got my big 30 pixel." Or even even worse if you're doing 12 pixels. If you do 12 and 12. That's not gonna work very well. If you're not putting any thought into those measurements against one another, it's just not gonna work. Now you could, because what the thing, the thing is that it needs to either be exactly perfect or enough, far enough away apart where it actually works well together. So if you have a tighter 12 pixel margin here, you could go to the extreme with a pill shape button and give yourself a decent amount of margin say like 24 on each side. And then maybe 24 on the bottom. So like, that's not necessarily a bad look. But I might be tempted to, if I did like this pill shape button, I would be tempted to see what that look like with, so if we've got 24, we've got, oh I put 31 on that, my mistake. I might be tempted to see what this looks like with 30 plus 24 would be 54. So if we put this radius at 54 on the module background module, that would be kind of mathematically correct, but you can tell that the top of this starts to have a little bit of a weird, weird edge so that it's, it might be a little bit too overkill to match it on the full pill shape. You might actually end up wanting a little bit more. That feels a little bit extreme, to have a module within a module. So the formula is there mostly just to kind of, it's a good starting point, it's a good starting point for you to get something in place, it's a good starting point to get something in place and then you just kind of move things around a little bit just to get it kind of locked in. So just in based on like just the corner radius stuff that we've been doing for whatever reason, and I don't have something that I'm necessarily designing for, but I like this 14 pixel button 14 pixel radius, even maybe the 16 or the 20 is kind of like a nice, friendly size, and it but another thing you can do, especially in Figma. They have this option here so if you click this button here for Independent Corners and then you hit Corner Smoothing. Right here on the Corner Smoothing dialogue, watch what happens to this intersection, right here. When I adjust the corner smoothing. This is kind of like the special iOS thing that Apple introduced with their, I think it was iOS 11, something that happened with the app icons. It was like a new mathematical way to smooth the corner, so how it's kind of adjusting, instead of just coming mathematically into a curve, it adds this little bit of a taper on to, so you can play with this corner smoothing as well as if you jack this all the way up to 100. You can see this has got kind of a little bit of a blobby effect, as opposed to keeping this at zero. So, These two buttons are both at 16 pixel radius. And it might be, it might be a little bit hard to tell the difference. But again, it's one of those very, very subtle differences between corner smoothing or not. And are you gonna think iOS does it right at 60%. That's why they have the little grayed out iOS thing right there, and you might wanna consider doing that on your background module so you have iOS at 60%, something like that. But you might not always have a module that you're working with. So if that's the case if you just have, what if you just have a white background. Let's get rid of these. And let's go to the white background, put that there. Actually, I like this 16 pixel radius. I'm gonna keep using that. Well, typically, I personally prefer to have buttons that have a little bit of margin around them. Usually I like to have a little bit of margin, around the buttons, even if it's, you could technically do a full width button but it just, it feels a little bit more like an actual button if it's not full width and the corner radius is, even if you're not gonna use any corner radius, even if this is at zero. I tend to think that these look more like buttons, as opposed to putting it up against the edge completely and doing something like that. Now I have made designs like this before, especially with the Zipper project, I was using that kind of like hard all the way full width, but it was also above the keyboard, so I felt like it was a little bit different, but I tend to like my buttons to have a little bit of margin around them, so it just seems a little more tappable. And another thing I wanna point out too, when you're designing these buttons and say this is, say we're editing a profile here and we have an image in the middle, let's make this maybe 120, so hit that I'm gonna type in avatars. All of a sudden, we have our random avatar generator. If you want a different one, you can just keep choosing avatar over and over until you get something you like, something that makes sense. All right, we're gonna go with this guy. So let's say we wanna, we want an Edit Profile button. So we got this guy here. Maybe we've got a nice big 24, maybe it's even 28. And we want to edit. We want a way to edit his profile. And we've chosen 16 point, 16 pixels, as our radius of choice. Maybe this goes down to 14. And we're just trying to get this button to be a small little Edit button. And maybe this one, we're gonna use our hue trick here. Let's actually turn both of these to 390, 90, 90. Actually, let's go 390, 100 might not pass accessibility, probably won't. FFF and then paste down my hex code. Actually, that's okay for a primary call to action like that. If you wanted it to pass double A, you're gonna be much more in this darker realm. So you could alternatively use black. So that would be double A, something like that, but I personally, even though this is a darker contrast. I think it's harder to read, honestly, so, let's leave it at that. And let's put this one, same hue, but let's bring down the saturation down to something like that. Maybe the brightness. Maybe the saturation is five, but we're still in that hue, color space and then we bring in, let's bring in that, that same color there and we're gonna go a little bit darker with this with maybe 10% hue, and we'll bring it down to, let's say, 30 or so. Might, actually I might make this a little bit less. So here we go. Maybe there's, maybe there's an edit button somewhere. Maybe it's up in the top, here is a placeholder. We're gonna make that 16, we're gonna use the same color. And we're gonna make that medium. Maybe we'll make this one and this one regular, bring this up a bit, 20. All right, so we're talking about corner radius here, so right now I'm not loving this Edit button, necessarily. Actually I wanna change this to enter. So I'm not necessarily loving this Edit button, but just in terms of corner radius alone, you don't have to leave this at 30 or 16, even though this one's at 16. This one could very well be, you could go smaller with, say 12 or eight, 'cause you're trynna mimic this at a smaller scale, so if you wanted to mimic the same radius at a smaller scale. You could actually hit the K button. And that will that will actually go to scale instead of scaling, instead of just making it smaller with a 16 pixel radius which is what we did this one. If we hit K, and then we scale it down, it's gonna actually scale the radius down as well. You can see 11, 10. So if I scale it this way, you can see them maybe a little bit easier 14, 12, 11. So what if you went all the way down to half to write in there so if you did a 30. If you know this one's at 62, you could maybe change that to 60. And let's say our small buttons, we know we want them to be 30. And we're thinking of like maybe a formula for our corner radius. So that means that our corner radius for a 30 button, 30 pixel button height would be maybe half of this at eight instead of 16. If I can type. There we go. And we're gonna just change out the radius, or change out the, there we go. And let's make this, make that 12. It might be a little small, let's go 14. So, I mean, this is not a finished design by any means, but just from the sheer principle of corner radius alone, you can kind of see how I'm trying to model the same radius from this button to that button, and I'm thinking of this little formula in my head, so I've got a 60 pixel high button with a 16 point radius. So, if I divide both of those in half for smaller buttons I've got a 30 pixel button tall with an eight pixel radius. And let's say I had some input fields. Maybe my input fields, look something like this. And a lot of times you can have the same exact corner radius on your input fields. You just have to kind of start thinking about the spacing in between them, because that will also affect the way the corner radiuses or corner radii I play together. So maybe that's 12. Let's group that. This is 12. Sometimes you might wanna bump your button down like double the space between the call to action. And if I did, eight if I did eight, if I did eight there, I might want three times a space at 24 or I could try 16. See how that works. I kind of like the 24 though, actually. So you can definitely reuse the same corner radius for the input fields. And sometimes you might be able to get away with going a little bit tighter, if you wanted, if you wanted to say, okay, here's the system, I'm gonna use eight pixel radius for my input fields, and my calls to action are gonna have 16 pixel corner radius. And it's not something you have to define up front, you just play around with what you think looks good, and come up with a system, and you're thinking to yourself, okay, eight pixel radius for input fields, eight pixel radius for little helper buttons and 16 for the calls to action. So you just kind of start developing this little mental system, while you're designing and you're just acutely aware of the system that you set in place, and it doesn't have to be locked in, like don't go right away and try to start writing documentation for all of your elements, and corner radius has to be this. Play around with it and just get a feel for it, and might you might wanna duplicate this sometime. As time goes by and you might wanna play with, what if we did 24 on the sides. Instead of 16 for all of these elements. And now that gives us a little bit more margin around everything. Maybe we play around with bringing in this, a huge pill shape, we got a huge pill shape. Now what you wouldn't wanna do is have input fields that also have this huge pill shape. I've seen apps do this but to me it just looks like buttons. And it just feels a little bit, to me it feels weird. So I like to avoid this, could just be personal preference, but I don't like the big pill shape input fields. I would much rather kind of stay in the 10 to 12 range. So maybe if I'm using 30, or if I wanted to bump this up to 64. Maybe these get bumped down, 54, you might play with the height of the button and the input fields and maybe that would adjust the way that you consider your corner radius. So let's say, we got 32, and you just kind of have to play with corner radius, the spacing and then also more importantly just kind of zoom out and see how it feels, see how you like the way, do you like this margin that goes around here and this negative space, or do you like it to be a little bit tighter, the way this looks. And if you really like the eight pixels on the input field, well, why don't you come back over here and see what eight pixels looks like on the button, and maybe the whole vibe is a little tighter and because you have a little bit tighter of a corner radius, you might be able to actually tighten everything up a little bit and it just has this tighter, more put together look. Because sometimes the tighter the border radius, the tighter your designs might look, not always, but sometimes if you have this big rounded pill shape, like we have right here on the right, you kind of need a little bit more air, a little bit more negative space. But, so then, that's one of the reasons why I have so much space on the top, it just it feels like it warrants that big, open, friendly vibe. Whereas if you go a little bit tighter. Like this. And let's even go, let's even go to like six pixels or four even. And let's make this, let's make this 12, let's make, let's make this really small, a four, and then we'll do this one a eight. So we got four pixel radius on all these and then a four pixel in between the input fields, and an eight pixel right here. So you just look at the difference between these three. And I'm kind of drawn to this one over here, it just maybe feels a little bit better, maybe that could be tightened up to eight. This actually feels a little too tight. Maybe that needs to be eight. Maybe you have eight and eight. And, that's how you wanna go about it. But you can tell like all of these have very different feels. I don't know the best way to say it, it just has a different kind of look and feel. This one feels maybe, this one is already starting to feel a little bit more like Uber and this one definitely feels more like Lyft, so it's kind of a branding decision, but you can use these small little corner formulas to get to some kind of system, and you're gonna constantly be elaborating on the corner radius of input fields, the check boxes and little things like that, and sometimes there's not gonna be necessarily a full own math formula. You might need a little checkbox down here for agree to terms and service or something. So maybe you wanna start with a standard 24 by 24 size. And obviously 12 pixels is not gonna work. Even if we have 24. It's gonna be a little bit hard to do the math on that sometimes, so we might just say you know what, this is gonna have a four pixel radius, because it's a little bit rounded. And that just might be the way we need to do it, so whatever looks kind of correct. And you might wanna left align that or you might wanna tuck it in to this edge here. This is a checkbox. Left align. Do you agree? So now I'm balancing corner radius with spacing, you can see too, I've got a 24 here. And now I've got 34 here. But if I've got 12 pixels of corner radius, I might wanna bring this in to 12. I might wanna use this number, 12 pixels right here, to have this be aligned right where I know the corner radius is mathematically terminating. And then I might do double the spacing there. And at least 16 right here. Probably more, 'cause they want a big nice tappable area without the accidental tap of the Save button. And if these are gonna be 54, 64 might be a little bit large, so let's bring that one back to 64. And let's go, let's double this just to see how that looks. So we'll do 32, 32 there. So you can see I'm just I'm balancing the negative space, the alignment and the corner radius. And I think, you might wanna try, okay, well the 12, the 12 is looking good. This, when you have a big corner radius like this, the same way we're looking at these over here, this as an input field, just this button naturally looks bigger because we have radiused so much. And sometimes that might make this button feel a lot smaller than the input field, so you might need to have more negative space around it, so it stands out a little bit more, so you can see I put this down at 68, or 48 from here, from the bottom edge, and now it feels a little bit larger. But if you're still not happy with it, go back to 12 and see how that feels. And you might, I think that looks good and we might be able to bring this up a little bit now that we've changed the corner radius, I still don't really love this button, you might be able to just simply get away with a simple little like secondary color. Just because you're dealing with a corner radius, doesn't mean that you have to stick with that particular corner radius, something like that could work even a little bit better. I know I don't have any, we're just kind of designing at random and abstract kind of way, but you can see how something as simple as corner radius is really affecting the layout here. So I'm just paying attention to all of my margins and trying to get a little bit mathematical with it but also just really trying to rely on my gut for what feels better. I can look at all three of these, and this one is definitely starting to feel much better than any of these others. And this one has the 54 height, 54 pixels high input fields, and the call to action. And if you get something like that, but you wanna, maybe you wanna save a little bit space, maybe you try to bring these down to 48. But then you can see if I do that, I might need to change it a little bit more, and you might be able to fit a little bit more information. A lot of the iOS height for the all their modules is gonna be 44 pixels. And so naturally I like to go a little bit larger than that, because I think the 44 point height is a great for like a system setting for lots and lots of content, but we're not always designing for so much settings, and a lot of, a lot of content like that. If you just have two fields, or a smaller amount of content, I think it's okay to go a little bit larger and over exaggerate a little bit. So just pay close attention to your corner radius and work it out with all of the rest of the elements and kind of take into account for how it all feels as one cohesive piece. So for your homework for the corner radius assignment, I want you to design a similar maybe Edit Profile module, but instead of trying it on a flat white background, try to put it inside of a module, as a first step and play around with the border radius mathematical treatments and play around with a lot of different variety, was three to five different versions of the same thing, and just kind of come up with something that feels right, whether you want it to be sharp and engaging and professional or fun and friendly. Play around with all those corner radiuses and play around with colors and see what kind of direction that you can come up with, and what kind of makes sense based on the corner radius. Make sure you're taking into account the margins and the implicit grid between everything, because the corner radius plays with that to a big degree. And so, just put it together and try to make it feel like it works. So, can't wait to see what you come up with and good luck.


=== FILE: 5-04 borders.txt ===
------------------------------
﻿- Matt, are you really gonna do an entire lesson on borders and dividers? Yes, yes, I am, and here's why. Borders and dividers, they're gonna be another one of those really small individual details that they just kinda all add up to make a big difference on the overall impact of your design, and there's a Law of Common Region, one of these Gestalt principles, and it talks about elements are perceived in groups, if they're sharing an area with a clearly defined boundary. So not only is this a visual thing but it's just a psychological thing to group elements together, to have boundaries, to have dividers. And so we wanna create borders and dividers that first and foremost, function very well in regards to the content that they are separating and dividing, but we also want them to look really good. So let's just dive into Figma and start going over all the different types of borders and dividers. I've got a screenshot here from the Settings app in iOS, and I wanna point out, when you bring in this screenshot into Figma, it's about this big, relative to when you create a new frame inside of Figma. If I zoom way in here, and I draw a rectangle, I've got a one-by-one pixel, and if I divide by three, which is what you design at, when you design at 1x, You can see that now, if I zoom way in, and I draw a one-by-one pixel, it's gonna be really large compared to that. So when you're designing on these big Retina devices, you have the ability to go with a, let's see, I'm gonna actually draw a line just 'cause it's a little bit easier to show. So that's a one-pixel line. So these dividers are actually a 0.33 line. Now, if we go with the same color. You can try to line them up but it's a little bit hard because you're not quite on a pixel edge. But that's just one quick little super detailed example of a border thickness in iOS. So if I'm dividing some content, and generally, like in the CCC range, that's gonna be a good color to use. You could even go up to DDD, and you probably don't wanna go lighter than E, kinda depends on how thick you're gonna go. So the thicker you go with your border, the lighter the color you can get away with. But if we're gonna go with like a super thin, iOS style 0.33, then we can select this color. You can see it's a C6C6C8. And you can see, they're throwing in a tiny value of blue into that color, so it's not a pure gray, but for simplicity's sake, I'm just gonna go C6C6, I'm just gonna use full grayscale here. And that is 0.33, but you can see if I were gonna do 0.5 there, and if I duplicate that and do 0.1, so this same color, just putting this side by side, so, and you know what? Let's go ahead and add the eight on the end to make these the exact same color. This and this are exactly the same, same color, same size. This and this are the exact same color but slightly larger size, like a 0.55, or a 0.5 rather, 1/2 a pixel. And same thing here, same color, but it's just a full one-pixel stroke. And this would actually, and this would get interpreted into like a... This would end up being closer to three pixels. If I were gonna go, and I wanted to really see what this looked like at 3x, and I'm gonna copy this over here. So if I design a one-pixel border for an iPhone Retina screen, this is what it would get translated to. Oh, let's just put that in place. That's pretty good right in there. So you can tell, that's much, much thicker, much thicker of a divider. Almost unnecessarily large and unnecessarily dark. So that subtle difference of changing the width to be 0.33 instead of 1 point is that much of a difference. So your color and your thickness are gonna play together to create quite a large amount of contrast. So again, the higher you go in thickness, the lighter you can go in color, but the thinner you go in size, you wanna bump up the darkness a little bit. There's not really a golden formula that you can rely on for darkness of borders. It's more of a gut feel, but just try out some different colors, and make sure you're not going too dark, especially when you have a big list of things like this. A lot of times, it is more of a style preference type thing. You have to consider your overall design direction, and are you gonna go with this kinda chunky big border style dividers, or is that a little bit overkill? And so, you try to think about are you gonna use, maybe only use dividers for dividing out main sections, and not for a list of things. And but it's something you just kinda constantly play with. All right, so let's take a look at another example here. I'm gonna create a kind of like a comment system. So let's do an avatar here, and let's get another avatar for this one, and might as well do one more. Let's do oh, I'll do one more. Okay, here we go. Is that Demi Moore? I think that was Demi Moore. Okay, now, we are going to type in here, dummy text generator. I'd rather use actual words. All right, so I'm gonna paste in just some random text here. I'm gonna make this 16 pixel, we'll do medium. All right, so we got that at 16, and I'm gonna move this over. We'll do like I'm gonna do 20 on the edge, and then, 12 from there, for now. Might actually change that to regular. And let's make this a little less. All right, so let's imagine this is like a Comment section, and each one of these people are leaving a comment. So let's actually also give this guy a name. Name here, so I'm gonna use same exact type size just to keep it nice and clean. Move this like four pixels and random name generator. Full name might as well. And I'm gonna top align this. Here we go. Wanna do 20, I wanna make sure this is 20. So if I actually put a... Oh, I guess the strokes are not gonna work on everything. If you had all these frames, like this, and then, we grabbed each frame, and we put a stroke on the frame, this would actually kinda show you a little bit better about how I'm trying to position all these things. I might want something like that for the name. And also, especially if I did outside, that would be a little bit more. So remember, always try to think about your layout as these boxes here, even if you have the text and everything. And let's also give ourselves a little timestamp. We'll say like five minutes ago. And we're gonna line that up there. Write a line, Command + Option + R. More than likely, we don't need a ton of space for the timestamp. And that'll just give us more room for the name. That way if it got to be like a really long name, you could do something like, you could just truncate it out. And then, once you have all of your stuff in place, then, it makes a little more sense. And we could probably even go down to 14 on that. And let's go regular, maybe both of, maybe this, I'm actually gonna get these out of frames just because it's sometimes harder to design with frames. I just wanted to make those frames, just so you could see. And we'll put this at like 75. Maybe we'll leave these two at, put this at 75, and leave these at the same color. Or not, just playing around here. And now, I kinda wanna see a little more space right there, which means I'm gonna need to go one, two, three, four on that side. Okay, so now on to our dividers. Now that we have this out of the way, I've got this top line here. Before we start talking about sections versus similar items, I want to talk about this. I think this is a little more relevant for right now. So should you do a border, or a shadow, or a separate layer? And what I mean by that is do you want a line like this? So now, if we group all of this, we've got a little line, which is our border, which perfectly fine, and there's not really a right answer for this necessarily. It just depends on what you prefer. Let's go C6, just to kinda model what iOS did, and remember, we could go a little lighter, since we are using a one-pixel line, and let's put this at like 20. Since this is 20, we'll do that at 20 as well. So this is one option with the line, and another option would be creating a big background. All right, sending that to the back, and I want this 20 from the top, and I want that 20 there. So now, I'll make this white. And another thing we could do here, we could actually just say, let's do an inner shadow, and let's make it zero blur, and a -1, so it comes from the bottom. Let's give it 100%, and then, let's change this shadow to C6. And remember, we actually went to D for that one. So now, we have this as a line, and we have this one as an inner shadow on this big background shape. Now, I personally like to use, when I can, I like to use the background shape like this, because this makes a nicer component than this does. 'Cause if I turn this into a component, and I turn this into a component, and then, I have duplicates or the instances, you can see it like, I like my components to snap in place like LEGO blocks in an overall layout, whereas this one, you could go in and add some negative space into it. But that ends up becoming a little bit more of a hassle. So I actually prefer, unless things get too complicated, I like to have the background in there by default. And if you don't like using the inner shadow, if you find it confusing, you could definitely turn that off. And then, and I'm gonna actually bring this back in, you could turn that inner shadow off, and then, you could paste in your divider. Honestly, this is another great way to do it. It's just kind of a personal preference. Sometimes I will even, instead of having this border, I might actually create another shape and call this border instead. And then, I might just have my inner shadow on that, instead of having the border. So it's the exact same look, it's just more of do you like having this tiny shape that you can select. Also, if I wanted to make this larger, I could just do that with a stroke, but then, it works the exact same way. It's just sometimes it's just easier to click into that shape right there versus trying to hit that tiny stroke. And then, I can just change this to -2 or 3. And that doesn't actually affect the space in between. Now, it does affect like this is actually 16 pixels of margin here because it's actually measuring all the way to the edge. The only way that would be different was if we put it as a drop shadow, and then, you'd have 20 pixels of white space, and then, the drop shadow, but it's just kind of whatever you prefer. I like to put it inside. So I'm gonna leave that at one like that for now. Like I said, you can have your individual border, or not. And that way, if we do have this as the component, let's go ahead and move our master there, and make a copy. So now, if I wanted these to be snapped against each other, I can just put these at zero. And I can copy the fill, and then, hit Paste right there. So click the fill, copy, and I'm gonna paste. Oh, and if we if we really wanted to get... We could copy and paste all the fills here, and then, we could just toggle the visibility, but we're not gonna do all that. So copy the fill, paste the fill. We could have a border here, and sometimes, sometimes you might want this entire background to have like a bottom border. So you can play around with the full background versus the full border. And that way, on the last child, you might have a full border on the back, or maybe your full border doesn't quite do that, and you have a slightly different one that's maybe it's not there at all. So it's helpful to have the ability to toggle on and off that last border, which is kind of what I'm getting at on this one here, on this callout. So it's just an easy way to kinda toggle that last bottom border, but for the most part, it's something you can play with. Whether or not you prefer the individual border, that way you can use a stroke instead of the shadow, but it's really, ends up becoming more of a personal preference. And then, at this point, whether or not you're playing with the border, actual border, or the shadow, you can always come back into your master, and say, "Well, maybe, what if it was "like all the way to the avatar? "Does that look a little bit better?" You just have to remember which component is which. So a lot of times, I tend to prefer the borders that are separating the content. I feel that it's a bit more scannable. That way, you have this clean, smooth edge, whereas if you were to do something like this, it breaks it up a lot more. So maybe if you have a lot heavier, more dense content and information, you might want the stronger border. But I find this one to be right in here, let me try to redo, there we go. I find this one to be slightly better. I just kinda prefer that indented look. And if you wanted to, you could even experiment with not going all the way. Sometimes it's just more of, if you want it to be more iOS style, you would indent the left side, and push the right all the way. If you wanted it to be a little bit more styled for a brand, there's this subtle difference between how you style a border in combination with some of the colors and border radius, like these little elements are gonna build up, build together to kinda set the overall look and feel. But look, you could imagine, if I were to take these and let's go here, just imagine if I grabbed this border, and let's an inner shadow on that, and let's make it come from the top, just to show kind of what it looks like if it was... Let's make it like AA, there we go. We'll make this one A as well. It's only two letters difference from the color, but you'll notice, if I do this, all of a sudden, it's like border city, like a lot of borders. All right, so you can see, there's a pretty big difference between this, and even this, it's simply just changing the border color but it's a lot busier, it's a lot more segmented and broken up, and that kind of leads me to pointing out using negative space only. So it's definitely worth considering getting rid of all of your borders and seeing if your content makes sense without the extra borders. So in this particular example, let's just put these side by side. I'll make a copy of these, bring 'em down here. So just in terms of just pure cleanliness, I definitely like this one a little bit better. If we're talking about a Twitter timeline, and we need to put in the heart, and the retweet, and the other icons here, and it becomes a little bit, there's more information, then, it might be too much to not have the border, we might need to bring in that divider. Now, let's check out what this looks like with a 0.33 or -0.33 C6. So even that, you can tell that the border is still doing its job right here. This is just very, very, very subdued, and subtle compared to the one-pixel dark border. So if you're ever having trouble with border colors, you can always take screenshots of apps and see how thick are they going with their borders, how wide is it, what color is it, how does that play off the background. You can tell there's a little bit of a blue hue in the background, as well here. So you don't have to completely copy everything verbatim but it is definitely helpful to see how that works together. And then, you can start playing with changing up your negative space to make it a little tighter. But you definitely kinda wanna avoid these really dark dark borders. And the other thing I wanna point out here, a Comment section might not quite have a big rollover state, but that's also one of the reasons why I like to do these inner borders, is because the rollover state, well, often kind of cover that up. So let's say we wanted to have kind of an extreme rollover state, just to show an extreme example. Well, I guess we don't need to go too extreme. We'll do like a gray rollover state, and we'll hide that. So this is one thing that you kind of have to consider here. There can be a little bit of a weird border thing happening here, and also, if you were to leave the border there. I'll change this. It's not very, very noticeable but it is a little off-putting. So, what I would either do, I would either say, "Okay, if you roll over any of these, "we need to disable the one above, "and also, the one on that." So that would be kind of an implementation issue. But you can see that it's just a lot cleaner if you have the border kinda going away on rollover. And there's a number of ways to do that with implementation, whether you decrease the border to zero on the actual one, and you can do the previous child. There's a number of ways to implement it, but as long as you're kind of calling that out and being very mindful of the way that would work, that would be kind of one of the aha gotcha moments with the borders, especially when you're doing something with the indented border. You just have to make sure you're kind of aware of what's happening on the top and bottom, especially for the rollover states. And we kinda covered indented versus full width. And the different styles, like I said before, it can be really helpful to experiment with different styles if you're planning on going like with a slightly heavier branded type version. You might go with a two-pixel border but maybe, this one is incredibly light. So you can get away with going with a really light border, this is F0. I wouldn't go much lighter than F5, 'cause it starts to get really hard to perceive. So that's a -2, that's a -4. And you could imagine, if I change the font to maybe it was just a bolder type of fonts. And I was going wider with this. Probably way too bold for actual tags but... Grab this one as well, 95. That's more of the double A large score, so it's not really passing its testability, but you can see, if I'm playing with the darker style, and I mean really, I could have even just kept this text as is like that. Maybe this one goes back down to bold, or whatever it was on the other one regular, but maybe these are extra bold, maybe you have the chunky extra bold, and then, you have these big chunky borders. It kinda does the same thing, and this is kind of a neat style. It just depends on the design direction that you have on your app, so if you wanna go more system, iOS, you can do these tiny little borders. But if you're gonna go thicker with a one-pixel line, you need to remember to go lighter, you need to remember about the rollovers, and consider some alternate styles. You could even make these colors, or you could just remove them all together. It really just depends. And then, if you're kind of going for sections versus individual items, so this is kind of an example of dividers within grouped items, these are all kind of comments. But what if we had a big section up here that was like, hey, write your comment up here. And maybe it's the same exact style, so I can copy, Command + Option + C on this background, and then, Command + Option + V on that one, maybe it makes sense to do a big four-pixel divider, or maybe even like a six-pixel divider. And then, maybe these are like two. And so now, we're kinda setting up this border and divider language, where we're saying, okay, if you're writing a comment, then, that is going to be, let's say that is the person, who's logged in, and maybe, this is super duper placeholder tags, so we do like 95. Assume this is like an input field area. And now, since the functionality is much different between here and here, this might warrant a completely different border style. But we're still trying to be mindful of okay, this is a very certain type of border at -6, so we've got a six-pixel border, very light gray but enough to create a very significant border there. And then, we have our -2 right here. And just to show another option of this, there is also the ability to do no borders on any of this, and instead, we have our background, B5F0F0, say that's our background. And let's make sure we bring in this background here. So then, we can actually just use our negative space only to create these borders. That's a yet another way to do it, and there's not really a right or wrong way, especially, it just depends on how you wanna do it. So now, we can move all of these together, we've got two pixels between everything. Could even do two pixels right here as well. And maybe that's enough, maybe that is enough, and you could do the background module there but it's kinda nice to have it, where they're all their kind of own elements. That way, when you do get into design system type things, you have these blocks that can kinda lock in place and actually, I would probably prefer having the border like inner shadow versus having this background area. Because if you do this, then, you have to keep in mind this negative space. And if someone was just trying to snap these things in place, like if I had these as my components, these are all my design system components, and I wanna just pop them in and build them all. If I just wanna snap them together with zero pixel margin, there ends up not being a border. So, if even though it is easier, it could be easier to make it without a true border, so it's probably gonna be a little bit easier and a little bit scalable, a little bit more scalable, more future proof, if you kinda bake in the border to the component, as opposed to the border living in a completely separate thing. So if you start to think about your items as individual components, you kinda develop these little rules for the style and for the appearance of the borders for the rollovers. So there's a lot of different ways you can handle it but you just kinda have to be mindful of the space, mindful of the thickness, mindful of the color, and also, are you dividing grouped elements, or are you dividing sections, and that will kind of drive the style of the border, and how thick it might be, or how dark the color might be, and maybe you go full black on one, and a lighter gray on the other. But it's kind of like this mental system that you're trying to build up, when you kinda create this component system. For homework, I want you to do something similar that we just covered but instead of doing comments, and a Comment section, maybe a list of contacts. So you have a avatar, a name, maybe a title in a smaller gray, and maybe a kind of an arrow that links to a different place. It could be a sidebar, or it could be a big website, or you can do a mobile screen. It's kind of up to you, whatever you wanna go for. And just go through, make a list of like 5 to 10 people, and play with 0.5 pixel borders, 0.33 pixel borders. Vary the widths, the style. If you wanna do modules and shadows, play around with maybe three to five different options. Once you just get that first list in place, and then, you can kind of play with the borders, the space, and kinda get a feel for dividing sections. And that'll kinda just give you a good foundation for setting a larger stage for borders, but it's important to just remember, don't overdo it. Sometimes a negative space is enough of a divider, and just because you don't have an actual border, or an actual divider, doesn't mean that the content isn't divided enough with the negative space. So maybe you do three to five versions with varying degrees of negative space in between each of them, and then, try another one with very tiny borders, and just kind of figure out what you like more. So border homework, get started, and I can't wait to see what you come up with.


=== FILE: 5-05 depth.txt ===
------------------------------
﻿- There are some times when you want to create some depth with your interface, whether it's extremely subtle and things are just gently raised off the screen, or it's completely overt and you have floating tiles and things that are pressed in. But either way, there is a principle that is a great place to start. And that is that light comes from above. Whether you're outside or indoors, typically there is gonna be overhead lighting, and it naturally casts a shadow downward. Sometimes it comes from an angle, and, I know that during sunset and sunrise there can be a very horizontal light source with really long shadows being cast. But in general, it's a good principle to start with a light at the very top and let that dictate the way that Highlights, and Shadows, and Gradients all kind of come into play. So, let's take a quick look at a few older examples of mine back in the iOS 6 and pre-iOS 6 era, when things were a lot more skeuomorphic. So, right here, this is an iPhone App for a magazine called "8 Days." And, this was the side navigation. And look, there's just tons of lighting effects going on. We've got gradients in the header, gradients in the header here, we've got a recessed icon with very subtle drop shadows and enter shadows. I've even got subtle gradients on these icons, big gradients on these dividers with a pretty heavy kind of a an embossed kind of beveled edge here with a shadow cast, very subtle. And these icons have a bit of a gradient with an inner highlight on the top dark, kind of recessed and dented tab that lets me know this is the one that's been selected. Even these grooves in the background, this dark line which kind of indicates a shadow with a subtle highlight underneath it just to kinda make it look like it's slightly indented like that. And here's another one, this is a movie theater App. But, lots and lots of gradient usage and inner shadows, and drop shadows, and kind of spotlight effects with radial gradients. But, the key behind all of these is just a very subtle usage of the Light and Shadow combined. Last one here, this is a remote control designed for the, AT&T U-verse App. And this was back before Apple TV came out, the remote is quite clunky. I don't think this is too great of a user experience. But nonetheless, we have some pretty tactile looking buttons and all that is made possible with this idea that light is coming from the top, casting this kind of highlight on the top edge and a shadow on the bottom edge. But, you have to use it gently, you have to be very subtle with it. So, let's take a look at some examples of how we can actually implement this in our interfaces. Now, for these lighting effects, I like to use the Rule Of 10-20. And let me show you what this means. I'm gonna, we'll recreate a lot of these and I just wanna go over them really quickly. So, this is a completely Flat color, just a straight up Hex code, nothing happening. And this one, you can see I've got a little bit of a gradient, you can see this Linear gradient is added on top. And, I've also added a bit of a tech shadow here. And, if you look really, really closely down here, you can see there's a tiny little drop shadow as well. And, may be that could be a nice Hover effect. And this one has the same shadow but instead of the sharp edge down here, it almost looks like it's growing off of the screen because of this inner shadow here. And then we have a kind of a simpler version of that with a sharper edge. And then we have almost the reverse of that with this Inset button, which is done with kind of a reverse gradient and then an inner shadow which makes this background appear closer to the foreground than the actual button here. And that's really just done with a play on the colors and the shadows, and this idea that light is coming from the top. So, if this is behind here, it will be casting a shadow. And it's really, really similar on a dark background. But on a dark background, you can actually start to bring in this highlight, and that will kind of lift it off of the screen a little bit and give it a slightly sharper look on that top edge. And then you can also put on this bottom highlight, which kinda makes the background seem like the light is hitting that rim, that edge so if light's coming from the top, it's casting a shadow in there but then it's hitting that rim and making this bottom edge glow just a little bit which kinda makes it look like this whole thing is pressed. And if you look at some practical applications inside of this mind narrow project again, you can see that's exactly the same technique that I'm using on this Cancel button. Now, if this was just this simple solid color gray without those lighting effects, it wouldn't look that interactive, it wouldn't have quite as much prominence. You can imagine if I went in here and went all the way to the route layer, and I took off the shadows, and then I returned, now we zoom out. It still appears to be a Cancel button and, you could argue that text could be sufficient enough and you could go with that flat style. But, you might need to bump up your colors a little bit brighter for that to fully feel like a trappable, pressable, clickable button. If we go back, when we add that subtle inner shadow, this is like a point five y-axis and probably like a 5 or 10% white opacity with a slightly darker background. Then, you can see that really just lifts the button off, of the screen. And this is a style direction, this is a subjective, tactile button that lives slightly higher than the surface. And it certainly a style decision. So, if you make the style decision that some of your buttons will have a slight tactile edge to it, this is a great way to achieve that. And then, for the recessed log, you can see I've got these darker gray input fields, and I've got this tiny little inner shadow. And then a tiny little white-drop shadow, which creates this effect where it makes it look like it's sunk into the background, and that you can actually put something into that input field. So, playing with the kind of a slightly raised for the buttons and slightly pressed in for those input fields. So, let's get started on kind of laying some of these foundational techniques out. So, on our Flat button here, this is 50-pixel tall button on a mobile screen. I've got 20 pixels of margin on each side. And, if I just wanna experiment really quickly, a lot of times I'll just add another fill, and in most programs it will default add some type of white gradient and Figma. This is going from, 100% white down to 0% white. So, where the Rule Of 10-20 comes in, I like to put my initial values at 10 or 20% for that highlight color. So, 10 might be a little subtle, maybe 20 looks a little bit better. And then, we can look at the difference between a button that has a slight gradient or, a button that has no gradient. And you can toggle that on and off. It definitely, if you're designing for mobile, it's gonna look much different on your phone versus on your desktop App. But you can toggle that on and off with a simple little utility gradient. And, if that was too light for you, if you'd like to maybe add the darker Button, you could also do the exact opposite where these colors are fully black. But then, you would want the top to be zero. Cause remember where, if we want these buttons to raise off the background, we're gonna want the light coming from the top, and we want maybe a 10 or 20% value on the very bottom. Now, it looks like we could probably go with 10% instead of 20, because that black for whatever reason it's hitting that blue a little bit harder than the white is and I think either one of these buttons could technically work. And you do have to mind your contrast on some of these because if you have a color that passes but then you add this white gradient, you might need to check right in there, and what once was a passing double A color might now not be quite double A because you've added that light gradient. And that might be a reason why you add a darker gradient instead. But, it really comes down to personal preference and choosing those colors. But, what's cool about these linear gradients is, once you have that in place, you can actually leave that gradient in place. And then, you can play with a color, and that same highlight on top of it is gonna be present in every instance. But, you can see on some buttons it's not gonna work quite as well. See, some of these darker colors are gonna show that gradient a little more strongly. And, if we were gonna go really dark like this, we might need to go back and adjust above the 20. Even though we started here, we might need to go to 30 or 40, to have that same effect just because there's a bit of a bit more contrast, and a bit more of a rich color that doesn't react with the 10 or 20% white the same way that this would. So, that's gonna be a way to create these utility gradients. And, sometimes when you're handing things like this off to development or you want to explain how these are, what the fields are, a lot of times it might be a little difficult to put two different fields on an object. So, one way you can recreate this exact same thing with the Linear gradient, so if we wanted 0% on the top, and then we have 10% on the bottom, say we wanted 20. Well, let's look at that without this Linear gradient. And, let's use this color as the Linear gradients. We'll change that to the Linear gradient and we'll put both colors on each end of the spectrum and make sure they're both at a 100%. So, we've got 100% gradient of the same color going to 100% gradient of the same color. Then if you'll remember back to our color selection videos, we can adjust the brightness here to mimic a 20% black overlay just by decreasing the brightness to 20%. So, 20% off of 100 is gonna give us 80. And so, if we have on this one a linear gradient with a 20% overlay on the bottom, and this one has a 20%, darkness decrease, that's gonna be the exact same look for both of these items. So you can see if I put them side by side, you can't even really see where one ends, and one begins because that's really the exact same color. Whether you overlay it as a black color, or you decrease the brightness by the same amount, it's gonna appear really similarly. And this would be a little bit easier to code because then you could just say, it's a Linear gradient, it goes from this color to this color versus the Linear Utility gradient that can be a little bit trickier. So, it's just a subtle way to kind of make that difference between the Utility gradient and then these Linear gradients like that. So I'll put those over there. So, this one is gonna be a bit of a highlight. And a lot of times, in addition to adding this Linear gradient, maybe we don't wanna get 30%, let's do 20. We can also add a Layer effect and do an Inner Shadow, change this to full white. Blur is gonna give you a bit of a rounded kind of effect, whereas if you reduce the bar to zero, it's gonna give you more of a hard edge. So, just looking at this, the default 25%, that's gonna give you like this hard edge button that feels like it's kind of sticking out off the screen a little bit. But this is maybe a little too, maybe this feels a little weird. So, a lot of times I don't like to go too high with this y-index, I might end up trying like a 1-pixel value for this y-axis, sometimes even like a point five. But you'll notice on this light background, it just doesn't have enough contrast with the background here to actually show up. And you'll notice that if I take the same exact button and put it on the dark background, this white overlay, this white Inner Shadow set to 25%, let's just do 20 and make it 1 pixel just so it's even. Look how this top edge is now popping off of that dark background. So, you can't, even if I took the same exact button and put it in place of that one, it's just not quite enough contrast for that to really work. So, even though technically it might still seem like it should work with the same light, it's just not quite catching as much light there because there's not as much contrast. So, most of the time on a light background, this Inner Highlight is not really gonna work. So, I will often just take that off and you could technically, if you really wanted to, you could make this black and you could experiment with 10% and add like a very, very subtle almost like a stroke around the button if you wanted to. Maybe instead of an Inner Shadow, you did an Inner Stroke around the entire thing, and maybe, you put that at 5% and that could be your style, that might be the style of like a 5% stroke all the way around. And, you can see that it plays slightly differently off of this top gradient than it does off the bottom. But, most of the time since light is coming from the top, on these light backgrounds especially, we would probably wanna give a negative value to the y-axis which would give it this kind of, if the light is hitting here you can imagine that it can't quite make it to the bottom of the buttons, so, if we put that shadow on the on the bottom like that, it kinda gives it this dimensionality like, if this is the background and the button is here, we're seeing a shadow underneath the button, which makes it kind of naturally seem like it sticks out a little bit more. And, you would imagine that if the button is here, and, I guess I could even do it this way, the light hitting it would also cast a little bit of a shadow underneath. So in addition to a little drop Inner Shadow, we could place a small Drop Shadow, and I'm gonna start at 10%, I'll do like a 2 pixel blur and maybe a 2 pixel y-coordinate, y-axis. Maybe bump it up to 20%, see how that looks. And maybe, maybe that blur needs to be a little stronger. We'll do four. And so now, we've created this really, really subtle, very subtle Linear Gradient with a subtle Inner Shadow and then it's also casting a small shadow, and it definitely gives a different feel. A much different feel, as opposed to removing all of this information. And, there's a pretty big difference between the straight up Flat button and the one with a very, very subtle 10, 20% gradient with this 10 to 20%, Inner Shadow and then also this very, very subtle Drop Shadow. It just gives it just a little bit of dimensionality. And, again, this is gonna be highly, highly dependent on your decision for the direction that you take your App. Because to be fair, a lot of Apps don't have gradients and dimensional buttons these days. You're starting to see it a little bit more but, it's almost kind of like a trend, it just comes and goes. And, sometimes it's a thing, sometimes it's not. And often, it could just be a brand new decision. So, if you do decide to do it, these are good and helpful tips. The same exact thing could happen on an input field. So, if we wanted this to be inset, and actually, I'll go ahead and recreate this little button over here. If we wanted it to be inset, remember if lights coming from the top, and it's inset and we wanna have this maybe curved effect, well, all we have to do is, we could go back to our dark gradient and make sure our bottom edge is catching a little bit of light. So, actually that would be zero and on the top edge, we'll put that at 20. And then, we want the entire background to appear higher than our button, even if it's this full color. So, what I'm gonna do is remove this Drop Shadow and this Inner Shadow, I wanted to come from the top now, so, I'm gonna put that at two, maybe one and I could do a blur, maybe bump this up to 20%. But see when I bumped that to 20% it created this very, very sharp contrast between the background and this button. And if I take that off especially, it's a combination of that gradient and that shadow and it really creates that sharp line right there, which makes this automatically feel like it's pressed into that background. And if we really want to take this to the next level, we can add a Drop Shadow, but instead of black, we can add white and let's give it like a 1 pixel, y value, and let's give it 100 brightness, 100 field, and that's gonna make this rim, the bottom rim seem like it just catching a little bit of light right there. And again, if your background is white, that's not gonna work and you might even wannna go slightly darker with your background to see this effect even more clearly. So if I go really dark, that's kind of a weird color combination, but at least, unless you see that white edge. So, if you're going a little bit lighter, like right in this range, maybe then the 100% white Drop Shadow, that could be too much, maybe you go 90, 80. But, you're still kind of in that 10 to 20% range from full value. Well, it's just kind of a subtle play between that background color and that inner rim right there. And the same, recess technique could work on input fields. Say, we've got an input field here, and maybe this isn't quite as rounded, and instead of this blue color, maybe we have full white. And instead of white text, let's make this black. So, you can tell that just changing that like this is not a very nice looking input field. So, a lot of times what I might do is just kind of strip these off, just to see what it looks like without anything. And, a lot of times it's hard to make a white input field look set back into the background. And so, sometimes you might want your input field to be a little bit darker than the actual background. And that will naturally make it a little bit easier on yourself. So, if I added that same background color as the field, and then I can just nudge this down a few times, until you can barely start to see a difference. We can also use our HSB trick and knock down the brightness a bit. But once I have a pretty good base like that, then I can bring in the Inner Shadow. And maybe, that's a little bit too dark, or maybe, you know, maybe you just need to experiment with that and maybe I want it to be a little bit more subtle, 10 to 20% still is a good range to try out. And then, maybe I bring in that wide drop shadow there. And so, that's starting to look a little bit more like an input field. But one thing that's gonna make this look a little bit better will be this darker gradient coming back in. And again, I wanna be in the 10 to 20%, only to start really, really subtle and see how that looks. And that looks okay, but I think this black is not quite working that well. So, a lot of times I might even try the Linear Gradient where I'm using the exact same Hex codes, and then I might just kinda make that top one a little bit darker. Remember, we're at 10% here, so maybe we bump that to 20, then we go a little darker, maybe we go 30. You know, it's just kinda play with it a little bit. But you can see, this definitely gives you a certain type of style and maybe this is too much. Maybe this is too much for an Input Field. And, you might be better off with white Input Fields, with a simple, a lot of times, you know, simpler can be much better. Maybe you just have a white Input Field with a subtle drop shadow. And maybe, that's what you're Input Fields look like. But again, I would still play if I'm dealing with depth and lighting, I'd be tempted to play around in that 10 to 20% range. Play around on the y-axis and the blur. But you could also imagine, what if this was instead of a big button, what if this was 24 by 24? And maybe the margin, the corner radius was four or so. That could be a pretty nice little, that could be a pretty nice little checkbox. And, you could also another thing you could do is add a fill of black to this and make that 10%. And those inner shadows and the drop shadows and all, those are still gonna work the same way that they would on that gradient. You just might have to play around with toning things down a little bit or if you add a little bit more of a blur it's gonna seem a little bit darker and deeper of an indention. So, a lot of subtle things that you can play with here. And, you can kinda make it feel like it's just barely, barely pressed in. Something like that. Again, you can also pick that same background color, and then maybe, you just go a little darker with it like that. So, you could imagine this being like a recessed checkbox, and then when it gets filled, maybe you get a style like this. So this would be the D selected. And if I Command Option C, this button background and then hit Command Option V, that's going to paste that style, including the border radius, so I change that back. This might be the selected version of that with you know, with your white check mark inside of it. However you wanna do that put your little Check mark, so pull in a Check mark icon. But just subtle, subtle little techniques with the inner shadows and this white shadow is gonna make things on the bottom look like it's recessed whereas on dark backgrounds, you can use that really, really to an extreme to make this just really have a crisp top edge. Even if you don't wanna go with a really gradient rounded, skew or more skeuomorphic button, you can just add a nice little sharp pop to some of those elements. And lastly, look inside of this Center Sampler App. You can see that I'm using that same exact technique with my 10% white on top of these and then I've got my pretty dark shadow just to make these pop off the background a little bit. And then these grooves right here where you can slide the volume. You can see the groove here, it's a darker color with this 1 pixel inner shadow. And then I have a very, very subtle, blurry drop shadow which makes it kind of seem a little bit like indented and then kind of rounded like it's catching the light on the bottom. And those subtle little things just kinda make these little tiny elements just pop off the screen a little bit more. And that way, they just seem a little bit more like this is volume, and sliders, and you're controlling real world instruments. And it just to me, it provided like a nice contrast with a lot of this flat UI. And these very, very subtle tactile details and things like that, just kind of give it a nice richness that you would not have if everything was just completely, completely flat. Even if you look at these title bars on these desktop Apps. If you look really, really closely, you can see a white highlight on the top here, and it's got a lighter gradient and look at these buttons, you know they're casting a little bit of a shadow here. And, a lot of desktop-type applications are still using a very subtle amount of this light technique coming from the top, casting your shadow. So, it's still prevalent, it's still highly relevant to interfaces whether or not you're going with a flat UI or not. Every now and then, you'll come across a pattern or component that has that applicable depth, lighting and shadow kind of techniques that can be implemented on that. So, for your depth homework, I want you to grab this file and just kinda study the way that some of these gradients and shadows are created on various backgrounds the dark backgrounds, the light backgrounds, and once you've kind of dug through some of these concepts, go ahead and try to create your own versions of these different colors. Maybe there are different size buttons, just create like a light mode and a dark mode and see how you can toggle that bottom drop white shadow to make it same recessed or have these buttons that are popping off the screen with a subtle little white highlights and play around with those 10% values, 10%, 20%, 30%. And you'll notice like on a yellow button, for example, you might need 100% white on that top edge. But, that would never work on a really dark red button because it would just be too strong. So, play with those subtle, you know, experiment with the light, the shadow, the raised buttons, the recessed buttons and input fields. And just kinda learn how you can start to apply these techniques in some of your own projects.


=== FILE: 5-06 opacity.txt ===
------------------------------
﻿- Opacity and blur can be used as a stylistic option to kinda create some distance between background elements and foreground elements. It can be used as a style where you have faded backgrounds or you're trying to separate like a modal raising off of a background and it can also enhance contrast and provide different styling opportunities so there's lots and lots of things that can be done with opacity and blur. I would say blur is more of an enhanced opacity that was introduced with one of the latest versions of iOS but we're gonna take a look at a lot of different examples kind of get into a live editing session here so let's just jump right into Figma here. We've got some opacity examples and some blur examples we're gonna run through and I've shared this before but it's worth noting again, especially for different color avatars. Let's say we have an avatar and I've got my plugin so I'm just gonna pop this in. So, let's go ahead and create a inner stroke and then on the opacity of the center stroke, give it a 10% range. Okay, so that's a really easy way to use opacity for Avatar Borders and a lot of times that might not even show up but you can tell if you have this lighter edge up against that white it won't always work out if you don't have that. So sometimes it's fine and again these are all stylistic decisions but we're just gonna randomly pull some more in here. See on the darker one you can barely even see it but then on these it shows up a lot more because they have this white background so let's do avatar on these. There's a stroke right here with the border and it just kind of gives that just enough little bit of a pop and you can play around with a darker border but generally speaking you're gonna be good in the kind of 10% range and you may have to pixel stroke you could also do this with the opacity of an inner shadow as well as long as your y axis is at zero it will kind of it'll just kind of all come in together and it won't be shifted one way or the other so that would be another way to do it with an inner shadow. If you want it to be a little bit more discreet without a full hard edge stroke you could kind of achieve that same effect but then again these look a little bit set back so again it's a stylistic preference for the opacity and however you wanna use it. Another great way to use opacity is for Background Overlays so let's just give ourselves a big rectangle here. I'm gonna pull in an unsplash photo and let's bring in some architecture maybe as to get one that's a little bit lighter. So let's say we were this is not the greatest photo actually, let's do one more. Trynna get one that needs a little bit of background transparency love. Okay, this is a decent one I guess. I'm not exactly sure what kind of foot that is but we're gonna go with it. Is that a camel? I don't know I think it's a camel. So let's say that we have a big background images. Camels are Awesome. We're trynna create this header and this is the photo that we were supposed to use and let's say we're gonna try to make this a big thing. Camels are Awesome. Maybe Awesome Camels has a better ring to it. So we could try a white text but you can never know the white text looks much better on top of the dark background and then maybe it gets washed out a little bit more like this. Bring that in a little. So a very easy way is just to add an opacity. You can do a gradient or you could do just the solid. Start off with full black and maybe you go 90,80% something like right in there is a way that you can create a little bit more contrast. I'm gonna duplicate this and sometimes it's easier to have the opacity on its own layer so you have two separate objects. That way you can control maybe it's a little floating tile that you use in a different kind of way so this is not the most incredibly designed example but it just kind of gives you the idea that you can use these opacities as their own little elements as kind of Background Overlays. You can experiment with different colors. You can use white with black text. So there's it's just an easy way to create a bit of a contrast when you need it. The other example of this would be so say we clicked on an item and we have a background modal that pops up. Maybe it's an email form or some kind of alert and let's say we put a smooth shadow on that thing and it looks pretty decent maybe we have a button here and some text. I'm not really gonna design this fully out cause I just wanna bring in the example. Move this down a bit so there's our example kind of a poorly designed text box example. We'll give this a little bit more love on the button just so it looks a bit more like a button. So if we're on top of an image this looks okay but sometimes the background could be quite distracting so the same way that we're using this backgrounds for the text overlay we can also pretty easily just create this overlay over the entire image. I'm just gonna send this down the layered area and then we can bring in maybe a 60% black you can really you can create any color, any opacity for these Background Overlays ang again it's a stylistic decision maybe your overlays are standard kind of 70,50 you can kind of play with the range of that overlay that you're gonna use and it could even be white maybe it's kind of washed out or it's a little bit of a gray. You can kind of use your brand colors or use your structural color palette to kinda inform the way that you're gonna create this overlay and sometimes it can create a really nice effect especially if you're maybe you want this really light background and the dark looks a little bit too harsh it's kinda up to you to use these overlays to separate the content and kinda create this environment for your interface to live and unpredictable backgrounds. I think this is let's see, do we have a floating or fixed elements? This is kind of the same thing as we have right here. This image is an unpredictable background so if we went and we kinda change this back out. Unpredictable. Let's go a little smaller there and change the resizing. Just gonna kinda tighten this up a little bit there we go 20 all the way around so I'm gonna group these two things and what if this was like a little tag? And maybe this is a little bit of a blur say 80% blur. Well now any photograph that we put in here is actually going to work because we have this black background and it's only letting a tiny bit of white come through or light from the photograph so it doesn't matter if this is a full white background it's still going to work and you can still check your transparency on a full white background and you can see you're gonna have a very good contrast, testing that on a white background but any photograph that you put in here is going to work to a certain extent I mean the composition for some photos might be a little different and you may need to change your composition and your layout based on a photograph but in terms of just having readable text on top of a photograph this is a great way to do it and you can also have this stuff can be interactive if this was if this is like a caption you may not wanna hide captions by to fall but you can always kind of maybe a better example would be, grabbing one of these avatars and say this is your profile page and then as you I think I have some cursors that I can bring in. Cursors set a library that I have. Cursor we wanna add to vate our cursors then I can bring this over to make it look like it's hovering and so this might be the default state and this one may have again a very simple, solid little hover gradient hover or not a gradient. This might have an opacity and let's grab an icon from our feather pack. Let's do a pencil or a camera maybe a camera will be better. Okay, we're gonna make this white. So there we go I'm gonna center that in there. So again, very simple way to create this hover effect. Maybe this is editing your profile photo on whatever platform you're on and maybe on mobile you're not gonna have hover effects so you have to be careful with explicitly saying certain things on mobile versus desktop but on desktop experiences you're quite often going to have the hover effect and so this all could very well just kind of fade out as one object here there we go so that you can imagine if that was the hover effect right there. Just a really easy way to separate that content if you wanna layer things the opacity, background opacity is just gonna be a great way to separate that content. So another let's do the map sickle plug in and we'll just paste in this map right here. Now again for floating or fixed elements the same kind of way we did this I'll actually just copy and paste this over here because it's really kind of a similar idea. Say we had some kind of map controls and oops that was the wrong one. Steve Feather real quick. I don't always only use feather icons but in the interest of speed for these lessons I am. So let's see location. Let's say we want to pop this thing in and we want to make this white. I can just pull it I'm pulling it through a frame. Let's get that out of a frame they said in my group maybe this is more like 24 by 24 to match the dimensions of this and then I can go a little bit larger. There we go and maybe I wanna put some corner radius on this thing. Put this right in here 40 from there so again no matter what map we're using here this overlay is gonna work nicely and you can experiment with 90% I mean full block could work it depends on the style and the direction that you're going for but you're gonna be better off staying in the 80 to 90% range on some of this stuff and text opacity on colored background so let's just say we have, let's actually add in a gradient here just for a better effect. Let's go with our blue to purple kind of gradients we'll keep this at 100% and let's give it a little there we go and let's say this is like a subheading at like 16 maybe 14 pixels. Center that maybe this is regular medium let's do medium so if we want to kind of de-emphasize this area or an honestly even if we have the exact same style for two different pieces of text so we can just add a little opacity on this to de-emphasize that bottom text and it's gonna suck in that background color no matter what it is so you can see that okay this I put this at 60 we could do 70 or 80 as well. 60 seems to work well for now and then if I go and change the gradient, let's go to HSP so we can watch our slider app and we'll go with like a little bit darker color. So no matter what color we go to it's gonna have it's gonna pull in that same color because the text opacity and you do have to be careful with opacity and text opacity because you can never fully predict if this is gonna pass contrast or not so you can see this one's starting to fail and a lot of times you might actually need to pick that HSB value and really lock into a fully 100% hex code value or HSB value but the opacity to start with will give you a nice starting point and sometimes if your 60% is too low then you can bump it up to 70 and then retest on that particular gradient you just have to be careful because this will depending on the background this is gonna start to fail in certain instances whereas this one would always pass because it's a fixed opacity background that it's not gonna change depending on the background. When you don't have that background is a little bit more dynamic that is definitely a little bit more susceptible to a contrast problem. But not to say that you can't use it it's just you have to be a little bit more careful with it. Alright, so the blur I think is almost like an extra icing on top of all this so I'm just gonna I'm gonna bring some of these frames down here to kind of continue to explore the idea of what a blur can do so we're gonna look at a Gaussian blur would be kind of grabbing this whole image here and adding an effect and putting this and in Figma it's called layer blur and then you can really crank up the blur to give it this interesting effect like this. So that is very similar to the idea of putting on a Background Overlay but it just kinda creates a different style and again, direction is your app is your project is your website a website that's going to use blurry images as backgrounds these are some of the things that you need to explore and decide on before you just kinda start going wild with blurs but you can mix the blurry background image and the overlay together. So if I put a solid color on here the black again and then I'm gonna go to zero percent and then I might just do a 10,20,30 cause you don't need quite as strong of an overlay like you do here you can see like a 20% overlay on this that actually still looks okay but that might be too dark on this so maybe you just do a 10% and you get a similar effect because of that blurry image and it's definitely more of a it's a more of a stylistic preference and okay so background blur so that would be an idea of Gaussian blur so if I pull this one over here again and let's just mix this up, different colors just so we have some variety in here let's go ahead and grab ourselves a different unsplash image and I'm actually gonna take this layer blur off so unsplash, let's do a plant there we go that one's pretty nice. So let's say we wanna play around with the background blur so let's grab the background of this modal. Now this is a very iOS type of thing so I am going to put on one more drop shadow or effect rather I'm gonna change this to background blur and you can tell nothing's really happening right now because I'm blurring the background but there's no opacity so what I really need to do is change the fill on this a little bit and I'm gonna remove the shadows just so we don't get too mixed up. Now that I have this at, lemme put it at 10% just so you can see a little bit more of a dramatic, see what's happening. So the background blur is gonna do just what you think it's gonna blur everything in the background of that image and since these look a little bit weird on that background blur I'm gonna use my opacity trick on just these blocks just so they bring in a little bit more of that color so now I can play with my background blur and you can really crank it up but sometimes it might be nice to keep a little bit of. So if I go too high I'm starting to lose a little bit more of that background image. So like right at 30 or so you can again you can play with this is a stylistic preference type of thing but then maybe you bring in a little bit of white and maybe that looks too muddy so maybe you go to this a black opacity and you add in 20%, reduce the blur to 20 maybe you bump this up a little you could even use the same blue color, go to your HSB range and then just make the brightness a little bit darker but then you'd have to change if you always have to change the fill at least a 90 or 80% to get that blur effect to work but you can tell cause I went with that more medium blue color and now I can go a little bit lower with my opacity and I can still get it to kind of have a nice effect and I'm gonna bump that up. Make it look a little bit more like a title and now you could also you can also go in now and add a shadow back to this thing if you have it like you like. Actually the shadow is actually I think the shadow plugin killed my background blur so what I'm gonna do is copy the background blur, select it at right here at command C and then I'm gonna do smooth shadow again and then apply it and now I'm just gonna hit Command V to paste that background blur back on. So now, if I take this off you can see that shadow being cast and actually it even creates a kind of an interesting color here as well with the blur but again, go back in you maybe want this a little darker so there's different ways you can play with that background blur on things like iOS it's gonna be a little bit easier to implement. They do have a CSS filter so you can use the blur on the web but not every browser is gonna support it you'll have to do a lot of testing so the background blur on this, like I said it's really similar to the iOS Modals where it gives you the alert and the several different buttons and sometimes even the buttons on the modal might have a little bit of blur so or maybe a little bit of opacity so they have maybe your main call to action is right here and then your cancel button is the same color as your main but it's reduced down a lot to 20 or 30% because you wanna bring in some of that blurry color that might be coming in. So there's a almost an endless variety of ways that you can combine opacity and blur with these overlays and you can even put an overlay on top of this background image. Alright, so let's do a solid black and we'll do it like 10% and whatever you put on the background is gonna be affected by this thing so the black is gonna start to bleed in and maybe that doesn't work quite as well maybe you need a white version so there's whatever you put on that background is gonna start bleeding through in this shape right here so you just kinda have to play around with the blur but it's really easy to go too over the top on this I would definitely recommend just starting with simple 10% reduction in black or a 10% black overlay and just go very small increments. If you go blur the background, add an overlay, blur the modal it's gonna feel very Gimmicky. You can already tell the way this one that I just created is it feels a little Gimmicky so I'm actually gonna change that. Especially imagine if I added a background blur or a layer blur on top of this as well you can definitely go over the top and just too many things happening at once it's not gonna work that well so that's kind of what I just did here with Combining Blur and Opacity. So I'll go ahead and get rid of that and say be careful. So for blur and opacity homework I think if you wanna dig into this file and try to recreate a couple of these examples I think one of the best examples would be using an avatar, playing around with the border and have a bit of text with some alert buttons that you could create a modal and you can experiment with some of these background images, some of the gradient overlays or the reduction in text opacity so I would just choose one or two of these with maybe with the map maybe with the avatar and recreate these on your own but make sure you focus heavily on the subtle opacity background that you're using or the subtle opacity on the secondary button and the subtle blur amount and kind of play around with a few different ranges and try to get to something that you feel works well and it might kind of expose you to some of these techniques that you might not have tried before so you decide which one you wanna take and best of luck to you.


=== FILE: 5-07-0 style.txt ===
------------------------------
﻿- So if you haven't noticed, this entire module about style is a lot about art direction and design direction and, how do you want your designs to feel? And this can be a challenge when you're first getting started. A lot of times, you want to look at inspiring work and recreate it, and you want that look for your project. And that's totally understandable, that is a great way to start. So in this lesson, it's gonna be a little bit different. I'm gonna break this up into multiple screen recordings and we're gonna go through five different examples of some nice work. We're going to deconstruct how it works. We're gonna learn how to pull the energy, the design energy, out of those designs and apply it for our new work. And we're going to expand our skill to see something and know why it works without just thinking, oh, man, I wish I could design like that. So I'm going to cut this intro video out here. And I want you to just keep watching the next video where we'll dive into a big deconstruction of the first example.


=== FILE: 5-07-1 style.txt ===
------------------------------
﻿- All right, for our first style deconstruction, we're gonna take a look at this random app that I found on Tribble. That's just got a really nice, clean, fun, playful, modern, trendy kind of vibe to it. So let's really dive in here and see if we can figure out what's going on. So first of all, the colors are great. They're simple and they're done really well. You've got this white and yellow and black, and that's just like a really good combination. And it's not just those colors. It's the amount of colors they're using. It's primarily white and yellow and black is used more as an accent. Now, this design does have some issues. For example, I'm 100% sure that this text on that white background is going to fail accessibility, but that's okay. We're just trying to figure out what makes this one work really well. And one of the ways that we can get started is really just to recreate pieces of the design. So if we just grabbed this, give it like a 60 pixel radius, pull it over here to the side, I'm gonna make that white. And actually I'll go ahead and do this yellow. And you can see they're using a really very, the same corner radius as this kind of slide up modal thing here. So I'm gonna go ahead and scale that down and make that one white. And you can say that on this gray background, it doesn't work quite as well. So I'm going to create a frame here and I'm gonna give that frame the same color as their frame, which is kind of this mustard yellow, and even still, this doesn't quite look the same as theirs. And the reason is because they have pretty big, yet subtle shadows on that yellow. So let's go ahead and add a smooth shadow to this thing and try to make it feel a little bit like theirs, we're just gonna play with the sliders and it's probably not that dark. They have quite a bit of blur on it. So we really got to pump that up all the way. Just trying to make it seem a little more subtle. We might have to go in here and reduce the alpha a little bit more something like maybe right in there. We could try variations of that, but it gives you an idea of how that's gonna look. And if you wanna combine all these shadows and into one, you can click this and let's just say, we'll just call it shadow for now. And that way we can just kinda toggle on and off a little more easily, but now I can make that go away and we can just see how this looks side by side without let's go back to our effects and our shadow is still here. So you can see there's a big difference between this one and that one, this one has just a little more depth to it. And that's one of the things that just kind of makes, it has a nice environment, it's with that shadow there. And the other thing that's kinda making this nice. You're getting these pops of white on top of the yellow. So I'm gonna bring that over there. Looks like they're probably using maybe not the full 60 pixel radius, maybe 30, maybe they're going halfway with it and they've created more depth. They have kind of a shadow coming off of this, but then also these transparencies. Now these corner radii, could be a little bit more cohesive if you'll remember in our corner radius lesson, we figured out the formula for that. So if we did a Shift + Up and over and let's give this like, looks like they're using this, maybe this darker color, or maybe they're using black and 10% now, they're definitely using kind of a color in this space. And maybe it's a darker color, let's actually make this 100, and, that's definitely not it, it could be just the way that they're casting the shadow on these. I'm just gonna copy the hex code for now. And remember if we have 30 pixels here with 10, the outer, they're doing the bottom okay, the bottom edge right here should be straight. So we need to break that up. We'll make this 30 and then for our bottom right edge, we'll go zero, same for this one. We'll go to zero on that one. And this one should actually now be 40. If we wanted the actual container to have a slightly better radius, that kinda modeled that a little bit better. So then if we duplicate and then go over, we could make that one 50 and sometimes you have to play around with it I'm not sure if this is gonna work, we may have to go back and change it a little I made that a little bit darker. So we can go with some opacity here and you can see there's this one right here. This white is, it looks like it's much closer to the foreground than ours. And that's again because of the shadow. So I'm actually gonna grab this little piece and choose our shadow that we've already set up and let's see how that looks. It might actually be even darker on that. So you can tell that there is a lot of nuance on this little thing. It seems kinda simple, but there is a lot of nuance on it. I'm actually gonna go back to 30 for these, just to see how that looks. It's actually kinda tricky to pull that off you. I think they're using kind of tricky to figure out that color that they're using. I'm gonna go with this orange again and bump this back up to 50. It looks like that might be more closely related to what they're using. Very subtle colors. So I'm gonna, I'll leave that one there for now. Now I'm just gonna add in a little bit of this detail here. So I'm just gonna draw right on there, draw the circle and we'll do it right at 90. So we need one with just a stroke and it's gonna be this very super light gray color. And we need another one with this color. And for this one, I'm actually gonna grab this arc right here. This would be only doable Figma I don't believe Sketch or XD or any of the others can do this particular little trick. So it looks like that's right at 4%, still leave that point right there and just double click into it and then delete the point after we added that thing. So temporarily just gonna bring this over here, 85 we'll use enter, and that looks pretty bold. We'll use a bold font, try 24 to start with, notice they're also using the percentage, isn't just a big 85% they're making it a different weight, kind of adding this little stylistic percentage sign right beside it. And you can tell it's, there's this kind of a nicer percentage, it's nice circles. But what we'll just stay with this one for now. Now I mean, this one doesn't look bad and let's center that in there. And now, even though this is mathematically centered, we're gonna cheat it to the right, just a touch to kind of optically center it. And now I'm just gonna bring this whole thing over to our design and I'm gonna vertically center it there. And let's just get a check on these measurements here. Let's try to get all of this to 36. I need to remove three pixels of heights. So I'm gonna Command click and then hold Command and hit one, two, three, one, two, three, gonna make all these changes. There we go, all right, now let's pop in this little black tab here, pull this over here. We're gonna pop it right on there and grab this color. Notice that it's not fully black. It's almost got a little bit of this blue hue in it. And if you'll remember yellow and blue are a bit of a complimentary color, try 20, they may have done 30. It looks like they did it a little bit smaller. You can tell the radius on this black tab is a little smaller than that. And also this looks like it's casting the shadow as well. So one of the things we might need to do is take the shadow off of the white and then we'll group the white and the black, and let's put our, this is our little percentage. So we'll put that back on top and we're actually gonna add the shadow to this group. That way the white and the black layer both get the effect of the shadow like that. So you can see now, the layer, the drop shadow is coming off of the white and the black because of the shadow is added to that entire group. All right, so already you can start to see we're starting to recreate this feel a little bit. And one of the things that's really making this work is, I mean, look at this negative space. This is 168 pixels of negative space from the top. If we were to measure this ours might need to go down a little bit more, could even group this whole thing. And we could just, we don't have to draw all these icons, but I just wanna point out that it's not too challenging to draw a magnifying glass, just draw your circle and add your stroke. Looks like they're going with a little bit thicker than two pixels, it might be three. And then the thing to do here is add a line right in the center. And we want that to be three as well. We want to make sure we do Control + P we can have a pixel preview. And in order for an odd stroked line to be centered, we need an odd width. So instead of 22, by 22, we need 23 or we need 21. But now you can see, this is centered. Like, just check out the way it's lining up in those pixels. So if we were gonna do a two stroke, we'd probably need to go with an even number. And then once you have that, then you can group it and then just rotate the entire thing, 45 degrees. And that will give you a nice little search icon. And then if you need to make this longer, no problem, we'll just do Command + Right. And that will nudge it to be a little bit longer. So I'm not trying to recreate that fully, fully, exactly, but it's pretty close. It looks like it might have a rounded cap as well. So I'm gonna Command + Cut that, paste it into here. And you can just start to see, okay, the negative space around all of this, and then these kind of cute little tabs or icons or whatever you wanna call them. They have quite a bit of radius on them. So another kinda trick that we can do here is hit the five key to do a 50% opacity. And then we can see how much these things have on them. It looks like about 24 or so, and you could even experiment with the corner smoothing like 60%. Now I can just Control + C select that color and hit zero to make it 100%. I'm gonna cut that and paste it into here, make a few copies, these should be black. So all of a sudden you can start to get an idea for how this is starting to feel. And it's kind of because of this giant block of yellow, and then these really punchy contrasting colors with the white and the black, and then these kind of muted background colors, that's what's giving it this feel. And you can see that this second screen that they have, let's go ahead and make our frame a little bit larger and we'll copy these two items over, oops, lemme select both of them. And so the second one is kind of like this has happened and we'll put in the name just to kind of get an idea of what's going on, just to kind of see how big are they actually putting that type, so we're already at 46, let's go up to 54, maybe they're at 52. And again, it depends on the type face 52 seems to be pretty close and then let's do semi bold. They're using a bit more of a, kind of a grotesque with these rounded geometric shapes. So if we wanted to really mimic the style, we would need to find kind of a humanist grotesque type face with these big, you can tell these look like circles, right in here with their O's and their E's. And this Inter typeface is a little bit more oblong, but that's okay, I mean, we can still use this and get an idea. I'm gonna bring this right over here and notice how they have a really strong vertical edge right here. So they've got a strong vertical, and it's inset from the side about that much. And then if you look at the other one over here, it's probably pretty similar. So they're using the same left margin and that's just really creating a lot of negative space. It's creating the ability for them to break this off to the left. So even though it looks really, really simple, you can tell that they're doing a lot here. Even with this bottom tab bar they're actually, they have this tab bar in here, but it's hiding. I'm gonna duplicate that and reduce this by about, we'll just pull it over here to get an idea right in there, I'm not trying to get too mathematical right now I'm gonna a hold Command + Option at the same time to grab just one of these corners and then Command on the second one. And then just to kind of mimic what they've got here, I will draw this rectangle, hit the five keys for 50%, pull this into about 20, which seems to be what they have hit zero, to bring it back to 100%. Select that color. And now I'm just gonna pull this over here and notice that this is also lined up right in here, all this stuff right here, strong, left alignment, very simple layout principle. Just gonna bring that to the top and let's grab. So they're using the same exact shape for their avatars as well, kind of a nice, consistent little shape. So it actually might be a little bit bigger, but I'm gonna leave it there for now. Will add our own little avatar and we'll put these, I guess, right in there that'll work. Not exactly sure how many they have across there, but you get the idea. You're starting to kinda see how this is laid out. And it's really, it's the color usage and the layout and the negative space and the typography all coming together. So if we wanted to recreate this for something else, we would have to note, okay, they're using one large typeface for the title, and they're using the smaller typeface for these individual sections. And you'll notice this is not even necessarily, it's not even that perceivable of what the app even is doing. I wouldn't call this an amazing user experience 'cause I don't know. It just has a nice look and that's what I'm really trying to get at here is how do we deconstruct the style and use this look and the way that this feels and the cleanliness of it for our own project? And so it's gonna be a usage of the yellow, the white, and then these punches of black here and there. And if there's a timeline view, and they're kinda just playing with this left alignment with the offset to the left, this might work just as well if everything was a little bit more symmetrical, I'm not sure that's something you could play around with and experiment on your own. But once you try to deconstruct an existing design like this, it starts to, you get exposed to some of the decisions that were made while they designed it. And maybe it might help you come up with some solutions that you might not have come up with on your own, or at least not as quickly as you would have. So I'll just do another very quick small amount looks like that might be 18. Notice how they're the same way they did the bold 85 and the light percentage. They're doing a bolder, a moment and then a lighter, ago definitely kind of an interesting little type treatment. And then you got 12 minutes notice how nice that big circular, A-G-O, something like, what would be a good humanist typeface, something like, What was that typeface I used? It's made by Canada type. Gosh, what's the name of that? So this would be something maybe a little bit more like Gibson, which would be available on Adobe Fonts, I believe. And you can tell, I need to go up to 20 if that's Gibson and it's not Gibson because you have a different A. So that could be a contextual alternate. But that's a little bit closer in terms of the way it shaped, but I'm gonna leave it at enter for now, just so we don't get too mixed up here. And we go bring these over here, make sure that we left that grab our random little container of avatars and bring it up here. So we're kind of getting exposed to, okay, containers of avatars, this really, really, really light gray container. Okay, maybe this is the background for all the avatars. Maybe the home screen has yellow and it's, we're not trying to completely rip off this design. We're just trying to deconstruct what makes it work? Why does this look good? And you may not think this looks good. It's just one that caught my eye that I thought was interesting. And so the main things that are making this work, we've got lots of negative space, really punchy use of color, a very delicate balance of Z index with color and with shadow, you can tell the yellow, it sinks back into the background and the white really pops to the front. So this really delicate play of Z index. And then these very, very, very light gray containers for the avatars and whatever this is down here, kind of a fun use of typography where they're using bold and then a regular kind of combining those together, even for this internal storage. So they're going bold and then regular and bold and regular on the subtitles. And it's not to say that that would work all over the place, but it's just a matter of what is working for this design and what could I possibly carry from this into another project? So if your project was completely different and the content was similar, you could use some of these styles to kind of inform a certain look and feel that has kind of this rich, colorful layout and style. So that is gonna wrap up. I'm gonna stop it right there for the deconstruction of this first style, and I'm gonna continue to do a few others just so you can kind of understand and start to look at and try to point out those three, four or five things that are really making the design work. And again, just to recap on this one color, lots of negative space, interesting play of bold and regular typography, the yellow going to the back, the white coming to the front floating tiles, subtle shadows, little gray containers, little icons with lots of negative space and a very strict grid that left a line over offset grid. All of those things are coming together to kind of create a nice feel for this app.


=== FILE: 5-07-2 style.txt ===
------------------------------
﻿- For our second style deconstruction, we're gonna be taking a look at another shot that I found, and I wanna just point out what is working here on this shot. So if we zoom in here, a little bit more, let's see, it just has, it has a really nice composition. So you've got all this stuff on the right side that is, I mean you could argue that it might be a little busy, but it's just got some nice flat colors. And then it's balanced by all this negative space over here. I could even possibly see the search field being white or something like that just to make this stand out a little bit more especially, we wanted that to be a call to action, but overall the balance of this section up here, just a really nice, clean header. You can see all of the text is aligned on the baseline and it's got a nice big header Text H1, and they're using maybe two type sizes, I think the navigation and the search and this stuff down here is the same type size. So two type sizes, lots of negative space, really cool layout, lots of colors. And also note,these are really good images. These are just random. They might be random stock photos, but they don't feel that way, they feel like they were, they could have been all taken on the same photo shoot. And that just has a good feel to it. It's got a nice logo, geometric shapes and it just I don't know, it just has a nice balance. The colors are clean and crisp. It looks like we do have a typo here but we'll forgive them for that. So let's just try to deconstruct this and kind of put together some of these elements on another art board. So I've got this art board over here. I'll just pull it in a little closer for now. And first, I'm just gonna start by getting some of these colors going. So bring this over here. And really nice kind of deep purple blue, you can see that the HSB H value is on this kind of really nice, just really deep blue. You could even do 240 if you wanted to stay in that range, but that's kind of how you can tell what is causing that rich color. You can always just go and inspect and it's not this way over here, it's way over there and that's giving it a bit of a richness. So remember, whenever you're trying to design these rich colors, you can add a lot of saturation, you can say this is 50 saturation and 30 darkness on this blue color. So even in this range on any of these colors, you're gonna get like a darker muted kind of rich color. But in this example, the deep blue purple works really nicely against this other background color. Which is you can also tell I've selected this background. This is also 243, and it's just, it's basically there's our foreground color. And then if we go up just a little bit to right in there, that's our background color. So they're using these really saturated colors that creates this rich color scheme. Alright, so now, let's just grab, I'm gonna copy this shape. And just create a bit of a panel over here, and I'm just gonna select this blue color that is kind of omnipresent in that background. And let's check out this so they've changed the hue a little bit here, and that's totally fine when you're combining colors, you can change the hue but notice that it hasn't changed from 240 to 100, or zero, if we went to 100 when actually that color looks pretty good. And actually a lot of these colors look pretty good, it's in that same kind of saturated range. Most of these colors honestly look pretty good, but it's because the saturation is pulled down to 37. And it's not fully, if it was like way over here, a lot of these colors might not work as well but because it's still in that middle range, it has a nice look to it. I'm gonna pull that one in. And actually now that I'm looking at it, this pink color could probably have a better saturation level. This one's vibrating a little bit harder than the peach and they're kind of creamy red, and this blue in here. These are working really well together. Even the yellow, I think this yellow, and that pink, they could probably use a tiny bit of work cause they're, they feel like they're vibrating with the blue just a little bit. Let's just go ahead and recreate a few more of these just to kind of get a feel because the colors are really nice. And that's one of the things that's making it work really well. I've got my circle, and let's do another circle, make it this color. Alright, so that one is underneath that shape. This one is gonna be on top of that shape. And one thing what I'm gonna do is, I'm gonna go ahead and group everything over here in this panel, and I'm gonna create a mask with this bottom shape. I'm gonna create a mask with this one, right here, create mask, use my assets, Ctrl command M, and I wanna, actually before we do that, let's go back and let's duplicate this shape. Remember, we've got all this in one group. So this will be our right panel. This will be our circle. This is gonna be our background. And this one's gonna be our mask. So we'll hit command control M to create a mask. And that's just gonna let us bring this circle over here like the way they have it, all right. And because this circle is darker, It almost looks like it's creating a shadow, which is kind of nice. And if we would have used, see how our color goes away if we have a mask, so if I use this color panel as my last shape, use it as a mask, its gonna remove that color. So that's why I duplicated that shape. And for this one, I'm gonna draw a rectangle here, and then we're gonna only radius the top two points, to recreate that shape here. Looks like there's a bit of a grid here you can kind of see here, so if I draw this shape right here, and then I duplicate it a few times, I'll make it another color just so it's a little more noticeable. So you can kind of see there's a bit of a grid here with this shape, and then the smaller one and then this bigger one. So they are using a bit of a grid to create this layout. However, they are breaking it with this shape up here. But it's just worth noting, just trying to deconstruct like, what are they, how are they creating this? Is that completely random? Is it just luck that they put all this together, but so far, it's good, rich use of colors, and it's this grid that they've used for this particular system. We're just gonna keep going. I'm not going to use a grid quite as strict as they've got just because I don't wanna take forever on this. And it looks like they have a little rectangle covering that thing. A lot of times when you're working on some kind of visually interesting thing, you're gonna have to just experiment with colors and position of things. And it's gonna take a bit of time to try to figure out what's gonna work for the shape, what's gonna work for the composition, things like that. But you can tell, we're just cruising along trying to recreate some of what's happening here. So in this instance, we've got these three that are gonna be rounded completely, but not the corner. So let's select this color, bring that one right there. And let's see here. You can kind of tell how that would fit in there. I'm not gonna worry about this too much, cause I just wanna give the basic idea, I think that's probably good enough. You can imagine how the rest of the things are laid out. And it's not necessarily a bad exercise to recreate this completely just to see you know what's going on here. This blue color, this blue call to action, this rich dark blue color is the same exact color as this background here. And another thing that kinda adds to the rich layout you have this big negative space, but then they're using this this really chunky Sans-Serif kind of geometric Sans-Serif, it looks like it could be Montserrat or something like that. Let's go ahead and type in find your perfect music, teacher. Let's go down to 64, it's pretty close. 65,66 something like that. Maybe not the exact same font, but actually it might be the exact same font. So they just have this set of auto line height. Let's just pull this over here. And they've got this search box here, right in there. And I don't necessarily mind these shapes underneath here, but like I said, this blending of the background and the input field, I'm not sure if that works as well. So I would almost be tempted to go with a white and say search for your teacher. I did not type that correctly. I think they're using old for that. And you know, gray might not be the right color for this particular layout because everything is so rich, so rich, and you know, they're using, they're only using blue and white as their text colors. So we could try go, we could try with blue, but that would be a little bit a little bit harsh for input field text. We'll change that in just a second. Just gonna draw myself a little search icon, or the millionth time, give it a two pixel stroke and round this corner around the cap rather, okay, group this, rotate it. I'm not really too concerned about the size right now, we could always dial that in later. Something like right in there, and they've got the arrow so this could possibly be a little larger. So another thing you could do here is bring up the brightness, and the light right in there, so that way you'd still have that rich kind of purple gray. But again, always make sure you're checking your contrast to make sure you've got at least double A plus for a placeholder text. If you go with double A or larger, it's probably gonna look more like a button. You gotta be careful there. So that's a good start. So what we're doing here, we're just trying to figure out what makes this look good. And the more I look at it, the more I think that this could be cleaned up a little bit more even on theirs. But this is, I would say, at 92, 93%, in terms of being just really nice and done, there's always gonna be things that you can improve. But overall, the things that we can take away from this are nice, rich colors. Even the flat colors can create a sense of depth and really kind of experimenting with four, five different colors and the same kind of muted color scheme can add a lot to this darker, richer color. So there's a big contrast between this dark ,dark rich blueish, purple, and then this baby blue, but the way that they're playing off of each other, and then the mix of these other colors could be an idea for something that you're working on. It could just be another way to remember, Oh, yeah, which you know, and as you're looking through any of these, it's just important to try to always point out in your own brain like why, why does this work? What makes this look good, what makes it feel good? And I think the things that I would point to in this one would be the rich colors, the negative space around the headline, it's very, very colorful, and it has a nice baseline alignment with the type and the call to action at the top and it just has, you know, even with the bold kind of geometric, sans- serif font, it just gives it this simple punchy contrast, that seems to work really well. So you can see if this was just a completely different font, it would just start to have a slightly different feel. Not that you couldn't use a sans-serif or a Sarah font, but it just might not have quite the same feel. This one feels maybe a little bit more official or a little bit more classic, whereas the other one is a little bit more modern. So it really just depends on again, the direction that you're going to go for. So all of these are gonna be an exercise of trying to figure out direction, cause once you've nailed typography, layout and color, the direction and the style of the direction that your project takes, that's gonna be one of the harder things to nail down. So, don't sacrifice fundamentals type, layout color, that's always going to be extremely important. But as you progress, start to look at things like this and figure out what about it makes this style work. So that's the second one and we'll move on to the next.


=== FILE: 5-07-3 style.txt ===
------------------------------
﻿- Okay, on to our third deconstruction session, and this one, we're gonna be looking at a little bit of a calendar app, and there, the all of these designs and all of these examples, they're not necessarily the absolute best, user-experienced, well-rounded product, but they have some kind of visually interesting thing that I wanna point out in each one of those. So, let's take a look at this one, so, this calendar app, if I'm thinking of pure utility and function, I'm not necessarily thinking that this is the greatest experience. It's maybe a little confusing with which, like, it's a little confusing, like what time does this start, one to one with Sylvia? Begins at 45 minutes, but what actual time does it start? Like what if I don't know what time it is? You know, and if this is an iPhone, then we would have big, rounded corners here, and this is not a good place for that action because you have the home bar. So, there's different, there's different, there could be different issues, product wise with some of these examples, but I'm not trying to point them out because of their product excellence, I just want to point them out 'cause they're visually interesting, and we can always learn from something that is visually interesting. So, in this example, this is actually really similar to this first example. It's got a big header with lots of negative space and there's really negative space heavy icons, and then there's really strong left alignment. So, if you come down here you can see heavy negative space icons, strong title and some pretty strong left alignment. And, you can also look at the way that they're playing off of the bold and the light treatment, if I go here you can see a little bit better. So, I don't know if you remember, but in this one we had semi-bold and then regular, so, they're actually doing something similar to here, but they're also changing the color. But it's just a couple of things that make this visually interesting. So, I'm just gonna really quickly recreate a little bit of this, just to give us a sense of what's going on here, alright. So, we have our frame, we're gonna go this week, and this is big text, not sure how big, not quite 60 maybe it's 54, it's close, close enough, okay? Now, let's make sure that we make this ones like semi-bold or bold maybe, probably semi-bold. And this one looks like it might be thin, or light, you can definitely tell that the x height on this one is a little bit lower, If you look at those lowercase Es, you can see those are a lot lower of a lowercase E. And that is totally fine for display typefaces. It's a cool look, typically the higher x height will increase readability. Let's grab our gray that we're using here, alright this week. And these icons are simple enough to just recreate that is two lines and that is it. A little, a little hamburger menu, maybe this is like, I don't know maybe these ones, maybe they took the top bind off because they are trying to cut back on carbs, you know, you never know, okay? So, that's probably left one there, and then this, this one is just gonna be a little rectangle, no fill, stroke two pixels, and then two more little lines, it's like both of them, maybe have the same style by hitting command options C and V on those shapes, just kind of centered a little bit. These actually have rounded caps, but because everything else is square including the other icon, I think I'm gonna leave it like that. So, normally, I would do a little bit more work to these icons, but I'm not gonna spend too much time on that right now just because I wanna get the main part of the layout in, alright. So, we've got this week, we could even potentially reuse this font, the Montserrat that might be a little bit closer, I'm not sure, let's just make a copy and try it real quick, not really that extended, I'll stick with Inter and it looks like these might be a little lower, okay. So, already this is kind of have, this kind of has a nice feel and it's the negative space and it's simple little geometric icons, and then we've got just one secondary typeface, I guess same typeface but secondary size, I mean, this is kind of an interesting idea with the big Wednesday, Thursday or Wednesday, Thursday, Monday, Tuesday, okay, Monday, Tuesday, Wednesday, but it seems like the new date should be at the bottom is as if this is today, anyway, I'm not gonna worry about that. Some possible, possible usability issues, I'm not sure, just wanna, okay. So let's, and let's also quickly point out here that this needs to, these since they're gonna be even though these are left aligned here, we're really gonna want to center-align these, anytime you do vertical texts like that, you're pretty much gonna want a vertical align those are horizontally aligned those so they, so they're nice if they were full words, we could go left line, but they're just gonna be those letters, then we should probably leave it. So, we got grooming, first sketches, whatever that means, let's go with regular they're 9:30 to 10:00, probably the same gray as observed, or actually that might be too light. And this is just straight up looks like black and white, not much saturation to this, looks like they are using a smaller font for the time, I'm not sure, I'm not sure if you would want the actual time to be so small from a product perspective, but we're gonna go with it because that's what they did, and we're just gonna recreate it just to kind of get a feel for everything that's going on, and actually I need to left align this text. I'm just, what I did was select all of that stuff, Command Shifts D select the background, and then Command Option L, you can see over here in the alignment panel, watch right here as I hit the quick key, so Command Option R, Command Option T, Command Option L, will quickly change that to left center, et cetera, alright. Then we have our one to one with Sylvia, and I guess because that one is coming up next, they've got a little more bold. Now, like I said, I don't know if this is the best experience, the greatest format for a calendar app, but I think there are some takeaways that we can figure out from this particular layout, okay. Here's what I'm gonna do, zone, discussion, I'm gonna delete those others and then we'll just copy Option, drag this down, duplicate it with Command D, and then it'll just change these all like that. And we also have 27, and that one's gonna be much smaller looks like there's probably a little larger than that one but I don't know if I'm gonna center-line that text as well, and center it with that could be a little larger, but there we go, 25th, probably put a space in there, actually, now that probably doesn't need a space. This is probably a little too light at that size, you can see this is bolder, which looks a little better. Remember, the larger the type sizes, the lighter weight you can go, but when you're doing this small, probably don't wanna go that I would, I would very rarely, probably never use a light typeface, a lightweight for a typeface that's small, I would only do it for display type things like this, alright. So, that's pretty much everything, pretty much the entire app minus this red little button here, and I don't know, this whole thing feels kind of like hard-edged with the hard edge icons, color and everything, it almost seems like the non-rounded corner would look better in this context, let's do that, give ourselves a little plus icon like go a little smaller. That gives you a little bit of an idea looks like I have some stuff moved around. And then the, let's just group all of this, I'll bring this to that page, looks like they have a giant shadow on this image, they should probably, it's casting actually like a huge shadow on this other screen, which looks a little bit odd to me, but I'm just gonna put another, I'll put a big shadow on this one where offset lies, so that would be like going straight down there, they have those kind of angled, they might have done a different one, but then you could, you could imagine reusing this exact same template and just changing out the colors a little, looks like they're using a little bit of a saturated gray on that one, but even, even this, I mean, it's kind of a interesting, it's an interesting kind of idea. They're doing calendar and light, Light UI style. And then they've got this darker version for creating an event, which I think is always kind of fun. Although, if you're, if you're hitting this red icon, at almost wanna see some red over here besides just like a little slider, but anyway, this is just another example of using this negative space and this kind of bold, regular type treatment, and then maybe like a strong vertical left alignment, strong left alignment here and just really just generous usage of negative space. And like I said, it's really similar to this one with the hard left ad in the negative space, even the icons look like they have a bit of the same kind of thing going on with their negative space at the top. But these just stand out really nicely with that space, if everything was, if this was kind of crammed up here a little bit more, and these were together, and we weren't really that aware of the space we were using, then it wouldn't work nearly as well. This designer here, this is starting to just feel, it doesn't feel good now like there's just too much, even though there is a decent amount of negative space, it's just kind of crammed in there, so, just having, making note of that generous use of negative space around the icons, the title, everything else and having that strong layout grid. So, there's a bit of typography, play with the bold and the regular there's a bit of a layout, play with the grid and the left alignment, and the layout of the icons and everything, that mean shifting the colors from, from the regular view to the new view, there's a lot of concepts inside of here, a lot of ideas that you could take and try to apply one of those or two of those to your project, but there are a few things here that you could really just kind of latch on to and run with for your next project. So, that's another example of deconstructing what's going on inside of this design.


=== FILE: 5-07-4 style.txt ===
------------------------------
﻿- All right, we're on our fourth example for deconstructing styles, and in this one I want to take a look at the Stripe Atlas page. And I want to explore the fact that they're using these very subtle gradients to create lots of visual interest. It's kind of a standard navigation at the top, little bit of an icon, headline, and some buttons, but they created some nice visual interest with these gradients. And they're kind of breaking the format of your standard kind of boxy layout. So, let's just dive in really quickly, see if we can recreate a bit of this. So first of all, I am just going to go ahead and get this background selected. If you look at the eyedropper, you can see the color changing a little bit as I'm coming down here. So it's a bit of a linear gradient, there. So I'm going to add a linear gradient. I'm gonna choose this color for the bottom, and this color for the top. And then, I know it's a little bit lighter on theirs at the top. It looks like it's kinda doing something like this, very very subtle. Very, very subtle. You can barely even see that that's a gradient. But a lot of times these environments, they tend to work better if there's a very subtle lighting. So it's just something to take note of. All right, next up, they've got these big circular shapes. Bring that out some more. So something like right in there. I'm really just looking at this curve, right here. So instead of having this big circle like this, I'm going to make this a little bit easier on ourselves, and let's go ahead and intersect these shapes, that way it gives me just the leftover. That way, now, I can add a linear gradient, and I can tell that I want it to from kinda left to right, at an angle. So this one, we're gonna hit CTRL + C, grab the kind of teal color there. This one looks like it's a three color gradient, with the teal, the purple, and the orange. So let's grab the purple from here, and this little peach color. You can see that we pretty much, pretty much have that gradient in place. Instead of drawing a really really big circle for this white area, I am just going to draw a rectangle, and I'm gonna pull this top left point down. Actually just gonna add a point right here in the center. So I'm gonna add a point right there, and hold COMMAND. You can see the handlebar icon gets toggled when I toggle COMMAND, and then I can just pull these handlebars out, give myself a little bit of a shape. Once I've got that, now I'm just gonna make this white the same way they have it. And you can tell they've got a bit of a drop shadow, going upwards and then all the way over there. Okay. So let's add our drop shadow, going negative direction. Just kind of eyeballing it here. Trying to make it, let's go negative 8, and negative 24. Or excuse me, 24 blur, negative 8. Gonna give it about a 20, 20 pixel, 20% opacity. Looks like it could be a little darker, there. And their orange is showing up a little bit more than ours is, for this rectangle. So I'm gonna adjust my gradient just a little bit, so it matches up a little bit better. And then notice that we've got this second gradient, here. So I'm gonna hit the 5 key, and it looks like it's probably a very similar size/shape, in terms of that contour, just kinda rotated a bit. So I'm gonna bring this over here now, like that. Might need to make that a little bit larger. And this one might need to come over. This one on top, might have. Maybe it's the only one. We'll give just the one on the top, like 80%. And you can tell that the color is lighter here, than it is there. So let's go in and just adjust this color here, something like that. And then for this one, oops wrong one. There's something right in there. You can tell there's a little bit more going on. They have a bit of a, it's a little bit more subtle than that. So the trick is, really, just trying to figure out how they're getting that very very subtle kind of blend thing happening, there. Without sacrificing that nice color right there. I think when we go to reduce the opacity, we're sacrificing that color just a little bit. Also we need to pull this back in a little. Let's see, let's pull this one back in as well. And there's not quite as much purple showing in this little area. So maybe we need to kinda bring that somewhere right in there. Like that. All right, so that's looking a little bit better. Not 100% exact, but just kinda paying attention to the way these colors are playing off of each other. And I'm not gonna go through the process of trying to recreate this entire shape. This is more of, ya know, kinda icon design. Bit we could do a very quick little stab at recreating some of that. See what size header they're using, here. Right in the 32 range. So I'm gonna select, they're using this blue off of the kinda the same color as that call to action. Center aligned. And I don't think that this color, for this typeface, is definitely not working that well on this background. You can see that they had to add this shadow to the text for it to actually be readable. And I'm not so sure that that is actually working that well. But, just so we can see what they did, I'm going to add an effect to this text. And let's play around with this shadow. They're probably using, you can see the black looks a little bit weird and desaturated. They're probably using the same blue color here, for the shadow. And then adjusting these blurs a little, in the Y axis. And especially the opacity. So this is 2 Y, 3 blur. We'll go with 2, 4. They're also not using any blur type shadow on the blue part, and I'm not sure if that works that well. I think this is a little hard to read. But again, we just wanna kinda get an idea for what are they doing, just to give us some insight into design. There's always things that we could do to change this a little. To make it more readable. Different colors. But it's just sometimes really good to see. Okay, they're using 49 pixel high buttons. Maybe these are 50. They're 204 pixels wide. Looks like they've got about, choose that color, maybe like in the 4 pixel range for their corner radius. Something like that. We have a bit of a drop shadow. Probably similar in color to the tech shadow, but with a different blur. Looks like the blur is quite large. Try it right there, for now. And just make this one white. You can tell my blur here is a little bit stronger than theirs, or the color. May need to blur this a little bit more. And it is possible they're using multiple shadows to have that on there. So now let's post this here. That's pretty good, that's a pretty good start. So let's take a look at what's making this have a visually interesting layout. Definitely the colors, and these gradients, and this environment that they've created. These two buttons, specifically, they really pop nicely off of that background. So in this case, we've got this visual weight, a lot of visual weight on this stuff right here. And it's really popping off the screen 'cause of these gradients. If you see, if I remove those, still calls to action, but it just becomes a little bit bland and lifeless. But adding these blocks of color just kinda gives it a really nice feel. Now I do think there's some readability issues, but the icon is cool and they have their kind of standard navigation up there, with their logo. Nothing too out of the ordinary up there, but I think the biggest thing that we can take away from this design is how well these flat pops of color work on this background. We could even take this one a step further, if we wanted to. And let's see how background, put that there, might need to bump that up. So you can see, this actually works okay. This full background. But it's not the same, because this feels like it's a lot of breathing room, this big gray area. And the fact that these are breaking the format on that shape, all of these intersecting, all of these curves and background colors and gradients, they're all intersecting, and where they intersect is the call to action, and that's what's creating that strength. You can see that it's not nearly as strong if we put it together on the right side like this. So something that we can take from this particular style is colorful gradients and intersecting shapes in the background that play really nicely beneath the calls to action, really creates a nice big call to action right there. And overall, it's kind of aesthetically pleasing with these pastels and these gradients kind of overlapping. You could even imagine how these could possibly, maybe roll over, and the background shifts slightly. You could very easily shift these. We could even do a quick little prototype of this, in Figma. So if we hold this over here, and we wanna do on hover. We want it to be a smart animate. And then this one. Mouse leave, smart animate. And let's just quickly maybe just shift these slightly. I just shifted these a little tiny bit, let's see how this looks. So kind of cool. We might be better off if we added, maybe this one coming this way a little bit more. Go back. So pretty simple to kind of create a nice visual effect. But the thing that's really creating this is all of the negative space, these really nice colors that are working together, and then these big flat bold colors on top, with that subtle drop shadow. It's just creating a pretty interesting environment for that call to action, for just kind of the color scheme in general. So this will kind of equip us with another idea for something we can take forward into some of our new projects.


=== FILE: 5-07-5 style.txt ===
------------------------------
﻿- This one's gonna be pretty simple. We're looking at something that uses type size and negative space and a really strong grid. So let's just dive right into this one. And, I just wanna point out the heavy usage of negative space all the way around this very simple kinda four line headline. Then we've got a secondary headline and then these kinda interesting little tiles, with a subtle accent and a subtle little red accent as well. Just a few simple little touches in the mix with good use of typography and a strong grid. So if we just recreate the size of this, and I'm just gonna very simply create a few little lines here just to give us an idea of where they're lining things up and bring this, actually select all of this and bring it over here, make that white. So it's kind of interesting how they're doing this one. The grid, you can tell that it's not quite a full grid. You would think that there would be an even amount of space here, here and right here, but they've kinda cheated this one in a little bit. I'm not sure how I feel about that. It has a nice look. But there could be a cleaner way to do it. There could be a way to create a grid like right in there, and then have these even shapes with the same amount on each side. That might be a slightly neater way to do it. So if we had this page, like that, at least that would be a little bit more, it would make a little bit more sense in terms of trying to explain the way this grid is working. We got forty and seventy, something like that, we'll just save that one down there for now, and pull this over here. And remember, it doesn't have to be the strict grid that we're working on, it's more important just to know that, we're just working with a grid here. You can always change the grid, let's see here, probably in the forty eight range, and then tighten up that line height. Georgia is definitely a little bit wider of a typeface than they're using, there's a little bit more condensed. One way that we can kinda recreate that just a little is by applying a tiny bit of kerning to the entire typeface. Now, you would never wanna just Kern a whole bunch for like a heading with lowercase letters typically or Letter Spacing kerning but you could technically add a little bit of letter Spacing, negative letter spacing, just to try to recreate that just a little just in the interest of trying to make it look a little more similar. I'm gonna put this right on that left edge right there, and then, how we're different, we'll be there. One, two, three, four, one, two , three, four, five . So I'm gonna use these four, just to line up this stuff, we've got, supporting a sustainable ad economy. We are gonna try to type the all thing out without watching it. When it works for everyone. Okay, now, they're actually using a Sans Serif here instead of their standard font. Looks like they might even be going smaller than fourteen which is not something that I would advise. I'll go with Sans Serif. I mean, you could go to thirteen or twelve. But it looks like they're probably using ten or eight and that's just too small. So I'm gonna leave it something a little bit like that. Granted, they have scaled this down from a large size down just into kind of a double short format. But let's just make this with a twelve point font just for now just to see kind of how this starts to work. I'll do a little line, select that gray. So it's just kinda interesting to know they've got a line, a little kicker, then the heading and the body. A group that bring it over here, kind of aligning this top edge with that kicked out secondary header, looks like typo and I think I can get rid of this letter spacing for that one. And let's get in here and make our our line a little bit longer. Alright, so what I'm gonna do is, I'm gonna group these, call it our grid, and I'm actually gonna make this red and then do a lot less of an opacity. I'll make the individual pieces, hundred percent and then the group, I'll make ten percent, just for now, send that to the back. Still want it on top of our white and create. So they've only got two there. So we made up our own grid here, and it's not working quite as well. So let's hide that, you can see that ours has much less negative space here. So just by trying to update the grid, we've kind of killed the thing that was making this work. So if I tried to just kinda get rid of grid temporarily and try to get this looking a little bit better, kind of how they have it, this stuff would all be moved over. And it very well could mean that they're using kind of a split grid, and then they could be using just some kind of individual grid for this and then a slightly different grid for some of this stuff. But you can definitely tell that the negative space is really what's helping this stuff work a little bit better. And that red that they're using on this font is quite a bit bolder than we're using. So I might need to bump that up to Semi Bold. Because it just kinda gives it a lot of weight, right there. So, this is a little bit better. Looks like their lines also are a little thicker. And also, when you're using the same text over and over and over, it's just not gonna quite, it's not gonna look as normal. So it always helps to put in some actual content, even if you're making it up a little bit until this one's a little bit longer. Also, the line heights on this, is probably a little bit too tight because we use the same line height that we're using or that title. So we wanna open that up, give it a little more air and let's grab this put it on top here. You can see they've got a little tiny kind of a similar size, not quite the same size, but cut it out of that one. So we'll put that back, there we go. And then they've got this up here, it's a really nice contrast of color. And they're using that same red down here in the bottom. So these big, strong usages of color, you know, there was just the white in the red, It would have a much different feel, or the black and the red. But with this white and the grid, you can tell that. So we tried to go with that five column grid right in here. And, it's not to say that couldn't work. And honestly, we could even attempt to make this a true four column grid, by putting this stuff here. And something like that could possibly work, especially if we made this a little bit smaller. And that would have a similar feel, to the way this does. But something about this offset top part and then it's kind of like a double offset grid. Just kinda has a nice feel to it. So you could imagine like this stuff up here has its own grid and then this stuff down here has a little three column grid that's offset. So it's not to say that you can't use multiple grids and offset them with each other, as long as you know what you're doing. If it works, compositionally, and it has a good feel, then you could definitely go for that. And it's definitely something that you could create on larger views. And it's not hard to add an immediate query into a website and say, once it gets above this with shift to this grid, and once it gets down below, then you can get into the proper three column grid or two column or a single column. Those are easy calls to make with CSS. So it's not like you're gonna create some kind of design that will break the internet. You just have to be mindful of why you're doing it. And make sure that you've already really explored those tried and true principles or just straight up grid work. And you have a strong reason to use something like an offset grid in this way. But just looking at this, we can take from this again, heavy usage of negative space, big typography mixed with small typography. And then little punches of color in this kind of really strong strict grid It just gives it a really nice typographic feel. And it feels like just good graphic design. So, you're never gonna go wrong with lots of negative space, good typography and a grid. I mean, those are the foundations of good design. And this is just another example of that.


=== FILE: 5-08 buttons.txt ===
------------------------------
﻿- For this lesson on button styles, I wanna cover three important factors when determining what type of button, what type of style, all the ingredients that go into making buttons. First you have size. What size should the button be? Next you have state, which states of the button do I need to prepare for? There's default, inactive, roll over, roll out, long press, all these different types of states that typically refer to a moment in time. You'll need to design for those moments. Not every single state but a lot of them you will and it's helpful to kinda go over all the possibilities. And then lastly, I wanna take a look at what is the function of the button? Is it a primary action? Is it a secondary action? Is it a tertiary action? Now we've covered a lot of different little nuisances between corner radius and gradient and interactive and things like that but I wanna just really dive into the ins and outs of these buttons so let's take a look. Okay first of all we have size. Now I've broken up these five different sizes so we've got extra large, large, medium, small, and extra small. Now I do have a list of all of this information inside of Notion. You can scroll down to the see the size, the state, and the function. Even a link to this Figma file. So first of all, size. Most of the time, and again, this is largely dependent on your context. Most of the time you're gonna be hanging out in the large to medium, possibly in the small range, depending on your action. This would normally only be used on a big marketing site with a big call to action. You could imagine if there was a huge image up here and some text down here and there was like a really big call to action and maybe it was for quite a large screen. Maybe this is the biggest media query for your 19,000 pixel wide screen. There are some cases where your style may warrant a really extra large button and in those cases it might require an extra large text like 24 pixel and all of these are created in Figma using the auto layout feature so they will automatically get larger as you type. So, we've got our extra large button. So right here I've got, you can see, I've got about 24 pixels of vertical padding and then I've doubled that for the horizontal and that's generally a good rule is to, whatever your vertical padding is, if you double that on the sides, that will be like a good rule of thumb. And as with all of these rules, they're all made to be broken. You can do whatever you want and as long as you have a basic understanding of what creates a good button and then you go from there, you can do whatever you want. But if you're feeling a little unsure, these are great starting points. Okay, now we have our large button. This is gonna be roughly 16 pixels of text. If you were gonna go, say you were gonna go all caps. All caps, that's gonna look a little bit larger than your 16 so it will be totally fine to go with like a 14 point font in your all caps font style and that would still be considered a large button. It doesn't matter if it's large or medium or whatever you wanna call it, it's just a frame of reference. So this would still be quite a large button even with the 14 point font with all caps. It looks similar in size, if not, it might even command a little bit more attention because it is all caps. But you can see again here I've got a 16 pixel vertical padding and a 32 pixel horizontal padding and this ends up being about a 48 pixel tall button. You'll notice that on IoS, some of their smallest button sizes, they recommend like a 44 point touch target, so in the 44, 48, 50, 52, right in there is a good kinda medium go to button size. And I said medium, I meant large. But it is kind of a medium, large button size. And looking down at our actual medium button, you can see I've got this one at 14. This could be a range from 12 to 14. This one I've got 12 pixels of vertical padding and 24, again I'm doubling those end measurements. It's not that you couldn't do a 12, 12, 12 but you can just see it, it usually looks a little bit uneven if you leave it like that. So you don't necessarily have to double it, you could just make it slightly larger. That even works, 12 and 16 on the sides. But just as a general rule of thumb, you're not gonna go wrong with doubling the horizontal padding compared to the vertical. On down here to the small button, you can see here I've got 12 pixels of text and I've got six pixels of vertical, 12 pixels of horizontal margin. I've also made the background color a bit darker. So you can see this is 0066DD whereas the ones up here are 008FF and really, once you get smaller like this, once you go below 14 point bold, 14, 16 point bold, you really need to start trying to pass double A instead of only double A large with your accessibility. That's why I've gone a little bit darker with my small buttons and then my tiny extra small button with 10 pixels, 10 pixel font size extra small. Now this is gonna be used pretty sparingly. This might be a tiny module. This might be a plus, add a tiny line item to a tiny module or it could be, if it didn't have a background color, it could be a link only like privacy policy, terms and conditions, things like that. Could very well be a link and not necessarily an actual button. But these are some good, basic button sizes just to get started with. Especially the large, medium range. If you're unsure, these are great sizes to get started with. And you can see, I'm actually using a little bit of a gradient on here. I've got a little bit of an inner shadow, a little bit of a drop shadow, just to try to reinforce the fact that these are buttons. You don't have to use these stylistic effects. You can use flat colors if you want but you'll see as we get into the states, it's often a little bit easier to add some dimensionality to these buttons to really show what the state is. And again, I've designed tons and tons of things that don't have any gradients, no shadows, but I've used it for this illustration just because it's a little bit easier to show those moments of time like we're talking about here. So first of all, we've got our default button. And just to point out, I'm using the medium size here for all of these buttons. It would work exactly the same way with any of the other sizes. So we've got our default button here. This would be just your default button, the one that is showing by default. And on this one, we've got a roll over so maybe on this one, you can see it's a little bit darker, so I've darkened the gradient just a little bit to indicate what would happen on roll over. Now, and you can design these in a static format but a lot of times it's much easier to have a quick little prototype just to kinda, you almost need that moment of time to see a roll over and then see the roll out and just kinda get a feel for, is that dark enough? Does it need to go lighter? Should it shift a little bit more? Sometimes it's hard to really make those decisions until you get it into either code or a quick little prototype just using some like artboard artboard transitions. Now roll out, most of the time your roll out function is gonna be the exact reverse of your roll over function, but you could delay the roll out by three seconds whereas the roll over might happen in a quarter of a second. And that way you roll over, it changes really fast, and then you roll out and then it fades out slowly. There is the possibility to have a slightly different roll out function. And again, remember this is only gonna work for using a mouse. There is no roll over and there is no roll out on a touch device like a phone or a tablet, so keep that in mind. Okay, so next we have press. This would be when you actually press down or you click down on the button. Nothing necessarily has to happen but it is another function that will fire and provide that visual state of what the button does. In this example, I've simply reversed the gradient to make it look a little more concave just showing this has now been pressed. Sometimes you might move the y-axis down negative one, negative two. Sometimes you might reverse their gradient, sometimes you might make it a little bit darker, just something to make it look like it has been pushed back into the environment. And then if you're using flat colors, it might just be a slightly darker color to make it look like it was pressed back. And for long press, this would be a similar function, a similar visual state, but you'll most likely see this on mobile when you tap and hold, that would be considered a long press. And sometimes you might get a growing background style, sometimes you might press and hold and it becomes a draggable little interactive piece. It just kinda depends on how you're using the button, how you're using the functionality, but just something to keep in mind that that is another possible state depending on the buttons that you're designing. Release would be what happens when you click and then you let go. So when you let go, it might change completely, the button might flip over and a progress bar starts. It's kind of what happens after the button has been let go, whether it's the finger or the mouse. It's slightly different than roll out, slightly different than press because pressing is the action going down and then releasing is coming up. So it's very subtle but it's important to know that there are all these little tiny micro interactions associated with buttons. All right, next we've got our inactive buttons. These can be kinda tricky to handle especially on mobile. You can see here that I've brought in the cursor that is kind of like the not allowed cursor and this would just mean, hey you cannot click on this button right now. This would be kind of an alternate style but it's important to know that a lot of times your inactive buttons, they might actually fail contrast accessibility, because if I brought this up to 100%, and this is actually as light as you could possibly go with this blue and this white. This barely passes double A large. So going down to 50% opacity is definitely going to make this button fail accessibility. However, we don't want it to be contrasty enough to where it actually looks like a full clickable button. So in the inactive button case, you're gonna have to do something and bring the opacity down, make it gray, or sometimes completely just remove the button, but sometimes you wanna keep the context, you want the user to know something can happen eventually. Maybe sometimes the save button on a form is grayed out until all the fields are accessible. But you kinda have to use this with discretion depending on the project that you're designing for in the screen. But the big takeaway for the inactive buttons is, if you use too much contrast, it's gonna look like a clickable button. And especially on mobile, you don't have the cursor like this to kind of bail you out of that situation so just make sure that you use enough reduced saturation to where it's unmistakably not active. All right, next up would be this destructive button. This would be anything that's gonna permanently delete something like, I need to delete my account, I need to deactivate Facebook, I need to destroy this record in my account of whatever software. Maybe I'm deleting a GitHub repo, something needs to happen and it's going to cause destruction, it will remove something from a database and it cannot be retrieved. So a lot of times you want that to be styled slightly differently and red is a great color because red almost universally means stop or, you know, wait a second. It could be orange, you know one of those danger colors. And it doesn't absolutely have to be this red color, it could be a black text link but maybe there's a red triangle with an exclamation point, something to kind of let you know that this is a destructive action, it really can't be undone. And a lot of times this button would link to a modal or an alert and say, "Are you sure you would like to delete this?" And there's like a fail safe, someone would have to say, "Yes, I do want to delete this." Things like that. But it's always helpful if you're going to have destructive actions in your app, in your project, that you treat them slightly differently than your normal save buttons because it has a different implication for the way it's being used. All right, next up we've got our selected button. This would be almost more like a view switcher or a tab bar in IoS, like a tabbed view switcher. This would also be for like radio buttons or check boxes. Basically you have a selected state and you have a deselected state and I just put in a couple of different examples here of different deselected states. Now you have to be tricky that your deselected states don't look inactive because you want them to be selectable. Also, in this particular example, this might not work as well because all of my regular default primary actions are blue and right here I'm using blue again which looks exactly like the major call to action, the primary call to action, so I might be better off using darker colors for something like that instead of my primary call to action. Like even in IoS now it has the kind of light gray background with the white pill that's been selected and it almost looks like it's in this groove, this track, and typically you would want this to be, if it's a really big view switcher type of area, you would need it to be slightly different than your main call to action, especially if that call to action is at the bottom of the screen. If you're just dealing with a small check box or a small radio button, it's probably okay to reuse the same blue style or whatever your primary style is because it won't take away that much power but if it's the exact same size and the exact same screen and it can cause a little bit of confusion between which one is the primary action then you probably need to go with a different style that complements the primary action instead of kind of competes with it. All right, lastly for the state here. We've got like an on drag. This would be clicking and holding and moving around on the screen. This might be tapping and holding and moving around on the screen. Basically we want things to come forward into the foreground to almost simulate that you've picked something up and we might make the color lighter, we might drop a cast shadow, cast a shadow, and then if there's drop targets, we might have a list of things that's like you can drop this here. Think of like uploading a video or uploading any file onto a website or rearranging something in an IoS app. You might wanna show dragging that thing and showing where I could possibly drop this to let the user know what's actually happening. Okay, now, let's move on to the function. Really I'm just looking at primary and secondary actions here and also tertiary. I know I've got an entire lesson on primary and secondary colors and things like that so this is just really a recap of using these buttons in this way so, I might have a standard primary style the same way that I have on all of these default buttons. I would consider all of this kind of like a primary style. And then my secondary button might be, maybe it's the exact same hue as this but it's just set to 10% and then I'm reusing that primary color but just in a slightly different way so I've got a nice secondary action. But, if I'm using a form and there's like a save button and a cancel, I might not want a big secondary action that commands as much attention as your normal secondary action. Even in this case, this one is kind of a muted version of this one up here. Still in the same kinda HSB color space just only four saturation and about 94 brightness but this is commanding a lot more attention than this is. And you could even argue that you could go with a subdued cancel button that's a little bit more gray. So in the case of saving versus canceling, I probably wouldn't equate cancel as a secondary action 'cause I want so much emphasis and so much unmistakability on that primary save button that I don't wanna give any weight, any unnecessary power to a cancel when it's just not quite the same, it's like save or just completely back out. It's not like a filter and then sort and then save, it's not quite the same, so I might be tempted to make this more of like a tertiary style versus a secondary. And then, you might have some kind of odd color scheme and you might think well, we're using green as our primary color but maybe your primary calls to action are actually dark. So this could be a tossup where you might have secondary colors and you could have primary colors and you could honestly go either way with this. Maybe all of your primary calls to action, your save buttons, everything could be green with this black text. And then all of your filters, sort, edit profile, all of those buttons could be the dark color. Or you could switch it up completely and go with a dark primary call to action and the green as almost like a brand color secondary. So it kind of gives you a little bit of leeway when you're dealing with specific colors and you might bring in a really dark reversed image or reverse color button. You could kinda go either way with that. And I think the dark color definitely has a stronger contrast but the green also grabs your attention so this is just an example of when it might not be so clear as to what you should make your primary call to action versus your secondary. And you might even be tempted, maybe you bring in secondary elements. If you were gonna use this as primary, maybe your primary action is always the green button on a black background versus the secondary element is always like this. And there's different ways that you could go about it. You could tone down that dark button using some green text. So there's a little bit of flexibility even with something as simple as two different colors and trying to change this to work really depending on how it feels, how you want it to feel inside of your app. And this last example for secondary and primary, this is kind of a contrast to the save and cancel here. So imagine you have a bunch of search results and you wanna save your search query or something like that, you might need actual better bigger buttons for sorting and filtering but then you also wanna be able to save the search or maybe there's another, maybe this is the search button and it's used as the primary color right then. And so this just kinda gives a little bit more weight to the actions that this might pertain to versus when you're trying to save something versus canceling, you don't want those to be quite as powerful together. Whereas in this case, it's okay to bring the power up and the visual contrast up on the sorting and the filtering because it's not so much a polar opposite choice the same way that save and cancel is. Like sorting, filtering, searching, those are all kind of in the same ballpark but it's obvious that search is the primary call to action versus the others, they're a little bit secondary. So use this guide just as a starting point. Like I said, you can go any direction that you want with any of this. You don't have to use background colors. You could use text only and you could experiment with a lot of different styles. This is just a good, basic starting point. These sizes and styles and states and function, these are not gonna serve you wrong if you don't know what you're doing. So if you're still getting used to adding buttons and interactivity to your designs, by all means, take these as an example of where to get started and then maybe you just modify it from there. If you feel very comfortable with this whole thing, then you can do something completely new, completely different, that is kind of a wild, stylistic departure. But just remember that these are a good starting point and should serve you well for most of your projects moving forward.


=== FILE: 5-09 style marketing.txt ===
------------------------------
﻿- What exactly creates style? What gives one design a certain style versus another design another style? And the similarities between and the differences between, well, it really comes down to how you manage the fundamentals, how you manage typography, how you manage your layout, and your color. And kind of a secondary quality to those things is what kind of imagery are you using, and what kind of stylistic decorative pieces are you using? Like background colors, or accent colors, or product imagery, or even what kind of icons are you using. So imagery, and color, layout, typography, all of these things coming together creates a certain type of style. And oftentimes, one of the ways that you can create style from the very beginning of your designs is by choosing an interesting typeface. If you use San Francisco or any of the common open source typefaces, you're not gonna have a drastic different looking style than a lot of the things that are on the market. And that's not necessarily a bad thing, it's just something to understand that certain typefaces will give your designs a new kind of style. I wanna go through a bunch of marketing sites, and I wanna go through a bunch of product designs. I'm pulling these straight from Dribble current day, and just going through 10 to 20 of them for both marketing and app, and just kind of give some commentary on what is creating each individual style. 'Cause you'll notice a lot of this stuff looks really similar. And again, it's not necessarily a bad thing, but I just wanna point out the differences and give you the tools to allow you to know what to look for in these designs and things that you can think of for your future designs. So let's start off with these marketing sites here. I just did a search on Dribble for marketing sites, and just kinda opened up some that I think are, some that are interesting, some that needs some work. First of all, we've got this Olumo Marketing site. And if you'd kinda just boil it down to its bare minimum, you've got a big headline in the center, and you've got your kinda standard navigation bar up here with your call to action up there. But it's a nice color scheme. This really light pink with the purple call to action that's pretty nice, and these geometric shapes like it's a fun environment. The only thing I don't know about is left aligning this text in the center, I would almost wanna center align that just because it seems like, the only, I think if you had more text here, it would make more sense to left align it but that's a very small nitpicky kinda thing. But look, same typeface with a little accent and a darker call to action, but it's got this kind of breathable, big breathable layout center left. And then if you look at some of these additional pages and pull up the attachment, you can kinda see a better view of that. So you can see left align, come over here and we've kinda shifted this standard, kinda S-curve to go throughout the layout. Not so sure about this giant text right here, this looks a little crowded. But I do like this simple little pattern, but if you look at it, it's really a simple kinda thing. It's color scheme, and they've chosen a really interesting bold typeface and they're using a nice, big, bold color scheme. They've chosen to underline their links which is a style choice. And it's just got a nice feel to it. I think maybe this text could be a little bit larger, but overall, I like the way that they're kinda balancing everything, and they're going from left to right, and they've got a little bit of this broken grid type thing and they're bringing up some kinda floating tiles and this pattern kinda looks nice beneath it, the pattern over here. And I think this looks nice. Again, I don't know about this text here, but bringing in the pattern, just a very simple clean kinda layout. So if we go to the next one, this one same thing, but you know, if you go back, we've got big rectangular header title. And on this one big rectangular header, but then you've got your title right here Card "Next" I'm a little unsure, maybe there's a gallery or something, but it's kinda the same idea, center align text but there's no real big clear to action. But the big difference here is the typeface could be actually similar, it could be a similar typeface, but because they're using this white on blue it has a little bit more of a corporate feel. And they're using much smaller headings like Card Protection, Card "Next", Getting the Card, versus the typeface on this one are more sentences. Keep a daily pulse on your organization, Bringing you into the know, if it just said daily pulse, in the know. Sometimes your content can produce a certain type of style. So this one feels a lot more corporate 'cause it's white on blue, and the copywriting is very short and punchy. There's kinda no nonsense, so it has that kinda corporate feel which is something you might want if you're designing something for visa or banks, but for something like this maybe if you're speaking in full sentences, it has a certain type of thing that it's adding to the style. Moving on to this one. This is really similar, it's really similar layout to the first one. You got your logo, your call to action, and your centered text. Same thing here, logo, call to action, centered text. Although this actually isn't centered, the Let's Talk button should be centered right in here it looks like they might've messed that up. But nonetheless, it's a nice, simple illustration I can tell there's a video right here. Let's talk to our expert team mates. I don't think that this is doing a good job of telling me what this even is, why do I wanna talk to expert team mates? There are some maybe messaging issues, but if we're just looking at pure visual design, this creamy background, and this kind of like dark blue tags with the light blue call to action and these accents, like the color scheme looks really great. And you can tell that it's got this rounded letter forms, which feels really, really friendly. And the rounded letter forms with the big pill shape button and this friendly color palette, the style, the overall look and feel of this style, it just has a good, fun, friendly visual style. Now again, I don't think maybe the messaging could be worked on, I don't actually know what this even is, but it's got a very good visual sign we could very easily use something like this coupled with a good strategy to kinda produce a really good landing page. Okay, this one. This one, okay it's still really, really similar. Logo on the left, navigation on the top, and instead of center aligning this, they've just left aligned it. But they're adding these little floating rectangles around the call to action, which is giving it a different type of style. We Streamline Quality and Velocity For Startups, still, I don't know what that means, but it looks nice. Though the website looks nice. This is like a nice, cool visual conveyor belt type of thing, which I can see that that would mean streamline and whatnot but I don't exactly know what the product is, but I can tell like building blocks. The color scheme is cool, I like this dark almost like a dark teal it's like a dark teal green version of this. You can tell it's not full black, it's like a really dark hue of the same teal color. So almost this monochrome color scheme, bringing in the second muted blue color with this grid, it's got like a friendly and technical and clean, modern feel. And it's just some really fun visual pieces here. You could very easily tell, like if we removed these cool gradient illustrations, it wouldn't be that strong of a design. I do think that this is strong, and this is strong, and I like the way they're kinda breaking it up from left to right. If you were to remove some of these, it wouldn't work quite as well. So the combination between the colors and the illustration, that is what's giving it this style. If it didn't have these illustrations, the style might fall a little bit more flat, but it does have like that good overall color scheme, it's got a nice feel to it. But remember there's not a lot of difference between the title and the call to action on any of these. It's just a matter of whether or not it's left aligned or center aligned. Another one here, Eric Hoffman, I think he did the last one as well. Same thing, you can almost tell that he designed both of these. We've got Eric on this one. So he's got left align, call to action. The next one left align, call to action. But they do look like different websites. And the biggest difference here is the typeface is a little bit more geometric in this one, there's a big call to action, there's a light color scheme, really beautiful image of a couch, and kind of this purple color scheme with this little illustration behind the couch. And this one same idea with a really cool illustration, but because the typeface is different, the colors are different, even though the layout is really similar minus, you know, this is going slanted versus the couch is going straight across, they got a really, really similar feel. Even these, these little secondary headline and text. You can tell looking at this one, let's see this one too. So we've got our big headline, and then our text, and our call to action. Same thing here, big headline, could probably even be the exact same type size combination. He just added a slightly different little kicker up here with a little line, and an extra little tagline just to give it a different flavor, but it's really just changing the typeface, changing the color, and working with different imagery. Next up this one, I'm gonna reload this one. This one is just, you know, same thing, logo on the top left, navigation on the right, and just a really classy looking typeface like that big IN and the big U, and when we go back to the main section, it's just a really nice classic looking, oh, this is Eric as well. I guess Eric is tagging a lot of his web pages with marketing sites 'cause that's what I searched for. But you can tell that that typeface, and this color scheme, and these images, they all kinda come together to create that style, that kind of elegant style with the kind of golden colors, the golden accents, and the big, the big Serif font. And it's the Serif font, the dark colors, and the golden accents, and those rich, vibrant architectural photos like that. Those things coming together create this rich style, whereas if we were to use those same photos in something like this, with the Sansara font, it wouldn't have the same feel, and it wouldn't quite come across thematically the same way. All right, this next one by Corey Haggard, this is just a really cool looking photograph. If you put a photograph back here, it wouldn't work quite as well. But there's logo on the top left, navigation, got your search, your icon, some little, little technical things here, social links, it's really this big photo and this combination of Aloha and Oahu in the different typefaces kinda overlying, just kinda gives you this big helicopter feel. A big, beautiful image is really a requirement for something like this to work. And if you're also, if you're making a site for the Hawaiian Islands, you're gonna need to use giant big imagery to show off the Hawaiian Islands. You're not gonna wanna use a flat background and typography. So they've intentionally created this kinda style with huge imagery, and they'll have to be a little bit more careful with balancing the type on top of the imagery, things like that. But you can just tell that the typeface selection, the color scheme, basically they're only using the color white if you don't count the profile image or the background. So they're just using this huge background image and it creates a very specific style. But it's really, it's not too different of a layout minus the Aloha and the Oahu, but it's top navigation, and those different little like the handwritten script kinda gives it that Hawaiian vibe, I guess. Okay, next up we've got another marketing site here. Again, just like this one, we've got the logo top left, and the left align headline and call to action. So the exact same thing between these two in terms of size, logo to the left, and this hard left edge. So it was the same exact idea between these two, but this one is it has a different feel because it's a very big white open background. And they're trying to do this experiment with kinda pinning this illustration to the top, which is, it's kind of cool. You'd have to figure out how that would work on mobile and maybe this turns into a different background this one gets smaller. But just overall you can tell lots of white space, lots of different colors. I don't think these, these feel a little out of place. Like, I don't know if I would use this hard edge and then these rounded corners. You could tell that if they added a softer typeface, maybe similar to, where it was it, maybe similar to this typeface right here, softer typeface, and then softer calls to action that would create maybe a little bit more cohesive of a feel, I feel like there's a little bit of a disconnect between, the typeface seems very safe and kinda almost sharp with these hard edges compared to these big blobby things, this blobby background. They're not really using this organic shape anywhere else, they're maybe trying to reuse it in these circles but it's not quite working because these are lines and these are big blobby shapes, and this is working a lot better than these shapes. So you could imagine almost like a organic blob of color, maybe where the two tone would look better on as these accents, as opposed to reusing this line over and over. And we've got another marketing site here, it's kinda similar to the Stripe Atlas example in one of the previous lessons where these gradients kind of, it's really interesting to see this breathe, this kind of blue and white, and this kinda fading into these really nice gradients that transition from one section to the next. A lot of times when you're working on a marketing site, how you handle the transitions between is it gonna be a flat hard edge color, is there gonna be something overlapping the edge that helps you transition from one section to the other, you know, stripe is known for its angled color blocks that help you transition to the next section. So this is a really cool transition. When you're thinking about your layouts, maybe you think about blending a bunch of colors together down into another section. And then that sets a really nice stage for this color, same way on the Stripe Atlas page for that color to pop off. And that's just kind of another color and layout choice, and you could really get away with any typeface in that particular layout. So it depends on if the style you're going for is light and airy, maybe you could use a Serif typeface, or a rounded Sans-serif. Maybe it wouldn't matter, so you could play around with that because the background gradients and the colors are giving you that style. All right, here's another one that's slightly, a little bit different. You don't often see, most of the time you get a big center aligned headline or hard left aligned, but I like the way that Julian has broken the mold here, and he's created this simple little lock up with some really cool shapes and really, really good imagery. Like these are not average stock looking photos, these are not just plopped in here. These are really well lit studio portraits and the color scheme, it just works really well with this whole grid that's going on here. And so it's got a really hard edge feel, but then he's bringing in these round shapes, and with the round logo. I don't know, I think the only thing that I would consider is maybe these should have hard edges, and then maybe the login could stay rounded. But part of me wants to see like a hard edge in here but I do really love the style of these big, bold colors and I like the way that he's bringing in this underline just to add a little bit more style. It just kinda gives it that, it gives it a very certain look. And this one to me will be pretty memorable compared to some of the others, because maybe this is just not something that you see that often. So oftentimes finding that element, finding those things that can make your design more memorable. Like who underlines every word of the main heading and has a really big, really big arrow that kinda points down. And it's got a fun little feel to it, and I know he's saying work in progress it's not completely finished, but it's still though, it's still a left align headline with your call to action underneath it. Whether or not it's in the center, or on the far left, or it's worked into kind of an interesting grid, it's just another way to create that type of style. And so the arrangement of imagery with the grid, the colors that are being brought in, and the underlying text, it just has a very distinct look. All right, moving on to this one. This one's similar to the architecture kind of firm. It's just really, really, really strong imagery. You are just not gonna pull off a design like this, unless you're using incredible imagery. You're not just gonna take a picture of your backyard on your iPhone, and then pop it into the background here. This just, this design would completely fall apart if it was bad imagery, but all of these images are incredible. And using these really, really thin, look at how thin the typeface gets on this like side of the U, and right in here, that would start to fall apart at small sizes but when it's really big like that it just looks really cool. It's a really nice typeface to use in those big display situations, and then pairing it with the Sans-serif typeface has a nice feel to it. But again, left align with the logo, got a little accent piece here, you got your call to action. There's a very standard grid, but just choosing to use a really big typeface on top of amazing imagery, and pairing it with some kinda more standard imagery, minding all of your negative space it just creates a really rich experience. And you can almost imagine, man, I'm in BlueRidge right now because I'm looking at all this cool stuff. So it just creates a very distinct kinda style. All right, last one here, this one I brought up because I felt like it was a little more, it's a little different than your standard. There's not a clear call to action, or I'm not exactly sure what's what this even does, but it just has a nice feel to it. I like the way that it's trying to be different and it's using this very condensed typeface. So you can tell this typeface, all caps, very condensed, really small line height, has a much different feel than something like that. This feels friendly, and kind of maybe modern, whereas this one feels very kind of in your face, intense, very impactful, and combination with these dark photos and this really strong, hard left align, it's got a really interesting layout. And again, it's kind of going through this S-curve of things on the left things on the right, but just changing the typeface alone and reorganizing the way that some of the images are on this hard grid, it just creates a completely different feel. So changing the typeface, working on the layout, all of these things are gonna really impact the style of your marketing site. All right, I'm gonna stop this one right there. And in the next video, I will dig into some product design for some mobile apps, kinda go over some of the same concepts.


=== FILE: 5-10 form function.txt ===
------------------------------
﻿- In the late 1800s there was an architect named Louis Sullivan and he is the one that the phrase "Form follows function" is accredited to. So this is a quote from him. It says "whether it be the sweeping Eagle and his flight, or the open apple-blossom, the toiling work-horse, the blithe swan, the branching Oak, the winding stream at its base. the drifting clouds, over all the coursing sun form ever follows function, and this is the law. Where function does not change form does not change. It is the pervading law of all things organic and inorganic, of all things physical and metaphysical, and all things human and all things superhuman, of all true manifestations of the head, the heart of the soul, that the life is recognizable in its expression that form ever follows function. This is is the law". Now Louis Sullivan was an architect and his assistant who you might be more familiar with was Frank Lloyd Wright. And he preached the same maximum maybe to a slightly different degree, but it's really just the idea that form follows function. Function is more important. The same way that my shirt is on my body. My body has arms that moves around and my shirt is created to suit what my body's function would be. And so there might be things that you can wear to keep you warm or things as a purely artistic statement, if you're wearing a big poncho, even if it's not raining, that might just be ... But there's still places for your arms. And there's still gonna be a certain piece of inherent quality where the form is going to follow the function of the piece. And this is something that I struggle with as a graphic design major And I was really into producing art. I was making portraits and charcoal, paintings and sculptures and I was expressing myself. I was just expressing myself in an artistic way. But as I got into design, I had to almost reprogram my brain, that form needed to follow a function. That if a website or an app isn't that usable, it doesn't matter how good this typography looks. It doesn't matter what the colors are. It matters how the app functions. And on top of that functionality, you can start adding design and layout and color and sometimes the way you design something will inform the functionality. But your desire to express yourself should never be higher than the functionality of the app. If your functionality is equal to or greater than the artistic expression, then you're going to be in a good place. So with all that being said, I'm going to review some product designs from Dribbble and kind of just start to look at form versus function in some of these apps. Okay First of all we've got this digital loan interface. So at first glance it's not a bad design, but something about it kinda leaves something lacking. And I know that we're talking about form versus function, but from a purely visual standpoint, something feels a little bit off. When I look at this compared to, looking at this. This one just feels like I could understand it more. Maybe I could use it more easily. Whereas and this is another example from that same app. It's just incredibly simple and the typeface, the color scheme, it just seems like it's well thought out. Whereas this one, look at the apply button. We've got apply, apply, apply, apply. And the use of color is ... We're using purple in the background and then purple on the buttons and then purple on these icons, assuming that these aren't even intractable. And then we've got like a ticket shape with the dotted line which if this is a loan detail , why would it be tickets? And then basically there's just lots going on here. And it's hard to understand how this would function, because there's lots and lots of text on here. It just seems a little bit unorganized even though it does appear to be organized, it has like a cluttered disorganized feel compared to something like this where it's just very simple and straightforward and we'll forgive them for this typo right here. But I will say that does kind of drive me crazy that that S is in there. But it just has a better feel like I can tell that purple is the absolute primary call to action. Even right here they're using purple and then this white on top of purple to accentuate that call to action a little bit more, but they're definitely using purple as our main call to action. Whereas on this one, then we've got purple in the background. We've got purple buttons, we've got a purple background here, there's just a lot going on. And I think that you could probably take another stab at this play around with the type sizes a little bit. So look how tiny loan detail is compared to easy loan and the type sizes are kind of all over the place loan amount and first payment. I don't know if those are the same or not, but then you've got these really big kind of crammed in just not a lot of negative space in here and a kind of an inconsistent usage of color and button size when compared to something like this. And I think you could very very likely get this loan. I know that loans aren't as fun and trendy as scooters, but I bet you could get this loan interface looking as good as the scooter interface. If you borrowed some of the principles they're using, they're layering the information a lot more where you have maybe just a title and a line of text, and only on this huge full page, do you get two lines of title text, two lines of body copy. So you could probably clean up this a lot more and make a decision. Do you want to apply your first payment amount? Is that the main call to action? Or is a $20 million loan the main call to action? Or pay later or shop, whatever that means is that a main call to action? So sometimes you need to just really clarify what is the function of the app before you can start making those style decisions. All right moving on to this next one. I intentionally picked a lot of these product designs that have these kind of rounded tiles, because a lot of these apps are using this big rounded tiles and these splashes of colors. I'm trying to show a difference between this one and this one and this one. They're all kind of related kind of a similar style, but one of the things that really makes the difference between these three, we've got kind of a standard looking typeface. And on this one we're using typeface, which you don't see quite as often, but it looks like we're looking for coffee and dessert cafe, kind of this cafe green autumn feel. So we've got these big rounded tiles big rounded corners on these images, but we're using autumn colors orange, this kind of creamy red, and this green with the serif font. It produces a much different look and feel than these bright colors and the standard typeface. So maybe this is good for a credit profile 'cause it may be a little bit more standard. But then looking back at the juice app, this juice up typeface is kind of you know italic maybe that's the logo type, but you can tell that the most popular avocado mango all of these typefaces, all of the type is using a font. That's not your standard go to kind of font. And it gives it a little bit different of a flavor. This one in particular in my opinion has the most personality because of the color scheme and the typeface and the simplicity of the function. I can very very easily see. Okay add one Apple juice, add one pineapple juice, add one grapes juice should be grape but anyway, and then I've got the ability to pay right here. And I think the product imagery is really what makes this stand out, along with the color scheme and the typeface usage. So even though the imagery here is okay, but you can tell it might be, it's a lot more of kind of user generated content. And sometimes you can't get around that, but just overall this is a very very meticulously planned out studio shot. And you're gonna have better photographs when you are creating stuff like this than you are when you're gonna use user generated content. And again there's no way you would get some studio shots in here for every single restaurant especially if you're using some kind of map and user generated content you're just not going to get that. But it is a trade off for what you're designing. So I think they've done a great job with this one, but I just want to point out that it's got a different style based on the way that this app is functioning. It's gonna have a different style because of these different images. Whereas this one is highly curated and the typeface just kinda adds to that. But if you go back to this one, you can see there is no specific imagery they're just using these icons. And actually these are kind of hard to see. They don't have a lot of ... It's kind of actually hard to see the difference between these icons I see it more as just a block of color. The icons they're using down here in the tab bar seem a little more interesting. So I would be curious to see maybe some solid versions of these icons, because they're using this kind of standard looking icon set and the standard typeface. It has a pretty decent feel, but it's not quite as stylistic and it doesn't quite convey a specific style, the same way that the Serif and these colors do on this one. And then especially for this kind of juice, you know they're using the colors of these fruit for the juice, whereas I mean credit profile, like what colors are you even gonna use? But it definitely feels a little bit all over the place. We've got this kind of neon blue neon green, and then these muted oranges and reds. And then you've got almost completely different colors over here and then your green over there. So it just doesn't have quite as much like solid thought out style because there are a little bit more, it almost seems like it was unplanned a little bit more. And so a lot of times if you just stick with some simple decisions like this serif typeface, this primary call to action and these action, these accent colors just sticking with the basics and getting a simple color scheme, simple typeface and especially if you're using really nice product imagery, that's just gonna help your design have that style that you're going for. It it'll be a lot easier if you can lock into those things and make some strong decisions about that. So looking at a couple more here. I think this is another good example of using a good color scheme and kind of a similar thing here where they're using these kind of interesting illustrations and background colors. But you can tell that the typography they've got that one big type size, their second smaller type size, and then you've got this third type size, and then maybe this fourth size right here, but it just has a consistent look and feel, but it has a very specific type of feel because they're using this typeface with these illustrations and these colors. So it kinda has a similar vibe to this one, but they're being even a little bit more consistent with their pages here. And again I don't know the function of this app, but I just want to point out the usage of typography and color, and they're not sacrificing any of the fundamentals. It appears to be a very functional app and very straightforward. you can probably tap any of these. You can tell the activities is active right here. And then if you tap down here it's shop, it just seems to have a good functioning type of interface that is accentuated by the form that they've chosen. Here's another example this app and this app and this app, basically are all the same with iPhone design with their rounded corner rectangles, but they all have a very distinct look and feel. And really it's typeface choice, color choice, and this kind of the imagery that they're using. So on this one same kind of thing, they're just various strategically using this lime green and variations of the lime green with this kind of nice that's not black. That's like a deep rich navy color that compliments that green really really well. And so simple simple simple color scheme. They're probably using one typeface for this. All of this stuff right in here is one typeface. This is probably the exact same size right here. And then maybe they've got a slightly larger typeface, but they're just using type size, negative space and color and layout just in a very controlled fashion. Lots of negative space in here, fun little illustrations that aren't really taking away from the design they're using restraint. And all of that creates this fun. It just creates a fun feel. And it's got a very specific style because of those very calculated they're nailing the typography sizes, nailing the layout with the negative space, nailing the color with the various usages of green and there's plenty of nice contrast. they might could use a bold right in here to make it look similar to this down below. But I also like the way that this is starting to look as a headline and maybe these are more like a headline. I think the thin stroke around here is the one thing that doesn't quite feel like it fits with the entire ... They're using big flat blocky colors. Look how nice this card looks against these flat green flat white, but then they have these strokes right here. I almost wonder if they turn these into like green backgrounds and used white type that might make it a little bit stronger but overall they're nailing those typography layout color. And they're using the really interesting imagery in a tasteful kind of way. And so it's creating a really strong rich concept right here. All right I brought this one up. This one almost has almost like a Slack vibe. It's kind of using the Slack purple that I've seen and Slack even uses this green call to action. So even this looks kind of like the standard color for Slack sidebar. So be careful if you're using colors from another app, because it will immediately feel like that app. I think this is a nice layout. The typo and planning right here absolutely kills me. Make sure you don't have any typos in your work that you post to Dribbble. And if you do delete it and repost another one, like just get all the typos out of your system. It's going to happen I make typos all the time, but please correct them. It's just kind of like it's a mark of lack of attention to detail. Even though this is nice it has a decent layout and decent usage of type size, something kind of falls flat. And I think it's because it just, it almost feels like maybe a little too generic. And I also don't know what I'm even doing here. Like I'm adding family members, but I'm checking off family movie. Like there's not a lot of functionality that I can really understand here. And I think it's just a ... There's also a lot of content on this page. And for whatever reason, it just feels a little like it's lacking something and maybe it is the the change of type size you do have look at the difference between this one size. It looks like a slightly larger size and then a slightly smaller size and then another size in between. And then also this is really really like hard to read. I cannot read that can barely read that and can barely read that. And these are really really small. They're also look at the difference between this big corner radius and then these really really tight corner radius. And also the negative space between here it just feels a little odd. The corner radius on these two seem like maybe they're okay, but they're also using this big big corner radius right here. And so the the lack of type size similarity and the corner radius is kind of all over the place and the layout isn't quite as locked in. It makes it feel like it's good it's okay. It's not as locked in same way that some of the other ones are. And lastly I just want to pull this one up. I'm not a hundred percent sure what kind of project this is. It looks like just kind of a random dashboard. But this one has a lot of I think the typeface is nice color scheme is nice, the layout is nice. However I feel like there's just too much information. It's everything all in your face all at once. I wonder you know what would it look like if these subheading this double line of text, what if that was just reserved for the detail page? And there was a lot more negative space. Does it really need to say team and PM over here? You know what could we get rid of some of this stuff? It just seems like there's just a lot going on. And you'll notice that all of the type sizes are really similar. There's a lot of different type sizes between star project even these numbers and these titles. There's not a lot of scale on the type size and that's kind of hurting this, whereas the layout and the color and the corner radius? That all looks really really good, but the amount of content and the over labeling. And I'm not sure if this kind of gradient thing feels a little bit weird, they're using a lot of flat colors. And so I kinda like a lot of what's going on here, but it's missing that fundamental typography and negative space kind of fundamental rules where you're trying to use as few typefaces as possible. And if you are gonna use a bigger typeface, it needs to be bigger for a reason. And if you're gonna use a smaller typeface it needs to be smaller for a reason. Otherwise you end up with a lot of different type sizes, a lot of different little elements because you weren't staying true to those typography rules. And what could be a really great looking dashboard ends up falling a little bit short because of those the type choice. And so I think revising this with a stronger focus on typography, maybe these numbers get much larger. Maybe the tiles maybe you go three wide and the images become bigger. I'm not sure what exactly to do here, but those are some of the things that could really help out. And a lot of times you don't know whether or not to make tiles bigger or the typography bigger. Sometimes you just don't know what to do unless you know how it's going to work. And that's where the function comes into play. do you really need to see eight different tiles all at once? Is that a critical piece of your dashboard? or are you more likely to see two or three and take action on those? And if so maybe we can make those larger and we apply the typographic form to the way that it's going to be used. So I know we're not diving too deep into actual function with all of this, but a lot of times the style and the overall look and feel is really going to piggyback on the function of the app and also the direction that you set. So you still have to nail typography, color, layout. Use nice imagery use nice icons, and then push all of that together in a very calculated way to create the kind of style that you want your project to have.


=== FILE: 6-1 overview.txt ===
------------------------------
﻿- Welcome to the imagery module, an entire module dedicated to imagery, photos, icons, illustrations, all that good stuff. Now we've all heard the phrase "A picture is worth a thousand words" but why is that? Why would someone say a picture is worth a thousand words? Well, it's, it's kind of self explanatory, but we can actually digest more information with a quick glance of a photo or a visual representation of whatever that thing is that we're trying to let our people know, to let our users know, customers know. Most people, you'll often here people say, you know, "Oh, I'm a really visual person." Well fact is, a lot of us are visual people, and that's why we respond to visual. Because for the most part, we all have eyes, and we see things and we recognize things the same way that it feels like you and I are looking at each other right now, and that creates at least some sort of emotion, and so images do the same thing. Pictures are quicker to see to digest information. You know, think about Medium versus Instagram. Instagram is way more popular than Medium, 'cause it's nothing but a bunch of images to scroll through. I'm getting a little carried away on the whole images thing, but it's important to know that images are very powerful. And imagery will always have a huge, huge impact on the overall aesthetics, and the mood, and the look and feel, of the way your projects present themselves. So typography, color, layout, all of those things are gonna be really important, but just as important, if you're injecting imagery into your project, they need to go along with the overall direction. And if you're using photos, they have to be phenomenal photos. If you're using icons, they have to be really, really nice, clean, cohesive, organized, balanced icons. If you're using illustrations, they need to match the style. So no matter what kind of images that you're using in your projects, they need to have that same balance of aesthetics and cleanliness that your overall framework for your interface does. All right let's take a quick look at all of the different types of imagery that you might find in your interfaces. First of all you've got static photos. Think about Unsplash or Stock photography of any kind, or big background images, or just photos that aren't going to change, photos that you pick, you curate, and you have complete control over. Whether you're doing a photo shoot with a professional photographer, or you're handed imagery from someone else, these are gonna be static - mostly static images that are not going to be changed on a regular basis. And even if they are going to be changed, they might be rotated between several different versions, but static photos for the most part you have control over, so you need to make sure that they are great, great imagery, great, great photos. And one caveat to stock photography, and sometimes this applies to really good sites like Unsplash, if it's just a picture of someone eating a salad and being really, really happy, it's not gonna have the same emotional quality as a candid photo of someone eating a meal in a moody environment. Or a businessman jumping in the air with a blue sky with a briefcase, it just feels fake, and it will trigger bad emotions. So you should just avoid stock photography like that really at all costs. If you have to use stock photography, you're gonna have to just search for images that really feel authentic and real based on the type of project that you're working on. Next up we've got dynamic images, think of Instagram, you've got all of these different avatars, you've got everybody's individual posts. You can't really predict what images are going to show up, it's all user-generated content. In fact, this is not even an image, it's really - I mean, it is an image, but it's a screenshot of a tweet. But again, it's all user-generated, and Instagram is a great example of this. You never know whether it's gonna be a video or a photo, and you have some control over what you allow on your project, but when you're working with dynamic images, you don't know if it's gonna be a screenshot or what. It could be the worst photo that you've ever seen. You just, you can't predict what images are going to get shown. So this opens up a whole new can of worms when it comes to designing around that. Next up we have glyphs, which really comes from the typography world. This is the font that I'm using for Shift Nudge. And if you look at the full alphabet and all of the characters, really all of these and inside of these squares are glyphys. Even the letters, they're technically considered glyphs. Something like the 'at' symbol, or the question mark, or the ampersand, all of these are actual glyphs. And glyphs are kind of like a very direct representation of something, where the 'at' symbol is specifically representing at, and it's virtually ubiquitous around any - I guess any English speaking language, that's just gonna be a solid glyph that will never be different. It might have a different style, but it's just a strong representation of what it is. Where as some people will often call icons glyphs, especially when you have these simple, one-color icons, these are often referred to as glyphs. You have, for example, 'activity', you've got the 'at' sign here, which definitely is a glyph, you've got 'bluetooth' which is kind of a glyph at this point, 'cause there's no other really symbol that represents bluetooth more than that. Whereas an icon of a battery, this is definitely more of an icon, because it's not the globally accepted version of a battery. sometimes it's vertical, sometimes it might be a watch battery, sometimes it might be a car battery, it's a little bit different. So an icon is more of a visual representation of a real-life object, versus a glyph is a little bit more concrete in its meaning. Here's a bunch of icons that I designed for the Exxon Mobile design system. Some of them might be considered more of a glyph, but most of them overall are gonna be more of an icon category. And it's really more about semantics, it doesn't matter if you're calling it icons or glyphs, it's not really that big of a deal, it's still some little symbol that's designed to represent something else. But where a lot of people call these flat, solid-color icons glyphs, it's because you have also icons that look like this that are almost illustrations, but they might just have a little bit more character to them, maybe they're 2, 3 colors, this is the streamline icon emoji set. So it's still an icon, but it's got a little bit more playfulness to it, it's got a little bit, maybe there's a little shadow, a few extra features. It's kind of like that pushing the icon to the extreme. Think of also, like, app icons on your home screen of your mobile phone. Some of them might be flat and they might be more glyph-like, but icon is more of an overarching term that represents really any of these styles, whether it's flat, or 2 color, or there's a little bit of a gradient. It's gonna be safe to call all of these icons. So when does an icon become an illustration? Well, it's, I mean, there's a little bit of gray area, but for the most part, illustrations are gonna be much larger, there's gonna be a bit of an environment. This is the Humaaans.com library from Pablo Stanley. And technically you could simplify these down into icons, if they're really small, and you've simplified them a lot, but when they're a lot more organic and they don't necessarily fit into a small little tiny box, they're definitely gonna be more of an illustration, although they are going to fit into their own rectangular box somewhere as you use them. But illustrations, you know, in general are just gonna create more of a scene, create more of a mood and a feeling. And it doesn't have to be this particular style, there's lots and lots of styles of illustration. I just bring this up as an example because these are actually open-source and you can download them all and use them, mix and match, all that good stuff. Next of all, we've got 3 Dimensional design, 3D modeling, and one of the best I've ever seen is Mike from Creative Mints, he just creates these really elaborate 3D models. A lot of times he uses Cinema 4D for these, and just all of his 3D work is really impeccable. The style that he produces with his 3D models is just phenomenal. And this really kind of takes the illustration style to the next level. I mean a lot of his stuff, even this right here, you could technically recreate this, probably in something like Illustrator or Figma, but it just has like such a cool, dimensional look that the 3D model just really adds a lot of interest, visual interest to a design. I mean these are just really nice images. And I've been following Mike for a long time, and I know he puts a ton of time into modeling these things and kind of incorporating it into his layouts. And so it's not just this quick, like, "Oh, yeah, let me just whip up a 3D model." This is a, I mean, it's a very niche expertise, and he just happens to be great at layout and 3D modeling. So you're not always gonna have these available at your fingertips, but when you're working with someone, or you have assets, or the ability to create phenomenal imagery with 3D models, it can really take your work to the next level. And another type of image that a lot of people aren't really using these days is collage. I think that there's a lot of different ways that you could combine elements to create pretty interesting types of things for websites, whether it's drawing on a photo, or putting photos together, just different types of collages are almost an easy way to kind of piece together an interesting type of visual concept. And it could be something that might spice up an Unsplash photo, maybe you draw something on your iPad or overlay it, it could just be another interesting way to create images for your project. For the most part in this imagery module, we're really gonna focus on photos, both dynamic and static, and look at a lot of different ways to use those. We're also gonna take a pretty hefty look at icons, both using an existing icon set, expanding on that icon set, or creating your own icon set from scratch. There's a lot of best practices that we can dig into in all of the icon category. And also I wanna show a couple of examples for ways that you can create your own simple illustrations just by drawing shapes in your design tool, adding gradients, adding a little bit of lighting effects. So we'll cover a lot of that. So no homework in this particular video lesson. Just wanted to prepare you for what's to come. So I look forward to diving into the imagery module with you.


=== FILE: 6-10 illustrations.txt ===
------------------------------
﻿- Yes, this is a course about interface design but there's gonna be inevitably a time when you need some type of illustration, some type of simple visual that will just kinda help explain a concept or create that extra little something in your marketing site or on an onboarding flow. Either way, there are tools that you can use, you don't have to be a grand master illustrator to put some of these skills to practice, so let's just dive right in with some hands on illustrating. Okay, first example, I wanna start with this really simple example of this MacBook Pro. You know, this is not an image, and I created this, I actually created this inside of Sketch, but one thing that you wanna know is that every good illustration is most likely going to start with some type of solid reference. And for reference for the MacBook Pro, what better reference than the Apple.com website? So let's say we wanna use this as a reference. So we're gonna do control-command-shift-four, to get a little snippet. I'll just grab it from like right in here, copy that on my clipboard, come over here to Figma, and we're gonna paste this right in place. So let's just go ahead and assume that we're working on a marketing site, so we wanna open up a frame for, where are you, desktop? MacBook Pro. So we don't wanna just draw this at a huge size, a huge, random size, we wanna kind of scale it down and get it proportionally correct. So if we put this giant screen here on our website, let's just say that we're gonna do the contrast site. So we'll just kind of make it right in there, and we can always adjust this later, because we're gonna use vector shapes. So let's just get started. We're really gonna use just the rectangle tool. So I'm gonna hit our, I'm gonna first just draw the shape of this screen here. I'm gonna hit the five key to make it 50 percent, just so I can see a little bit underneath. I'm not too concerned if it's like, right on the money. It's like, it just needs to be kinda correct. So like right in there it looks pretty good. I'm not too worried about this rounded edge down here, just yet. It's probably like somewhere right in there. Okay, and now all I'm gonna do is round this corner, until it looks pretty close. 16 looks pretty good. And then if we wanted to check down here, we could either make sure this is not too short, or maybe it needs to come like right in there, roughly. Again, not important if it's 100 percent correct. We can still see through this. I'm gonna draw another rectangle right in the shape of this screen here, hit the five key again, just so I can see through it. And we're really just kinda tracing this outline. We wanna get it, like, pretty close. Now that we have the secondary shape on the outside, I want it to be, I want it to be even now, so if we took this over here, and we held option, we could see it's 15 on the left, 20 on the top, and 16 on the right. So, let's just bump it to the right once, so we have 16 on the left, and let's make it one less pixel so it's somewhat even. I know on an actual MacBook Pro, it's not the same on the top as it is on the sides. And the bottom, it's quite a bit different because it has MacBook Pro written down there. So I'm fine with this, 16 on the sides. All that looks good. Okay, so I'll just leave that over there for now. Next, I am going to make another rectangle for this front edge, and pull that all the way over there. So there we have it; let's bring this over here, and now we're just gonna center align all these vertically. And I do wanna check, make sure that this is, this is 59 on the left and 60 on the right, so let's make it one pixel wider and then shift it over that way at 60 on both sides. Let's get another rectangle, put right here. Hit the five key, and we're only gonna round these bottom corners, probably like all the way. And now I can pull this thing back. I'll just kind of align it to the left, like that. And then to the center; it looks like it stayed on that art board, so just know that it's right there. We could even change the color to be a little darker, just for now, if we wanted to. And lastly, we're gonna create one more rectangle for this bottom edge, here. The bottom edge, but instead of just drawing that one, I know that I want it to match up with this front edge, so I'm just gonna bring this all the way down, and I'll just save this as my width, as the width that I know that I want it to be, and let's go ahead, let's assume that these two bottom corners are gonna be fully rounded. So we're just gonna jack that all the way up until it stops rounding. But you can tell, there's much more of a dramatic curve here than there is that we were able to recreate, so all we're gonna do is move this point over. So I'm gonna shift nudge it one, two, three, four, five? That might be too many. One, two, three. Three is probably good. It's not quite matching exactly, but I'm okay with that for now. And we'll do the same thing over here: one, two, three. Because again, we're not trying to get it 100 percent exact. We just want it to have that same look. And we might realize, okay, when it's over here, actually maybe four or five would be better. So maybe we do go back and do four or five on each side. Okay, so now we have our basic shape. And let me bring this over here, so we can work off of the art board for just a moment. All right, so now what I would do is I would go in here, let's bring everything up to 100 percent, like all this, and hit zero; okay, so, I want this background to be black, and I want these to be in the very back. And it wouldn't hurt to name our layers here. Just so we can stay a little bit more organized. So, we'll call this the back. We'll call this the screen. We'll call this the notch. And this can be the front edge, and this one can be the bottom. So this'll just kind of help us keep things nice and easily recognizable. So, one thing that's gonna really make this work is gonna be the linear gradient that we're gonna put on here. So let's change this front edge to a linear gradient. We'll bring up all the values to 100 percent. So one thing we can do is bring this over here, and now that it's got this linear gradient, we want it to go from left to right, and we're gonna go all the way to the left, all the way to the right. And we're gonna just kind of copy the colors here. So it's really dark on the edge. We're gonna add another point, just by hovering the gradient, we're gonna add another color of white-ish. Then we'll do another one of this dark. Then we'll do another one right there, of this. Then kind of in the middle, we want this light gray. And then we'll do the same exact thing over here. Dark. Light. Kind of a darker gray. Another color stop for right in here. And if you, you could add one in here if you wanted it to go a little lighter. We might adjust these later, based on how we want it to look, but that is a pretty decent starting point. And we can even kind of spread these out to make it look a little bit better. It looks like I might have not grabbed the right color for that one, and if it doesn't look quite right, maybe we could bump it up. If that wasn't quite dark enough, maybe didn't grab a dark enough, you can kind of play with that gradient a little bit, to make it look a little bit more like it's actually supposed to look; so something like that. We can always change this, like I said, we can always change it. So let's put this back on top of here. And let's go ahead and look a this bottom gradient. It really just looks like it's a lighter gray, going down to like a really dark black. So let's just choose linear gradient for this one, and let's make the bottom 100 percent, right here. And I want this color to be like right in there, maybe, and then I'll grab this darker, and we can kind of change it out, if we feel like that's too light. But like I said, we're just kind of roughing in these gradients for now. This one we'll do a radial gradient. And let me make sure these are 100 percent. So you can see here that it's kind of like light in the middle and then this kind of darker outer edge, so let's make ours have this same darker outer edge. Try to recreate this notch. Indention. And if two color stops aren't doing it, you can always add another one and slide it, slide it closer, like that. I don't know if we necessarily need that one. You could even experiment with making that a little bit lighter. You could even adjust like where it is. You could adjust the middle point, like maybe it's, further, you know, maybe it's something like this. You can really play around with it. But it looks like something like this is gonna work the best. Something like right in there. You can move these around, play with the shadows, but you can already tell, like, this looks like a MacBook Pro. Maybe we don't like the way that these colors are quite working. So instead of doing a linear gradient here, maybe we do a radial gradient, and that way it'd give us a little bit more color on the edge. And then maybe these hard edges, maybe they're a little bit odd, so maybe we bring this radius in just a little. And that means that we also need to bring this in, maybe one, two, pixels. Do the same thing over here. One, two. So we've basically designed our MacBook Pro here. We could play around with putting images here. For example, if we did our own splash, we could just grab any of these to insert it as kind of the screen image. And that's a pretty decent-looking MacBook Pro. The only thing we don't have is like the shadow and the environment. So if we did wanna create a little bit of an environment, and it depends on whether you're using a white background or a black background. Let's assume we're using a white one. Let's grab this shape right here, make it completely black, and we just want to kind of create this little shadow effect. So we'll do an effect here, and we'll actually create a, we want this to be a blur, layer blur. And now we're just going to crank up the blur here. Let's say, 24 pixels. I mean, we could even go up higher. And see how this is kind of, it kind of looks like a blurred, rounded rectangle? Well, we want our blur to be a little bit more like the shape of almost like the reverse of this shape, so it might actually be better to use this, reverse that vertically, so it almost has like a mirror effect, and then we can copy, command-option-C on this shape. Command-option-V on that shape. And then we have the same fill and the blur. And we could even, one, two, three, four, one, two, three, four, if we wanted to kind of over-exaggerate that, one, two, three, four. One, two, three, four. And then we could even play around with reducing the height of this for the shadow. But we're basically, we're gonna stick it right, we'll make sure it's in the bottom, call it the shadow. And you know, that might be too much. So we could actually start to play with the opacity. So just a little bit of blur, might make it look nice. That's kind of like sitting on the ground. But maybe we want it to be floating. Maybe it's fully floating, like that. And we bring this a little bit wider. So now we have like this floating MacBook. And really, we created that entire thing with nothing but rectangles and gradients. And this is the same exact process that you can use to create other things that there might be little objects like, I don't know, little coffee cups or like I, I designed these routers for the Fiberstream website in the same, exact way. So I created a rounded rectangle, with corners, and you might have to get creative and add a little point. You might have to get creative and add a point to the little shape, and then maybe you move that point up, so you have this curve. Then you can play with the handlebars, to bring in just the curve that you need. Maybe that's brought in there. Sometimes it's better to count, just so you're equal on each side: one, two, three, four, five, six, seven. One, two, three, four, five, six, seven. We can do our five trick so we can see through. Bring these both back over one. And just gonna round these rectangles here, give it a nice, big radius. Probably need to bring these down a little. And now that we've added a radius, I can see our radius is a little too large, so let's bring it down to like 20. And then bring that over, bring that over. But still like a little bit of a lower, kind of a, it's still not quite low enough, but this needs to be right there, so what I'm gonna do is add a point right there. And now I can grab these, and I can bring them down, bring these sides down, and I'm gonna double-click this, with command held, to create these, actually, just a single-click, to create those handlebars. So now again, we can manually adjust the curve of that shape, while still mathematically adjusting the curve of these corners. So now we've got a pretty interesting little shape. And again, I'm gonna use the linear gradient, make it go from left to right, make sure that is set to 100. And let's start adding these colors. We've got a little bit of a light gray, and then we've got a pretty heavy, dark gray in there. Probably adjust this to be 100 before I start on it. And then we've got the light gray over there. Let's add one more just in case. Pop that in there. So we've got that shape and this, remember, this is gonna appear a lot darker on a gray background. So, maybe we wanna go ahead and create. So you can see, like, now we've got that base shape, and creating these lines, we could do this either with the pen tool, and just draw a line, and then add a point and bring it up, and then with our move cursor selected, hold command, create another little, just a curved line, and bring the curved line over here. We're gonna paste it on top, center this, then if it's not quite long enough, we can just move it over, and then command nudge it over a few times, and then just increase the stroke one time to mimic that curve. Maybe it's 2.5, maybe it's three. Something like that. But you can see I've put a bit of a white drop shadow on that part, to give it a little bit more of an effect. So we're gonna do a drop shadow that goes negative. And we want that to be a highlight. A little bit less of a blur, and let's try like 10, or negative one with a two blur, with a 20 percent drop shadow. So that might be a little bit too strong, but you can see it's kind of creating this highlight right here, and what I may want to do is pull this all the way across, and duplicate this back shape and use it as a mask. So none of that stuff will hang over. That way we don't get this, like, hanging over line. And what's cool about this is we could still, we could still make it one or two, and it still kind of has that cool effect. So if I duplicate that, we'll grab this line, call it a line. We'll hit command-D, just to duplicate it, and we'll put another one down here. Have to make it a little bit wider. And I'm just kind of visually spacing these out. This was just based on the rough look of the reference material that I pulled off of Google. And for these antennas, we've got more rounded rectangles. So, let's just create one of these. It looks like they're a little bit inset, so one, two, three, four, one, two, three four. So there's our basic antenna shape. And we're just gonna max out the rounded rectangle corner here, and this is another linear gradient. Linear gradient going left to right, to create that depth. Linear gradient, we'll go 100 on that side, and we're gonna go kinda dark there, same color there, and then in the middle, we want it to be just a touch lighter, so it kind of gives it that rounded tube feel. That's pretty decent. We'll put this over here, call it: antenna. I think that's how you spell that. Send it to the back. Center it here, and then we have our antenna, so now I'm just gonna option-drag that, and rotate it, say, let's do it mathematically, so we do a six degree rotation there. Maybe it's closer to eight. And then we just pull this over here and do a shift-H, and we wanna make sure that all of these are spaced equally. We can do that really simply with the Figma spacing tool. It looks like these are already good to go. And if we wanna center all of this stuff with the rest, we just group this and then select those two, so even if they're off a little, like this, we can just center that and everything's looking pretty good. But how do you create these reflections right here? Well, we're just gonna use the same antenna shape with a utility gradient. So check this out. We're gonna go, we're gonna start with this one, because it'll be a little easier. So I'm gonna vertically rotate that, with shift-V. Send it to the front, actually, we might have to take this, and manually place it. We'll call this: reflection. We'll put this, kind of positioned right in there. Actually, and this might work best inside this masked group. And we don't really need it to be that long. So we could probably bring these back out. And we don't want it to be like this, because technically, if this was reflecting the entire thing would be reflecting so let's make sure that we put it right in there. And what we're gonna do is change the gradient on this to be from there to there. And so we'll have both of these be the same, exact color, and then we want this one down here to be a zero percent, and we don't wanna really be able to see the curve there, so we can either, let's pull this down a little, and then adjust the gradient, so, we just kind of want it to fade out a little. And this might be a little bit too dark, so we're gonna just take this one. We can either lighten up the color, but because this one's already the same color, what I'd prefer to do is just use the opacity, something like that. And then, if that's too sharp, too sharp of a reflection, what we can do now is add a blur, layer blur, but not like super heavy. Like, so that's nothing, no blur, but if we go one, two, three, maybe like somewhere in the two to three range, that would have a nice look. And then we might want to adjust our gradient, a little bit, kind of playing around with that. Maybe it goes a little bit further, something like that. So that's a pretty decent gradient. Maybe that's a little darker. You just kind of play with, you're gonna have to make, you know, gut decisions on some of this stuff; also, check out that drop shadow that's kind of cast behind that thing. We can select this whole layer, add another drop shadow that goes upside down, so it's casting a shadow from the back, and maybe it's a pixel blur, let's give it a little bit more of a, and actually, and you know what? We're actually gonna need to put this drop shadow on another shape that's not getting masked. We don't want our shadow getting masked. So now we have this, let's call this box shadow, or base shadow. So we don't want that shadow getting masked, because it was in that masked group. So now with our base shadow, let's call this: antenna group. We want our shadow to be on top of our antennas, so let's just reduce the blur a little bit on that, maybe like a two and a four. Maybe that's more like 40 percent. Something like right in there. So now we have a nice little shadow on there. And now we can actually, now we can group these antenna reflections, so let's create a group called: reflections. And let's pull this one over here, and we'll just do our negative eight. Is that kind of how we did it? Yeah, something like that. And it looks like I might have blurred this a little bit more. You can always go back and play around with blurring it a touch more. Bring this over here, and shift-H on that. This one's gonna be, need to be a little darker just so we can see it. So let's, before we just make one a little darker, let's make them all a little darker. And see if, when this one starts to show up a little, does that kind of overpower the other ones? Maybe a little bit. Maybe this one stays where it is, and then these two, we just adjust the opacity of the overall to like 60 percent. We're just trying to create this realistic kind of environment with this light hitting and the reflections and all that. And you could see, I could very easily keep going, create another linear gradient, create another box shadow, but one thing I also want to point out is this big, kind of spotlight. This is really gonna be, you could just create a big circle, make it white to start with, give it a nice, big layer blur, and we're just really gonna crank this up to like 80, 100 even, you could even go 120. And then because you blur it, it might feel a little too large, so maybe you bring it down, and let's send this to the back, and maybe we bring this out a little bit more. So now we're gonna play with the opacity, and maybe it's a little bit too much of a blur. We're gonna kind of create this spotlight effect. And so it's a little bit hard to see without the rest. So let me copy this; I'm gonna create another version of this Mac Pro on a black background, just so we can see the spotlight effect take place. All right, so we want it to be a little bit larger, kind of, it's like a light shining down, similar to what's happening behind me. I've got this light right here, pointing at the background so it just kind of creates a nice environment. And it's just, like, a little better than just a flat background. So I've created this, I'm gonna send it to the back, and because we're now on a black background, I might wanna bump up the darkness of the MacBook Pro. We want there to be a little bit of contrast, at least, between the MacBook Pro and the background. You can see, even on theirs, they have this outer rim of aluminum, so we would either want to put on that little outer rim of aluminum, or create some kind of contrast. So just for speed's sake, let's create an outer stroke. And let's give it just like this color right here. And that gives us a nice little, quick rim of color. Maybe it's a little bit darker. Maybe we try to make it as light as we can, er, as dark as we can, while there's still enough contrast. I'm just kind of looking at the, I'm trying to just decide: is that enough contrast? Okay, so now because we have this big spotlight and maybe it's 10 percent, even, now we're gonna really wanna separate the illustration from the spotlight, so we need a much darker shadow, because it's on a black background. So we need this to be a lot more contrast-y, right there. Maybe we need to reduce the blur a little to really create this separation between the spotlight around it and then the shadow that this would be casting. We might even need to add a little bit of a drop shadow onto this shape, so really just experimenting with drop shadows, with blurs and linear gradients. There's a drop shadow on that. The only thing I don't love about this drop shadow is it's kind of, it's creating a drop shadow up here, which is a little bit unnatural. So another thing we can do instead of that is we could duplicate that shadow, and then we could reduce the blur, and maybe this one is a little bit smaller. Maybe we adjust it: one, two, three, four, five, six, seven. One, two, three, four, five, six, seven. So now we have a smaller blur, that's only at 10, coupled with, let's call this: smaller shadow. We'll call this: big shadow. Then maybe, you know, if we move this big shadow, we can see how that small one looks. Maybe the small one gets even less of a blur. And maybe the big one, we grow a little bit larger, and stick it back under there, see how that starts to look. So now you can see we're starting to separate the MacBook from the spotlight. But, and this looks good, I like the way that looks. But if you were to ever turn on a white background, your shadows are gonna be way too dark. Because it's just kind of a different lighting environment, so you have to pay attention to the lighting environment when you're going dark versus light. So overall, we're just using rectangles, linear gradients, drop shadows for little bevels and highlights, and if you pay attention to just light coming from the top, and you could imagine like, oh, maybe there's a little highlight rim right here. Or maybe there's a darker drop shadow, and it doesn't have to be shapes with drop shadows. You can create your own shadows out of custom shapes. Make it black, blur it for a shadow, or you can make a white circle, blur it for a spotlight, and we're just adjusting opacity, and we're just kind of using this systematic approach to creating little illustrations like this. Now, it's not gonna work for every illustration style, but if you're in a pinch and you just need to make something interesting, this is a pretty good way to do it. Just grab yourself some reference imagery from Google, and that's exactly what I want the homework to be for this lesson; if you wanna do a MacBook Pro, the same way that I just did, a lot of times those front-facing angles are gonna be the easiest, because it's just squares. You can definitely do the isometric or the weird angles. You'll just have to draw a lot more custom point shapes and round those, so I would encourage you, if you've never done an illustration like this, draw the forward-facing MacBook Pro, or any other computer, any other kind of mechanical illustration that would be easy to, quote/unquote, easy to recreate with gradients. And just give it a shot, try to put one together. If you want to experiment with making it red or making it green or white, you know, there's a lot of liberty that can be taken when you're designing, and that's what I did on the contrast version. I made a black version, because I wanted it to pop against the white background, and the yellow contrast app. So just draw these with some shapes, and get started and try to learn how to start making your own, little, simple illustrations.


=== FILE: 6-11 app icons.txt ===
------------------------------
﻿- If you're designing and interface, especially for a mobile app or a desktop app, you will inevitably be asked to design the app icon also. Now, sometimes there are specific teams that handle branding, that will handle more of the app icon work, and it... Because it really is an extension of their brand. But it is also a visual representation of the work that you are doing for the interface. So, it's pretty tightly tied together, and if I ever have the opportunity to design the app icon, I totally go for it. Because a lot of what I'm putting into the app, and the load screens, and the app icon, it just all works together. App icon design in general, it can be an entire separate course. So I don't want to go too detailed on shapes and styles, and iconography, and glows, and all of that, because that would just simply be a little bit out of scope for an interface design course. But I do want to give you some practical tips to just design your own app icons inside of your design tool, a way that you can kind of test it, and see it in different contexts. So, let's just dive in and take a look at some projects. This is the "Steady" iPhone app that I designed. It started as a web app. Ended up being an iPhone app, and it was basically a way to consolidate all of the kind of gig-economy worker's tasks. So, like, if you're doing "Task Rabbit," driving an "Uber," driving a "Lyft," it's like a way that you can keep track of everything, and have a steady income, even though you were doing all these different gig-economy type things. So, I was only hired to design the U-I, and to work through the U-X of the app, and they were seeking other places to get the branding done. But I felt very strongly about the branding, and so I just started designing it anyway, and eventually they accepted the work that I did, because I just felt so strongly that it needed to have a very simple, but strong, kind of mark. So, this is the mark that I came up with. And it was actually just, I bought this typeface called, I believe it was "Trim" or "Mikro" from letters from Sweden. Really good type foundry. And they have this typeface, and it's got these cuts, these vertical cuts on the letter forms. And it just felt like a very strong, kind of rigid metaphor for the "Steady" concept. So I carried that typeface style forward into the kind of branding mark. So using the S, I used a circle to, kind of, start off with, and then I just cut the edges off the same way that the typeface had their edges cut off. And, so it kind of created this shield look. This shield with the S, it just felt, kind of, like, safe and strong, and secure. And with those ridged edges, it kind of feels steady. And so I wanted to see what it looked like, kind of, in the app store, so I just took a screenshot of the app store, and just placed this thing right in place. I thought it would be really cool to show a white background icon with the purple. And this was just an easy way to just scale it down. These icons in this particular context were roughly 62 by 62. So, just taking the existing mark and using, kind of, the... You know, I-O-S has a very strong, kind of, template language, and they give you a grid to work with. If you simply search for "App, icon, I-O-S, Apple," something along those lines, the first search result is going to be developer.apple.com, and you'll have access to all of their image sizes and different things, you know, they recommend. 180 by 180 for iPhone, so this would be 60 points at three-X. And there's just tons and tons of sizes, and these are always changing, so I don't want to go too deep into the sizes. But the same way with I-O-S, your desktop apps for the Mac, they're going to have different sizes, and those are listed on the Apple developer website just the same. So, this is the "MyMonero" desktop app icon for the Mac, and the desktop icon guidelines are very specific. You'll see a lot of these have... Well, maybe not a lot of these, but some of them, like this "iA Writer", and the "ScreenFlow" here, and the "Final Cut Pro." You can tell that they're all slightly just turned a little bit, and that's because in the guidelines for the desktop app, in the Mac, on the Mac, it tells you that the icons are tilted at negative nine degrees. So, if you look at this one, it's not something that you have to absolutely do, because a lot of these, you can tell, are just straight up doing their own thing. But the notes, "Final Cut Pro," a lot of these are, they are adhering to that negative nine degrees. So, if you just search for the guidelines for those app icons, you'll get a lot of little tid-bits on those. And just like I showed on the I-O-S, all of the different sizes that are required for the app store, the iPad, the iPad Pro, they're all slightly different, so you need slightly different versions of those icons. So, that's why I've got the app store version right here. I've got the five-12 version, 256, all of those icons that are needed for different sizes. I'm taking the existing thing that I designed for part of the U-I, like, these colored wallets that indicate, kind of, which wallet that you're looking at. I already had these really interesting, little, digital crypto-currency wallets. So I just took that same exact concept for that, and created, kind of, a darker, more of an app icon, with the "MyMonero" branding. And you can tell I added, like, a little bit of noise on top of that. So inside a sketch, I selected this M-N. You can see I've got another fill on top of here, and I just selected one of these little noise patterns, put it at 5% opacity, just to give it a little bit of texture. But I just, I wanted it to be nice and clean, and cohesive, and I wanted this to match a lot of the internal U-I components, so it had a very consistent feel. And you can take that as a big symbol, and then rotate the symbol and scale it down, so you can have all these different options. The only catch is if you get really small, you might have to go and manually tweak some of those details on the much smaller icons. It kind of depends on the nature of your icon. Sometimes you can get away with just scaling it only. Other times you have to dig in there and kind of tweak the smaller sizes, and go from there. And if you remember the cen-a-sampler app, here's a bunch of different versions that I started playing with. Remember on our simple illustrations lesson, where we're talking about shadows, and highlights, and drop-shadows, rounded rectangles with linear gradients? That's all I'm doing here to create what I thought would be, like, a cool, little, mini-board that kind of represents the timeline of a mini-player. This ended up being a little bit too detailed. The actual logo was more of like this loading, kind of, icon with a notch taken out so it looked like a C for cen-oh-sampler. I even tried one with the piano. I tried one that was a mix. But ultimately we settled on this very simple version that was just a circle with the cen-uh-sampler logo. And we ended up using something like this, and it's really just a groove cutout, with kind of the inner shadow, and then I put drop-in shadow on the purple using a linear gradient. But again, this one's at the big 10-24 by 10-24. A lot of times it's better to start at that big size, and then scale down. But sometimes you don't always know exactly if you're needing to produce a big icon, or if you're just, kind of, producing some concepts, it's totally fine to take a screenshot of your home screen, whether it's an iPhone or an Android, and play around with some different ideas. And again, a lot of times I do this last, because now I know what all of my interface pieces look like. I know what the iconography is like. I know what the colors are like. So, now at the very end, I will oftentimes start to produce the app icons, at the very end of the project. So, this was for the "SmartLine" iPhone app, and they have a very strong brand team that would probably handle this, but I wanted to produce some nice icons as an alternative to what they currently had. So, here's how I handled it. I took all these screenshots of the app store, and the app on my home screen. And then I also had a friend screenshot Android stuff for me. Actually, I may have just pulled this off of Google. I can't remember. This is my main icon. You can see, if I move this around, all of the others are getting moved. So, this is where I designed it, and this was largely based off of some of the icons that I used inside of the actual interface. I wanted to see what they looked like in context. So, if I hide these, and I hide this section right here. These are just rectangles that I've drawn over the top of the app, so the app screenshots, just because I wanted to hide all of the existing stuff. So, I just drew rectangles over that stuff, so I could put my designs in place. So, this is what the current icon was, and I can just, kind of, move this over. So, I wanted to keep the same spirit, but there's not much worse, in my opinion, than embedding a long name inside of an app icon. Because you can put the name in text below. So, I like to keep an app icon a actual icon. And you can look at any of the Apple icons. They're all big, big imagery. Especially, like, the native ones. You've got the heart, the app store, the notebook... The clock is maybe the exception. They could probably even do away with the numbers, but it's not like they're not trying to say a big name of the thing. The calendar and the clock are small exceptions. But overall, like, weather, it's, like, a circle. You could imagine creating this cloud with a few more circles. It's just really, really simple. So, I wanted to keep that simplicity. I'm a big fan of simplicity in app icons. And we had already settled on this color, and I just wanted to, kind of... I wanted to make these a little bit more geometric, so I've got this circle that is, kind of, centered visually inside of this simplified, little speech bubble, and we were updating the colors. And I also wanted to show what it would look like with the new app designs in place. So, just kind of taking screenshots and putting them in, is a great way to show what this could look like. Export this entire frame as a possible app store screen, just to, kind of, get your concept across. And then the same thing for Android. A lot of these apps are rounded circles. So, I just took the exact same master component here. Got it right there! And I just scaled it down, rounded all of those corners the same way I did for just the 12 pixel. So, it's just an easy way to create at the end of a project, to, kind of, get your point across. You can put it right on top of the screenshots, or you can design it big, if you're getting ready for production. But these are just a little... A few little, tips and tricks that I wanted to share with you for your app icons. Like I said, there's a lot more that could go into this for a bigger, more drawn out, in-depth look at what makes a really good app icon. But if you want, for your homework for this, you could attempt to pick any of the projects that you've designed for homework so far, especially if it's a mobile app, and then you could try to create a simple, little app icon for it. And you could use any of this as reference. Like I said, one of the best things to do is take a screenshot of the home screen, and design right on top of it. Make sure your colors are nice. Look up the Apple developer sizes, and just, kind of, familiarize yourself with what needs to happen when you are to produce these types of icons. So, like I said, take any old work that you've done, and just create a simple, little icon for it. Maybe you create three, or four, or five, but either way, it's up to you, and I'll be excited to see what you come up with.


=== FILE: 6-2 static.txt ===
------------------------------
﻿- The most common place that you're gonna come across static images, in my opinion is gonna be mostly marketing sites. A lot of times you need a big background image for your header. Or you need to have some type of static illustration or a photo that represents the things that you're talking about. When you get into like actual product design, with apps that are doing things, and there are functions and actions and buttons and links, you'll have maybe some static images, maybe like in some empty states, or some maybe some initial signup flows onboarding flows, most of the time in apps it'll just be kind of a single image, it might be a background image, and we'll dive into some of that. But for now. I wanna focus mostly on kind of using static imagery, in backgrounds and for marketing sites. And this will still apply to backgrounds in app design and things like that. But first of all, let's just take a look at unsplash.com. And let's just kinda talk about some key attributes of things that I like to look for when I might need to use a static image. Now it's really going to depend on your project, what kind of photos that you need. But for this particular example, let's just assume, okay we have some type of motorcycle-based image. Okay, so we've got this kind of interesting looking dynamic photo. But let's say I need to use say we're talking about some kind of lifestyle for motorcycles. And I need to find a background image. This one's kinda cool. So but I'm trying to imagine why would I put text in this image? And this part of the image is not really that interesting. This part is really cool right in here, but the rest is not. So let's just do a quick little search for motorcycles. And let's just kinda check this out. Okay, lots of different types of images here, you've got some that are just kind of an interesting image, but it's maybe lacking a little bit of personality. We know that if people are in the photo, it's gonna have more personality, like this photo says a lot compared to just some windshields. This is kinda cool. This is an interesting, like, I like the look of that. But the photo is not that interesting. There's not a cool perspective. I do like the perspective of the road, but it's just kinda flat maybe a little bit not as good. This one's okay. But usually, when you're looking for a background image, you need something that's gonna work in a bigger landscape type format. This one would work for mobile phones. But whenever I'm working on marketing sites, I like to think of what's gonna look best on a desktop first, because oftentimes it's a little bit more tricky to design and create a composition for a bigger desktop than it is on a mobile screen. A mobile screen, you can get away with a lot less design. But when you're working on a desktop, it's maybe a little trickier. So I'm just looking here, trying to find a decent photo. This one's a little better. Let's try to do maybe a motorcycle instead of motorcycles and see if we get anything different. Okay, this one's kinda cool, but still not quite that nice, just looking for one that would work as a background image. And sometimes this can be a really deflating process like trying to find an actual image. This one actually looks really cool. Every part of this image is kinda nice. You've got a little bit of background blur, and you've got just a really nice image. If you're not gonna have negative space to work with, you could imagine maybe putting a gradient in this area and having some nice big text on top of that. So let's go ahead and download this one and maybe we'll grab a few others just to kinda compare. I'll tell you why, we're gonna go back to this first one that we found, actually this one's not too bad, we might have to maybe punch out the colors or crop it maybe slightly differently. But let's grab this one as well. Let's look at this one as well. This one is probably a little bit more interesting. I don't know if I like the face he's making there. But I wanna show maybe how we can put this one together as well. So let's download these two. Alright, so we've got these downloaded, show these in the Finder. I'm going to pull both of these, all three of these into Figma. Alright, so we've got three different images here. So what I'm gonna do is go ahead and create a frame for a MacBook Pro size 1440 by 900. You could go bigger if you wanted to. I like to start at this size and all of a sudden you can see that our images are way too big for that particular frame. So if we put that in the frame, you can see this is just way too big. So a lot of times I'll just go ahead and scale them all down roughly the same size. And let's just stick these in here. I'll go ahead and create two more just so we can have each one of these has its own frame. And you can tell this one got scaled down a little bit too much. All right, so let's give ourselves a little bit of text to work with. I'm just gonna type in. Let's ride and for now I will do inter... I kinda wanna do a condensed typeface, that would be a little bit more, give it a little bit more like let's ride like a condensed, tighter, maybe all caps but definitely more of a condensed typeface. Trying to see if anything condensed would come up. And now I've got a... I've got a folder called Action Condensed that I bought, but I don't, this will not be available to you, if you haven't bought this font. There's also another one that I bought called tungsten. That's pretty nice or these types of scenarios. Kinda like this tungsten a little bit more. This is from Hoffler and company, it's really cool font, just kind of a nice, you can see that it just has a little bit more attitude, this particular font, on this image it just kinda has a nice little attitude. And you could imagine we had, maybe we'd stick with all caps, and we'll do some type of subtext, would go here, and because this one's at 210, maybe we'll bump that to 220. And let's bring this one down to like 40. Maybe this would look better on top. This text might not actually work as is more of a display typeface, so this text might actually need to be something a little more standard. Something like that for now. I just wanna get these elements in place to show how we're gonna start working with this text on this image, specifically this static background. And remember, not all backgrounds are necessarily static. I mean, this one could potentially be dynamic, it could be dynamic, but it might be based on my decision or the product owners decision. It's not gonna be a user uploading an image right here necessarily, no, this looks a little bold, a little too bold, and maybe a little large. I just wanna get a nice relationship between some of these things. So something like that. So you can see, maybe this is our text, and we're trying to figure out where can we put this text on this image? Maybe it looks better. Maybe it looks better on this actual like concrete. So maybe we have to bring this over here. And a lot of times, you might actually just find yourself playing around with an image and be like, "Man, it kinda looks cool with a white border over there." Or maybe you need to, maybe this ends up being a darker text and you have to use utility gradients to fade this out, because this particular image is just not gonna work just straight out of the box, we're gonna have to be a little bit more resourceful when it comes to this particular image. So maybe we try to fade it out to white or gray or green or any of these colors that could potentially work. Want to make sure these are the same color, zero percent right there. So you can tell like, this one's just a little bit harder to work with, that's not really looking that great. So I'm not certain. I actually have a little more negative space on this side of the image. So let's bring this, let's make it a little larger and bring this back over here. And we'll do this in white again, maybe we go even larger. Sometimes you have to make an interesting crop on the photo like this could be an interesting crop versus just the entire thing being like this. Sometimes cropping it like that can be a little more interesting and a little bit more dynamic. Then you have a lot going on over here compared to the open, more open space. I'm trying to see how much can I fit in that area. And even still, this is a little bit the contrast. Isn't that great? So I'd probably still wanna go ahead and put some type of utility gradient on this. And we'd go probably do a black to zero percent black and let's make it go from left to right. All right, now we can actually start to play with, should this be full black, or could we tone it down, this is zero right here, and 10%, 20%, 30%, 40%. So we don't wanna go too dark, but probably, I would say right in the 20 to 30% range is looking pretty decent for this particular image. And you can see like, this doesn't really work over here. You could also if there's more negative space on one side or the other, it looks like there might be slightly more negative space here than there is over there. Unless there's a big reason you wouldn't wanna do this. You could just choose the photo hit Shift H and reverse it and reverse your gradient, and maybe this goes over there. But really, the thing that is helping this work a little better, is really just the way that we've cropped this photo. Now, I don't think this is necessarily the best design in the world. But it's just a way to actually start working with this static image and trying to use this image to the best of its ability because this is the image by itself. So you don't necessarily just have to grab the image and just use it as is, you can scale it and make it bigger and try to find that interesting crop, a lot of the composition of the photo and the way it relates to the entire design, it's gonna be really, really important. So that's trying to play around with this image. Maybe let's see if this one can work a little bit better. Already, this one just has a really cool feel with the... There's a lot more depth I feel here. And we'll just copy this down here, just so we kind of remember the original image. So the same way that we worked on a crop for that one. What if we try to accentuate that. But actually, some of this gravel, the way this pattern is starting to happen with the, there's a nice kind of interesting pattern there, that actually we start to lose the cool factor of this photo. If we start to crop it like that, because these trees and this mountain, I mean, it's just it doesn't look that good. This part looks really cool. So actually, look how cool this starts to look, when we start to crop it like that. And then we have a lot of negative space down here. We could even put it over here. But again, I mean, this is not even necessarily what we're... We're not necessarily trying to do a lot with this. So I'm just gonna maybe mix it up a bit, try to go something different. Maybe it's a little smaller. You'd also have to keep in mind you have a navigation up here, you have like a little logo with some navigation elements. I'm just kinda roughing this just to give you an idea of how this photo could work, and sometimes you can even start to blur these photos a little bit, just to give yourself a little bit more to work with here. Where's my blur? Where's my blur? Let's go. Choose the Photo Effects. And we're gonna go layer blur. Notice how this starts to look pretty interesting when we blur a part of it. If we were in Photoshop, we could do more interesting blurs with like a gradient mask. I'll cover a little bit more of the Photoshop techniques in another lesson. But this is just an example of how you can make your text and maybe now you have your elements. They're starting to line up a little bit so you kinda create this composition. When it's like hit the road with same typeface, but instead of like a magazine style composition, we're starting to kinda frame this photo in a pretty interesting kinda way. And let's move on to this one, we have a completely different type of thing. I'll grab my elements here. Okay, so you can see this one's, this one's pretty busy. So this right now it's just kinda adding into the clutter of the image. The image is really nice, but it is kind of there's lots of little details. So you would almost have to go more simple with your type on top of this image, so something like that could work or because this is such a big image, there's a lot of details, maybe we go huge with the text and send that to the back. I'm gonna send this to the back and then hit group on these two. And I'm gonna mask that image and see how that looks. Now play with the size of the image in the text. So that could be another cool way to deal with this static image. And maybe the white background doesn't work as well. And we're starting to play with maybe something and we haven't firmly set our design direction necessarily. But we're just kinda playing with how, look at all these different ways that we can play with a static image, whether it's kinda coming up with a cool crop or blurring the background, or maybe we do some type of interesting clipping mask with the text. And another thing, another thing we can do to the static image if it's, we're having a hard time finding these... The contrast in here is, it's great on this lighter area, but it's kind of messing up over here on the other side. Well, let's just grab this photo, and we'll add a little gradient to the actual photo that's being clipped. We'll add white down here. And blur it, pull the gradient up there. Now we can put that as zero, nothing is there. But if we just start to bump it up just a smidge, we could even use this red color in here. Or maybe we kind of repurpose one of these Gray's, gonna select both colors and play around with the opacity here, you might have to play around with the opacity overlay, and then the background color here and play around without some more. Maybe it's really broad, bright, it's really just kind of experimenting with things and not being afraid of making a mistake, and just trying to figure out what we can do with this image. So even though this is a static image inside of the text, you could imagine maybe we cycle through a variety of different images inside of the text here. And this could end up being exported as an SVG element. It could just be an SVG mask over the image, and the image could rotate. You could imagine hovering over the word and maybe the image slides a little bit and could create this cool effect. And now that we've done that, maybe we try to see what does this image look like inside of there. So I'll just paste this right into the group. And you can see that this image looks pretty cool. This image looks pretty cool in here. So remember, this one is really interesting down here at the bottom, not as interesting up here at the top. So we could play around with, if we do something like that, then we're actually kinda getting rid of this area. That's not as interesting, because this actually looks really nice. I like that a lot. So you really are at the mercy of the photograph that you're using. When you're using a static photo, you just have to kinda rely on your instincts for what looks good, and you have to think about, "Okay, how can I actually use this photo and crop it. "How can I make the static photo interesting?" And even if I'm gonna rotate in three, five, multiple images, it really has to have like a really good quality of an image because any of these, if you just kinda pop them in, they're just not gonna look quite as good without kinda being without using a little bit of work. So I'm actually gonna just pull this down and show. Okay, what if we needed to bring in an image here, and we needed to have a bit of a layout. So again, what I'd probably do is create a mask of that size, just like we masked the text there. I'm gonna select the rectangle and the image, group it and then I'm gonna put a mask on that back rectangle. That way I can just kinda create an interesting crop the same way that we created that other crop. I'm looking at these two motorcycles. I don't necessarily want them both leaning the same exact way, that just seems like repetitive. So I'm thinking about, okay this guy is leaning that way, maybe this one needs to keep leaning that way. And maybe it's more interesting if he's a little bit out of frame. Is that more interesting than this? Just you can play around with it. And once you've kinda made these decisions, you don't necessarily have to crop this photo and export this as a crop photo, you could export the entire photo, but maybe you have some x,y coordinates that move it around, based on the way that it looks good. So there's a number of ways that you can implement this as well. You could definitely talk to your developer, but also looking at these images. Again, I'm trying to look at design direction and overall style. Maybe these rounded edges on the crop. Maybe it's just not quite working quite as well. But I can still go in here and change this back to action. And go with a really bold version of this. So we're gonna make our photo a little larger here, as you can see that has a different, a lot of different feel to it and the other one. You could even start to overlay some photos, we're just playing around here with these images and ways to kinda make it more interesting. So lots of different little tricks in here just to kind of play with static images. But I think the biggest point is that you just, you have to use really good imagery. And if the imagery is not really good, you have to find ways to make it appear better than it is on its own. You have to play with kinda the composition, the crop, are you gonna blur it? Are you gonna mask it, find a way to make it look really good, even if you have actual really good photography that was done from a photo shoot, you're still gonna need to pay attention to the composition and how the images relate to each other on the screen, and how everything works together from the typeface to the images and it's gonna kinda all come together based on the direction that your project is gonna take. So for homework, I want you to go on Unsplash the same way that I did, and just come up with some type of theme that the same way that we came up with his motorcycle and we chose ride, just find some topic that interests you, and try three different images that look really good and come up with just some kinda fake thing that we just did here. And just work on composition, cropping, blurring different techniques to make those photos look a lot better than they are just kind of on their own. So post your work and I can't wait to see what you come up with.


=== FILE: 6-3 raster.txt ===
------------------------------
﻿- To rasterize or not? So in this video we're gonna be talking about what do you do when you have a digital design of your interface, that you've created and its all nice and its built with vector shapes, and its scalable. But what happens when you need to put that into a marketing site? Or some other type of format on a website? So, do you rasterize those images? Or do you leave them as vector shapes, export SVG things like that? So, we're going to look at two different versions of that problem that I've dealt with in the past and learn some tips along the way for how to deal with that. So first of all, let's just take a quick look at this contrast app again. So, I've got all these built inside of sketch. This was before I was working in Figma as much. So I've got everything built in Sketch, but still basically the same. You got little rectangles and background objects and things like that. But when I got ready to create the website here, I just brought this in as a symbol, and I actually went ahead and recreated, I wanted like a nice contrast with that yellow, and I wanted this kind of like sharp black, I thought this, the idea of making a black MacBook Pro would look really cool. So, I actually drew this MacBook Pro with some simple shapes and gradients. Got the screen here and, just kind of really manipulating some rectangles, to put this all together. But when I got ready to implement this on the website, I needed to decide, do I need to just rasterize this all as one image, export it as a transparent PNG? Or should I use SVGs? But in this particular case, I decided to recreate it with code and with CSS. So you can see on the website, this is not necessarily something that you would have to do but it's something that you could either do yourself if you're a front end developer or you could talk to your developer about. But each one of these little divs is part of the actual. So I've got MacBook Pro top, I've got the screen, I've got the menu bar, I've got the dock, things like that. All of this was recreated with shapes and CSS and that might have been overkill. I probably could have exported the MacBook Pro as a transparent PNG. But I went ahead and recreated it and I wanted to be able to scale it pretty easily without any loss of quality. And sometimes if you recreate something with CSS, it can load really fast, versus loading in an image. But the other thing I wanted to also, I wanted to be able to, when this loads, I wanted to be able to change the color of this and I could have done that with an image sequence but then you'd have to load in a bunch of different images. And it could potentially be another slower kinda thing. So, because I was doing this by myself, on this particular site. I just decided to go ahead and recreate all of this with actual code. And I could have probably done SVGs 'cause there's not a lot of complicated things here, but just because I knew that I wanted to be able to have more interactivity with it, I knew that recreating it with code would be a little bit more flexible for the future and that's exactly what I did on the guide. I was able to reuse all of that same code, without really needing to export any additional assets, I'd have to maintain a bunch of assets, and all of these pages could load really quickly, because they're not really loading in any images. So, if I can put the scores in as code, it just makes it a little bit quicker to actually update this. So a lot of times if you're exporting designs for your marketing site, you have to kind of consider, are you gonna, do you want this to show interactivity? Or do you wanna just show a pure screenshot of your work? And if and if it's the latter, if it's just a screenshot, then, then you can totally just rasterize it, export it as a PNG. But if you want to increase the interactivity that's gonna be shown on the marketing site, then it might be worth using SVGs or even potentially recreating it with code. So on this next project, on the MyMonero site that I designed, I knew that these weren't going to be fully interactive, because I wasn't doing the development. And I wasn't sure exactly if they wanted to do enter in any interactivity. And sometimes the budget doesn't allow that. So when you're doing things on your own, you have a little bit more flexibility. But this one was done on a tight timeline, and there wasn't any need for some elaborate interactivity. We just needed to show these images as big existing kind of screenshots of the components. So because I knew that these were just all going to be static, I could export these and just use them directly on the actual website. So in this case, in Sketch, one of the things I really like about Sketch is I can put two X right here, and I can just drag this on to the artboard, or to the to the canvas, and it's going to come in at two X. And if I change this to three X, gotta give it a minute to process that. And then I can bring this over here, and I got three X, and I can keep doing that over and over and over. And then what I always do, and this is a big thing when it comes to actually rasterizing your digital designs, make sure that you export these at least two X, and then you can go ahead and divide them by two. That way they're gonna appear nice and crisp on retina displays. So now if I zoom to 100%, it's not gonna look like I lost any quality on these and especially even on this one, sometimes you might want to show you know a big detail, so it helps to export it at, you might export it at eight X, and then scale it down by half. That way, when you have this big detail, it'll be nice and crisp. And that's an easy way to make it look nice and crisp, without having to recreate it in code or export SVGs, it's just a little bit more simple to use, but you just have to make sure that you export it at a certain, export it at least two X sometimes higher, and then divide it by two. And back before retina screens were popular, there were a lot of people using a one X asset and a two X asset and you would load either one based on the screen size. And that, that's still that's kind of front end developer land, so you don't have to worry too much about it. You just need to make sure that you're producing nice crispy retina quality images, because a lot of devices these days, and definitely into the future are going to have these high density displays, and so you'll kind of want to be aware of how how crisp your images are going to look, especially when you export them. So in Figma, you can't actually grab it like you can in Sketch. So if I wanted to display this on a big dribble shot, or if I wanted to put this inside of the marketing website, a lot of times, what I would do is just option drag. And you can see this is set at 375, which is iPhone size. So decide whether or not you want to keep the title bar in there or not. I think for this example, I'll just remove it. And let's go ahead and give this kind of a radius, make it look kind of like a phone. And what I'm gonna do here, I could I could export this, get that out of the way. I could export this at two X and even see the preview. But currently, you can't actually drag this off into the canvas, so you could export it and put it on your desktop and do that. Let it export. Grab it here, bring it back in. So in Figma, it's actually gonna to bring it in at 375. And so if I zoom to 100%, it's gonna to look pretty good. So that's, that's a subtle difference between Sketch and Figma, if you export it at two X, you can see it brought it in 375. Whereas if I go and inspect this, you can see the width is actually 750. So Figma is kind of intelligently sizing that based on the export. But, so now I've got this, sometimes exporting and then re importing can be a bit of an issue. So what you can also do is you can make a copy like we did here, and if you hit K, that will change it to the scale tool right here instead of the just straight up transform. And then you can actually scale this to be 750. I'm just kind of paying attention to the width in the properties panel. So I'm scaling it to 750 sometimes, it's can be hard to do if you don't zoom way in and get that exact, there we go, 750 right there. So now you can see that this is, this was 16, now this is 32. So everything has been scaled up by two X. And then you can click this thing, type in rasterize selection or, or you can hit command option shift E, I may have set that as a quick key, and then you just rasterize it there, and then you have your rasterized image, and then divide by two, and you have basically the same exact thing here. So there's multiple ways to do it. And especially if you if you don't want to recreate this for your marketing site, this is just a quick and easy way that you can add these assets into your marketing site. So now, if I wanted to go in here and start working on, typically this would be on a different on a different document. But you know, I can start working on my website now, bring in these assets, start playing around with some different layouts, make this one white. There we go, I've got my big kind of, actually, you know what scaling it messed up my E there, so you'll have to be careful for, if that is set, that for some reason that got scaled in a weird way. So if you do that next time, and you hit K, and you want to scale it up, so if you just do 750 here, if you log that and do 750, it's just gonna kind of try to stretch it out, and that's not gonna work. So you have to use the scale tool, and then zoom in and get it 750, it's not that hard to export it either, it's just kind of a matter of making sure everything's right. For some reason, that particular text field messed up. So all you have to do is just go in here and adjust that back to the auto width, and then you're good to go. Well, it's just a couple of different ways to play around with rasterizing the image or not. Again, if you're gonna, if you're gonna make heavy use of some kind of interactive or you want to show something on the marketing site, it's gonna be better like I did with a contrast app to recreate it. If you look at really any of the Stripe.com assets, they're recreating just about every bit of that with code, and animating the code, it's a lot more work, it takes a lot more front end development time, but the payoff can be pretty big, especially if there's a lot you want to do with it. But this is the quick and easy way to make those rasterized images when you are just going to show static website images like this, like we did on the on the MyMonero site, and then you can add shadows to it and there's you know, not your there's still a lot of flexibility. So you make the decision on how you're going to treat your own digital designs, but it's often you'll find yourself, trying to figure out what you should do about exporting it or adding it as an interactive piece. And a lot of times, you'll have to make sure that your content is really good. That's why you wouldn't want to have a bunch of lorem ipsum. So you might want to craft a story inside of your interface before you export those because there's, you get into this cycle of like, oh, we exported this stuff, but it says the wrong name. It's got the wrong dates, the numbers don't add up. So you want to make sure that your content is good too before you export it. But these are just some rasterization tips that hopefully will help you in your image production for your project.


=== FILE: 6-4 dynamic.txt ===
------------------------------
﻿- In some of the other lessons, we talked about curating beautiful images and using phenomenal imagery, anytime you have the chance to put in photos, to put an images into your word, you need to make sure that the imagery is phenomenal. But, when you're dealing with dynamic images, you can't really control that very much. You're not gonna have any control over a user-generated content, and even if you are producing a project for a client, you're not really gonna be able to control what they are upload into the thing that you designed for them. And chances are they're gonna upload a really crappy image and chances are users are gonna upload anything and everything, so, we need to be prepared for those situations when dynamic images are involved. So, let's take a look at a couple of projects where dynamic images are involved and let's go over some techniques that you can use to really prevent bad things from happening. Okay, this is the 12Stone iPhone app here. They produce videos every single week or the previous Sunday's message and the next Sunday's message, they film a teaser and there's just tons and tons of images. And you can see that there's just lots of different thumbnails for all of this type of work. Now, these I'm using their actual thumbnails, so there's not a ton of variety, but you can see that some of them aren't quite as nice as others, like this scribbling whiteboard. I mean, it's not bad, but it's not as cool as some of the others. And then in their kind of series modules, their internal team creates these big series panels, and a lot of these are really cool, but they're very different. This one's really dark and yellow. This one's pink. We've got this Dr. Seuss looking one, lots of different versions of dynamic images. And so, because, cause this is very very dynamic, this little module here, this would really end up looking, actually let's break this out and detach. Let's detach this symbol. What I'm gonna do is delete all of these, should I delete that? Yeah, that's fine. Just add the same fill here on this one. So, this is basically what we're dealing with here. This is the components for the series and then each one of these is its individual little mini component. And we don't know what images are gonna be uploaded in here. We have an idea. So, I've intentionally created one, two, three, four, four different image-based layouts. It's the same layout, but it's all composed of different images, I'm using different thumbnails, cause I just want to test to see the variety of the dynamic reality of the images. And it's not always gonna work to use Unsplash photos. So, whenever you can get your hands-on actual images, that's gonna be the best to task for these scenarios. But, these scenarios are ones where the dynamic image is not gonna break the design that much, because we're just, we're very simply just giving that image a place to live. The thing where you have to be even more careful is in an area like this, where this play button here, you can see, it's almost getting lost a little bit on that background. I should probably consider doing like a golden color or possibly a different kind of background on that, maybe it's white with a black arrow, or maybe I'm using this red or the gold, something like that, that actually doesn't look that great. So, what might be better is if I subtract the shape from that, there we go. That might end up looking a little bit better, you can go 100%, 90, 80, something like that, but you'll see, like this, I've got this overlay here. So, I've got this, we looked at this in the gradient section. If you missed any of the gradient stuff go back and look at the utility gradients and things like that. I've got this overlay here, this is a utility gradient that I'm using and it's going from about 80% or so, let's see on the far end it's 80% going to 0% all the way across the image. And I very strategically put the gradient. I want all of this stuff right here below, this is all 80% black, and the gradient is really only starting right above this point. So, you can tell if I brought this in here, you can see really what's happening there, all of that stuff is 80%. And then I just want the gradient to fade into the image, like right in here. So, it's like a slightly different version of the utility gradient, the things that we covered in the gradient section, we're kinda bringing the gradient all the way down here, but if we make sure that our gradient starts here above the text, then we can guarantee that any of this stuff, even on a white background is the text is still going to be legible, and we could play around with that play icon if we want it to go darker. So even if we have no image, I think it's really important to task like a completely empty state. Now, I don't think it's necessary to design a full true empty state for this particular theme, because this is not like a form field or something that a user is going to be filling out. This is content produced by the client that they're gonna fill in here. But even if they use a bright white image, we wanna make sure that this is gonna be legible, and the gradient is doing all of the work right here. So, if we look back at these photos, you can see that this make this ring, this little guy back in, you can see that this photo, we also have to be aware of like where this photo is getting cropped. So, I've got different test images in here. So, I'm testing the way that different images would look if they were to upload this. And you can see, this is not ideal. So, I might have to put a little bit of guideline around this, maybe we write some content, some documentation for the client. It's like, Hey, don't put somebody's face, like right behind the play button because that just, you know, it looks weird would that right in place, so maybe we just set a little bitty guideline where it's like, you know, offset these a little to the right. If you want to kinda get the maximum bang for your buck with this layout, it's gonna be better to put the majority of the image on the right hand side of that area there, because you can see, even if I go this way, starts to get a little bit heavy on the left side where the text and the image, so that could be another thing that you kinda create with maybe some documentation for clients or even on, on personal projects like you wanna kinda provide the correct amount of negative space for the text, if there's someone like right in the foreground, you don't have to worry about that as much with an image like this, because it just looks really cool and it's gonna work no matter what. Well, even this one, like you still need to pay attention to the crop, you know, maybe that white board in the background is not quite as nice as the rest, so, maybe you just decide to hide it like that. But, this would be mostly for content that you have a little more control over, even though it will be dynamic. Let's look at it at another project that's pretty much like full user generated content with maybe some smart empty states here. So, this is this SmartLine app it's like a second phone number for your phone, for your business. And you can see here, this is kinda after someone's created their account, just to give you the lay of the land. This is kind of everything that has to do with someone's account. I've got their account, their business voicemail and business hours are set up. There's some of their settings and we've got like ways to look at block numbers, camera, photo library, new profile photo. So, we're gonna be selecting two images here. And first of all, I've just provided them some smart defaults, and I did use, I had to follow the the the brand guidelines that go, daddy, produce for this. So, that's where I got kind of this green image and some of these textured patterns, these were actually inside of the GoDaddy branding library. And so, I used some of the app colors in conjunction with these patterns based on their guidelines to create like a decent looking like empty state versus just having a plain background. So, it's always worth trying to figure out a pleasant empty state, and it'll take a little bit of creativity, but you can see that this is considered their CallPaper, so anytime someone calls the phone, they will get a custom wallpaper on the call, so, it ends up looking something like this. So, this would be like the preview of the background when somebody calls on the phone. So, once they wanna choose a new CallPaper, we're providing them with some of these defaults. So, these are kind of the GoDaddy branded defaults that they can choose for any of these, but they could also upload a photo or take a photo. And one of the big things that I wanted to prevent would be guaranteed someone's gonna upload one of their crappy logo for their business. And if you design this logo or know who did, I'm sorry, but it's just a very old logo. So, this is just an example of what it would look like a full white background with the logo, so wanna make sure that we're putting a big enough gradient on top of this thing. And otherwise, it's gonna look like that and that's just not gonna work when you need to overlay the number who's calling, things like that. So once this is in place, we have this gradient to kind of it's like a safeguard, all these gradients and these overlays these are safeguards against the the bright white images that are just not gonna work. And even on these actual photos, I'm showing what it would look like over here with a little bit of a gradient overlay, but when it actually comes in, I'm still using that exact same gradient on both of these art boards. And that again is just so I can use white text on that background, and I know that it's gonna work. So, this one, this is another thing that I'm doing here, where in addition to the overlay, I realized that the overlay alone was not quite enough. The overlay alone was not quite enough to have this tax be fully readable, that's just looked kind of messy to me. So, I went in and I added a background blur to this overlay that way it just creates a bit of a smoother separation from the image when that's uploaded. So, we made a new rule that there would be an overlay and a five-pixel background blur on those user-uploaded images primarily so, we could just make sure that without a doubt, even if this image right here was completely white, let's go add a white background to this, let's go right there. So, even if this comes in as a bright white image, we still have enough contrast to read that image and all of this still works, even if there's a bright white image uploaded. So, it's really, you just have kinda have to take care of the extremes. So, imagine a photograph at the very worst is gonna be a completely white photograph or a completely dark black photograph. You might need to based on your design and your layout, you might need to adjust based on those two extremes. So, use good imagery, try it out with beautiful imagery. But, then also try it out with a weird gym photo or a bad logo, and then try it out with a white background, try it out with a black background, just so you have that entire gamut covered when it comes to dynamic images, especially if it's gonna have text and icons, and even this button here, you can see I've got a button on top of that. And just to have that image bleed through, and we're kinda playing around with this 20% white on top of that, where the image go, we've got this 20% white and it just looks a little bit better if that's a little more blurry. So, kinda playing with a blur effect, so, layering the blur on the image and then really blurring the call to action on top of there, just so it's stands out a bit more and I'm using the same exact blur on top of this image that we're kinda starting with. So, we've got the smart empty default even with the icon here, you don't just want an empty circle, you wanna show that this is an avatar or some kind of icon, and we meticulously designed this little avatar icon with the full icon set with the rest of the tab bar and everything like that. So, and even for the profile, you can't assume that they're gonna have a dynamic profile image, ready to go. You're gonna have to assume that they haven't uploaded it yet. So, you wanna design a nice-looking avatar empty state, you know, think about the Twitter egg, they have multi-multicolored backgrounds with the little egg, it's kinda become like a branding thing. And, so if you have a chance to , when there are empty states like this, you have a chance to inject a little bit more branding to create a little bit more of a memorable thing. And you just have to kind of consider that when you're considering empty states for your dynamic images. Okay, so lastly we're gonna look at the contacts section of this app. So, we have a list of all of our contacts it's kind of one of the main sections in the tab bar, got a couple of different options here because they weren't sure if they were gonna go with the avatar version or the non-avatar version, and then we have some contact details and things like that. But, let me just explain the thinking that I had around these contacts because this is gonna be a secondary phone line, so, this would be kind of imported contacts. Now, you can't guarantee that you're gonna have an image for every single one of your contacts and what iOS does they bring in just a gray square and they put in the initials of who the person is gonna be. And that's definitely a good way to handle a contact without a photo, just to give you a little bit more information with their initials in it, similar to what we did here. And because GoDaddy was going through this big rebrand at the time, they have a secondary typeface that it's got a really cool look to it that didn't really fit into the utility of the app, so, we decided to bring that in as kind of a branded element, if there was no image and again, we're talking about dynamic images here. This is only going to be uploaded, by the person using the phone, or if they sync contacts with some other app, we will only get this image if they upload it. And it's not really that helpful to have a bunch of avatars like this repeated over and over and over and over inside of the contacts list, and we could have even incorporated the first name, letter, and the last name, first letter in here. But, we wanted to treat that slightly differently, because this is my profile, whereas the other one is got all the content on it and there was a distinction between the contacts that had a photo, the contacts that didn't have a photo, but then also there's people calling that you don't have their contact information. So, as a part of the GoDaddy rebrand, the GoDaddy team created a bunch of packs patterns, like hand drawn patterns and they created them where you could overlay them on colors and here's all the GoDaddy colors. So, there's kind of this fun ingredient package that you could use for a lot of different things, and all of these patterns, they're not going to really make that much sense for an actual phone app, so, there's not a lot of place for them in the actual interface, but for things like empty states, this just kind of becomes a really cool thing that you can do because if you're on your actual conversation thread, you can very quickly distinguish between the people who you've uploaded a photo for or the unknown callers that you might've had a different conversation with. You've got your contacts that are saved, but they don't actually have the image that you've uploaded, there has been no uploaded images. So, what we've done is we've randomly assigned the unknown callers and the people who we don't have their contact info, we've randomly assigned them a pattern and a color based on all of those patterns that we created from the very beginning. So, we could randomly assign each different color, one of these patterns and you could even add a little logic in the code that's like, okay, if this one was just used, don't use that for the next 20 and randomly assigned them. And as soon as you, she used them, you know, don't use these, but use these, and then once you cycle through the remaining 20, then you can start it all over. So, it's just an easy way and a fun kind of interesting branding way to create a little bit more value with the empty dynamic images, instead of just showing an empty state with nothing there or even just a flat color, it's kind of fun to look for ways like this to incorporate and kind of spice up an empty state for a dynamic image. All right, for our dynamic image homework, I'm gonna get you to design a mobile screen of a contact card for your favorite celebrity or any random celebrity that you think would be a good fit for what you would wanna design. So, you can use some of these SmartLine examples, if you want, for a bit of a reference on the information that you might want to include. But, you could really just put anything in there, you could put stats or their phone number, email, just kind of make up some information, just to fund simple little one screen profile contact card for a celebrity, use a background image if you want to use a really nice image of a headshot and really focus on using great images, really really good images that would make it seem really, really nice. And if you want, you can put some of the information on top of the image, just to kind of experiment where the dynamic quality. So, once you've got your first one done, then I want you to duplicate that, take the exact same layout, and put in like just really bad imagery, like search for whatever it calls for whatever you can find it doesn't have to be vulgar or anything. Just a bad image, just not good lighting, not good composition and put those photos in there, but don't change a thing between the two layouts and see if the design and the integrity of your design still holds up with, without the beautiful images of the celebrity. And then once you've got that, create a third version that has no images in it whatsoever and try to make it seem like a nice-looking page. Maybe there's colors, maybe there's patterns, or maybe you have a random assortment of photos that you're pulling from, you know, think about the Twitter egg-model. Think about the CallPapers that we had on the SmartLine project. But in that third one, like a nice empty state, knowing that if someone signed up for this app, they haven't given us any information yet. So, we wanna make it look nice pleasant even before those dynamic images have been uploaded. So, I can't wait to see what you come up with and best of luck.


=== FILE: 6-5 blend.txt ===
------------------------------
﻿- Blend modes are a great way to change a photograph that might not be the best photograph in the world or it might not have the best lighting. So, without having to go in and actually edit the actual image in something like Lightroom or Photoshop, there's a lot of things that you can do just with the blend modes. And the blend modes will work for any object, but I wanna talk, specifically, about photographs and images. It's gonna be pretty much the same in Sketch, Figma, Studio, Adobe XD, Framer. All of these design tools are gonna have basically the same blend modes. So, you used to not be able to use blend modes with code, but now, with the advancement of CSS and many other programming languages like Swift and things like that, you can actually affect the blend mode of a photograph with code. And so, we're not really gonna dive into the whole code thing, but I wanna point out the certain blend modes that come in handy when I'm designing with images. So, we've all seen this little layer panel, over here, and we've got all of our blend modes, here. Pass Through, Normal, Darken, Multiple, Color Burn, on and on and on and on. All these different ones. Now, you can pretty much go and figure out what each of them do just by putting an images on a background and then, just changing it and seeing if anything happens. Really, that's the easiest way to figure out what everything does. But, rather than you have to go through and do that, I've made a simple little list. So, Pass Through, this is really... It really only pertains to an actual group of things. So, right now, this is one group and each one of these images has its own layer effect applied. So, this one's Pass Through, this one's Color Burn, this one's Overlay, this one's Darken. But, look what happens if I change this entire thing to, say, Luminosity. So, all of a sudden, I've changed the entire group layer effect to Luminosity, which is the same thing as changing an individual object to Luminosity. And so, even though each one of these has different layer effects added to it, that kinda cancels it out. So, if the group is not set to Pass Through, then the individual blend modes, they won't matter. Because you're setting that at the group level. And so, that's really all Pass Through does. It just lets the individual elements pass through the group and there's no actual layer effect added. Same thing if you go to Normal. Everything's gonna be normal. So, Pass Through only applies to groups of objects with blend modes applied. It's not really that big of a deal, but it's a subtle difference if you're trying to figure this all out. All right, Normal. Not really anything to cover, here. This just images as you would expect them to appear. So, let's really dig into these four. These are the ones that I use the most, if I use them. So, Multiply. Multiply is gonna knock out all of the white, so if you have certain backgrounds and you wanna get rid of all the white, you can see that, if I bring the normal image beside it, see, this one's set to Normal, this one's set to Multiply, you can see that all of these light areas start to kinda get knocked out. And if I went even more extreme and I started adjusting the exposure and maybe added some highlights, maybe bring down the shadows, and adjust this a little bit more, so, look what happens if I make this one Normal. So now, you can get a better idea of how Multiply could work a lot more powerfully. Especially if you have pure white in your photograph. So it, basically, almost cuts it out. I haven't fully gotten rid of that full amount of white. Could probably bump up the contrast and the exposure just a little bit. And so, now we're getting a full bleed through of the background anywhere there's white. So, this can be a really cool effect. I think this photograph, in general, it looks kinda neat like that. Especially on this background. And then, with any color that you might change your background, it's gonna bleed through a little bit more. So, if I go in here and start adjusting the background color, you can see that anywhere there's white, it's gonna start bleeding through and the Multiply really starts to knock out all white. So, especially... Like I said, you can do it without adjusting any of the exposure or the saturation or anything like that, and it will still have a certain effect, but when it really shines the most, is when you have adjusted your photograph a little bit, to have this really bright white, then you can knock it out, completely. Although this is an interesting look, as well. So, let's get rid... Well, you know what? I'll just leave these here as an example. You can go through and check those out. Okay, so Screen. Screen is gonna be the exact opposite of Multiply. And the exact opposite, here, you're gonna knock out all of the black. So, anything dark, here. So, if I take this image, again, the one that we've jacked up the contrast. So, watch what happens if I go really dark, so go really dark on the shadows, let's try to bring up the contrast, maybe we go down on the exposure a little bit, so we have more black to work with. So now, if I have this one as Normal and I go Screen, you're gonna be able to see this a little bit better 'cause we have a much darker of an area. If you have a black background, like I've got here, a lot of the things that I overlay on the screen I export with a black background and I actually set it to Screen inside of Final Cut. That way, only the white letters show up. Something kinda like this. It can be handy, especially, for overlaying something with a full black background with a solid white and you just wanna knock it out really quickly. Okay, Overlay. Overlay is something that you can kind of experiment with. Like the note says, here, it's kind of a combination of Multiply and Screen and it gives, roughly, a 50% strength to the white and the black and it brings it all down together. So, it's kind of like a middle ground between Screen and Multiply. And, before I go on to Luminosity, I would say that Multiply and Screen I use quite often because sometimes you wanna knock out all the white, sometimes, you wanna knock out all the black. So, if you go in and you edit your photograph to be a lot darker, a lot more black in those areas of the shadows, or your highlights to be really white, it's an easy way to knock that out without having to go in and do a bunch of retouching in Photoshop, anything like that. So, Overlay. I don't use it quite as much, unless I'm trying to come up with some kinda cool effect, but I just don't use Overlay quite as much. Now, Luminosity. I feel that Luminosity is one of the... Beyond Multiply and Screen, Luminosity is one the one that I use quite often, if I'm trying to really create some kind of environment with the photograph and the interface, and I don't wanna have to do a lot of Photoshop or photo manipulation or adjusting white balance, or all of the things associated with editing photographs. So, Luminosity. It's going to preserve the hue and the saturation of the base layer. And it's gonna adopt the luminosity of the blend layer. So, you can see here, this one is Normal and, if I went in, here, and I actually add... Let's see if I can add an avatar to this symbol. Not sure if it'll let me. Let's create another quick circle, here. And, I'm gonna set this to Luminosity. So you can see that really any color, it's gonna start to take on that background color. It just blends it through. So, really, any color photograph, it's gonna take on that background color. So, we'll put Luminosity, there, and let's get ourself an avatar and let's get ourselves a few more avatars right in here. There we go. Run the avatar plugin again. So, all of these different images, they are start to look kind of like they're in a group, like in a family, because they're all bringing in that background color. Again, if I go and I change this background color, they're all going to change, based on that base layer. So, they all look kinda purple, they all look kinda pink, they all look kinda red, and it's a cool way to adjust all of the photographs at one time. And another thing that you can kinda start to do, you can select these, and then you can start to play around with the actual opacity, so if 0% is nothing, 100% is 100%, you can actually start to reduce the opacity a little bit and it almost softens them a little bit more. Now, I don't know if you would wanna go with a 50% photo, but it is a way to start to adjust the actual image, and this works much better if you're using a really large background image. Luminosity, overall, is probably the one that I use to edit a photograph without actually having to edit it. So, just to show a simple way to create a bunch of similarly styled avatars without actually having the means to do a proper photo shoot with the same background. So, let's just give ourselves a couple of circles, here, so we got four. Option + Shift, bring this down. We'll do it, right in there, and then we'll do... We'll just do 12. So, I'm gonna run that avatars plugin, again, on all these shapes. Let's just see, here. So these... We've got black and white photos, we've got more of a professional looking photo, and then, more of like an iPhone picture snap. So, lots of different variety for these photographs, but watch what happens if we do the same thing... And, actually, I need to put a gradient on this first. I'm gonna add a fill and put it beneath the image by dragging this down below and let's add a type of gradient from color to color. Let's hide the image really quickly. And we'll do it at an angle, just to be a little different, just to mix it up a bit. So, we're gonna go from a red to a blue. Something right in there. Maybe we'll go with a slightly pinkish color. All right, so now that I have the gradient, here, this is kind of interesting. You can put different blend modes on the actually fill. So, in order to do that, you click into this and you wanna hit this little droplet icon. That's gonna pull up the individual fill and click Luminosity and, really, that's gonna be the same thing as taking two different backgrounds and putting this on top and changing the layer to Luminosity. So, there's different ways to do it and you can see, there's kind of an interesting effect that happens when you're pulling this over and you could even do something like that. It might be easier to control. You could even create a component out of this. Call this gradient avatar. That way, you have two different things to control. So then, we could make a selection duplicate of this and let's get our 12 avatars. And now, I'm gonna go in and manually click into that first layer. Now, you can see I'm Command + Shift + clicking and I'm getting just that top layer and I'm gonna run the avatars plugin and it's gonna place all those images. And so, now, you can see I've got some celebrity photos, I've got Ryan Reynolds, here, and then, lots of other iPhone non-professional photographs, but if you look at everything, it's got a similar look and feel. So, a lot of times, magazines will do this. I know Smashing mag has this orange gradient that they put on all of their contributors' avatars 'cause they get a lot of different head shots from a lot of different people. So, it's just an easy way to make it a consistent look. And you can go in and experiment with all of these, so because they all have that same base, now, you can see the selection colors popping up and we can actually go in, here, and change the entire look of the entire avatar just by going in, here, and changing that base layer. Because this had the Luminosity, it's always gonna shine through the bottom... It's gonna shine through photograph. And we can go in, here, and Command + click and select all of this, again. Actually, we can just Command + click the master symbol or the master component and you could go in, here, and change it, if you wanted to, to Multiply, Screen. You can play with Lighten and Soft Lighten and all these others. They're not gonna do that much for you. I definitely like to do Multiply, Screen. Occasionally, you can do Overlay, but it's more for stylistic effect. Most of the time Luminosity is gonna be where it's at. And, if we wanted to, we can go in, here, and we can say... Let's go back and reset the overrides. Those images selected. And run my avatars plugin. An interesting way to make a bunch of avatars seem like they're possibly part of the same family. And then, finally, this works really well for big hero images. So imagine I've got a big desktop, MacBook Pro-sized screen, here. All right, so I'm gonna recreate this just a little bit. So, I've got this big image. Let's cut it outta here. Let's go to Normal and 100%. All right, so this image is straight out of Unsplash and say we wanna use this big hero image for our website, but we want this text and this button to be right on top of it because we need to... We gotta have some text and everything. Well, that's just not gonna work. You could try to experiment, putting this over here or maybe this is over there, but, a lot of times, if you wanna go text on images, it's just not gonna work with full-on photographs. You could do something like this, but... And you've seen what we've done with some gradient overlays and some blurs, but having this as a blend mode and pulling in some color from the background is really a great way to manipulate photos with color and that way, it allows the text to be on it. So, let's give our background of this frame, right now, it's set to white. So, let's give ourselves a nice pink color, there we go. All right, so all of a sudden, let's go here and let's change this to Luminosity. Okay, that's a little bit too intense, so what we're gonna do, we're gonna lower the opacity of our image. Okay, this is lookin' a little bit better, but still, the background color, little bit too bright. That's not gonna pass accessibility. We're definitely gonna get dinged for that. See, it's a failing score. Let's go back in here, and adjust the background. Just bring it on down, right in here. We could try a different hue. You can bring it down, bring it down. And you can play with the background color and the opacity of the image and you can adjust those two things to come up with a nice, flat, soft thing that works for the background. So, this might be a little dark. It just depends on your project, but it's gonna work. That photo is gonna start blending in with the background color. Same way that these avatars do. Really, this is the same thing that I did, here. I just have a gradient in the background. So, if you go in here, you can see that I'm using this as a mask, just to mask the image, but this, right here, is my linear gradient. So, if I went in here and change this, you can see that the image is gonna change because the image is set to Luminosity. So, Luminosity and image opacity are gonna be the two things that you can really control to make this cool background image effects. Same way we're doing... We're using the same trick for these avatars and then, the same trick for this hero image. So, those are the blend modes that I want you to become most familiar with. Multiply, Screen, and Luminosity. Those are gonna be the top three that'll give you the most bang for your buck. So, for your blend mode homework, I want you to create something similar to what we did, here, with a group a avatars. Experiment with background colors, with gradients, and bring in the avatars and try to make them feel like they're a part of a family. And then, create a big hero image with some type of background that might not typically work as your background image, but because you're gonna reduce the opacity way down to 50, 40, 30, 20% and then, you're gonna play with that background color with the image set at Luminosity, just try to create some kind of hero image like a title, body text, and the call to action, to get a feel for how you can layer these things together and get these images working for your next project. So, go ahead and get started on that homework and I can't wait to see what you come up with.


=== FILE: 6-6 manipulate.txt ===
------------------------------
﻿- Manipulating photos might not be the thing that you would say is the hallmark of a UI designer. But back when I started, we were all using Photoshop. And in fact, Photoshop was one of the very first pieces of design software I used back in the 90's and I cut my teeth on design by manipulating photos and Photoshopping things and making jokes with my friends with my Photoshop skills. So I have a lot of dormant Photoshop skills that occasionally come into play as a UI designer and someone designing interfaces and products and things like that. So I'm gonna show you one quick example of a time when I needed to use my Photoshop skills for a recent project. And then I'll show you just a few little tips and tricks in case you ever find yourself in the need for doing some photo manipulation. So, first of all, I wanna show you this quick little animation that I did for the SmartLine intro. I did this in Envision Studio and exported this video. So let's just check this out really quickly. Tap the button. Open up. You got all these things flying out. And not the smoothest animation in the world, but just kind of a... I wanted to show what could be possible with all of these different little pieces. So they're kinda floating around. I've just got some stuff kinda happening. So if I bring this down here and just kinda scrub the timeline, I'm just moving the X, Y coordinates on a lot of these different pieces. And that is not possible without each one of these being an individual asset. So I scaled everything down, hiding it on layers below that phone. And then as the as timeline goes, everything's kind of shooting out and scaling up at slightly different speeds. Second line for your phone. The idea of that one side is for personal things, one side is for work. So when we got started, there were a lot of assets already created for the GoDaddy rebrand, and this 3D model was one of those things. But I didn't have access to the 3D model and I didn't have access to the person who created it. It might've been outsourced, but either way, I had these flat images to work with and you can't really animate a flat image unless you just make it appear or you slide it in. But I wanted to do something a little bit more fun and immersive with this. So I dusted off my old Photoshop skills. And by the way, if you don't have Photoshop, it's totally fine. You may find yourself in the future needing to do some of this, or maybe you have Photoshop or you'll have it in the future and you need a few little tips and tricks to just do a few simple little things. Well, even to get started, you can download a free 30-day trial of Photoshop. So if you wanna follow along or do any of this and you don't have Photoshop, you can get it free for 30 days just to kind of spin the wheels and kick the tires, whatever you wanna do with it. So here we go. This is the image that I was provided. I had this image for the SmartLine app, and I wanted all of these little piece as individual things. So this would be quite simple inside of a 3D tool. You could just isolate each image, export it as a transparent ping, and you would have 20 different images and that would be it. But I emailed people, I emailed other designers, I emailed product managers, and no one could quite point me in the right direction. It's a big corporate organization and kind of finding that right person, It was just hard to do. And I never got connected with them. So I decided to be resourceful, take matters into my own hands and clip out all of these little pieces by hand in Photoshop. And we're gonna do that right now, and I just wanna point out here. I'm gonna hide some of these layers. This is the actual file. So I'm gonna bring in my background here. And you can see I've got, here's my phone, here's my popsicle, here's my beach ball, here's my leaf, suitcase, everything kind of on its own little layer. So in order to do that, we simply need to start off. I'm gonna put all this stuff in a group and just kinda hide it. And I don't really need that background layer. So I'm gonna duplicate this layer. Photoshop is a little odd in the fact that you have to hit Command + J to duplicate a layer. But that way we don't tamper with our original layer, we just wanna leave that there. We're gonna start with something simple here, and we're gonna grab this little ball. Well, inside of Photoshop you have a couple of selection mechanisms. You have the rectangular marquee tool, you've got your polygon lasso. And it lets you select pieces of a photo or something, and then you can pull it away and you can manipulate those little pixels. So what we're gonna do is click and hold this marquee tool, and we're gonna select Elliptical Marquee. And I'm just gonna draw a circle right over. Let me zoom in a little bit, before I do this. The thing you wanna know about clipping photos, clipping objects out of photos, you wanna get as little of the background as possible. So notice how I am... I'm not going to the very edge like this. I'm not going to the very edge and including these little teal pixels in here. We really wanna be like... Let me get my regular lasso tool. We wanna be like right in this area. Right in there without any of the outer stuff. So we're going to select this again and we're just gonna draw a simple little circle and then just kinda... I'm glancing around at all the edges, making sure that it's pretty good. So once I have that selected, I'm gonna hit Command + J again, Control + J if you're on Windows, and let's hide these layers. And the best thing to do is test it against a black background. So I'm gonna click this little icon down here and add a solid color, Change it to black. Sometimes if you test it on a white background, you might have some artifacts that you missed that didn't get clipped out well. So if you test it on a black background, you'll make sure that your clips are nice. All right, so there's our ball. We can just double click onto this and say, "All right, there's our ball, hooray." So now we're gonna draw a circle right here. Make sure we don't include the popsicle background. We just want inside. I'm gonna hold Shift to add to the selection. You can see the little plus icon popping up. I'm gonna hold Shift again, add to the selection some more. And I'm really just doing this to get those rounded corners. Hold Shift one more time to get this rounded area. And that should be pretty good. Now I'm gonna switch to the polygon lasso, which is right here, and I'm just gonna hold Shift and click and connect these selections. You only hold Shift once while you're starting this off. And I'm trying to just kind of use these flat edges here to get it selected in place. So now I've added all of that polygon stuff. We're gonna do the same basic thing here. Hold Shift, and fun fact, you can hold Option to remove part of the selection, Command + Z, and hold Shift again right here. I'm just gonna connect it to the edge of that, and right in here. We can always change this later. We can modify it later. That should be pretty good. And we wanna make sure that we're not on our ball layer, we are on our actual image layer. So I'm gonna hit Command + J again and now we have our popsicle. So let's put this up here. Might as well go ahead and group these, put this in a pieces layer or a pieces group. Then I'm gonna again test this on a black background. Okay, there's my popsicle. And you might notice that you have a little bit of a hard edge right there. Sometimes you can just kinda shave off like half a pixel, like something like this, and it'll kind of feather it out a bit. Make sure the popsicle layer is selected, delete, zoom out. See if that looks a little bit better. And that's pretty much what I did for every single little piece of the SmartLine animation. And eventually once you get done with all of the pieces, all I did was select both of these, right click and hit Quick Export as PNG. And let's just throw these onto the desktop, into our Quick Export Photoshop folder. Open and let's go to our desktop and let's check these out. So there we go. Little popsicle and ball. Now we can just, whether it's Figma or Studio, this is the thing I'm about to show you next. We can grab both of these things, just drag them in, and all of a sudden we have the ability to throw these isolated objects on top of our design. Okay, so now what if we wanted to create something a little bit more complex? Something like clipping hair out of a background and integrating it with like a design? Well, this is gonna require a little bit more of advanced photo manipulation. But it's not too difficult. Just take it step-by-step, and I'll show you how to do it. First of all, we're gonna go to Unsplash and I'm gonna search for hair. And you can see there's lots and lots of hair photos. I wanted to find one that was kind of on a solid background. And you could really use any of these. We could even try to do that one. But I downloaded this one because it was just here, It was first and I went with it. So, and there we go. Okay, so just like that other image, we're gonna make copy of it. Change that a little bit, and why don't we go ahead and make these large icons just so we can see what we're doing a little bit better. So I'm gonna duplicate this by hitting Command + J. That way we just have a copy and we're not kind of damaging the original version. So what we wanna do here, we're gonna go to Channels right here, which is usually right beside layers. You can also go to Windows, Channels, make sure that's showing. And what we're gonna do is click on this and see which one of this provides the most contrast between the hair and the background. We want it to be almost like a black on white image and blue looks like it's pretty close. So I'm going to duplicate this Channel, which is a little different than duplicating a layer. Just call it blue copy, that's fine. And I want to show only the blue copy. Now I'm gonna actually play around with the curves or the levels of the contrast on this actual Channel. So you can open Levels by doing Command + L, and you can open Curves by doing Command + M. It's really a similar way to like edit the black and white of a photo. I tend to prefer Curves, but sometimes Levels might be a little bit easier to understand. The far left is the blackness and the far right is the whiteness. So you can see our white is not white completely until we get to about right there. So we're definitely gonna want complete white. And then we're gonna bring in this black until the hair and the background has a nice contrast, like right in here. We're looking for a good contrast between the hair and the background, even in some of these areas. So I might go a little darker. You kinda have to experiment with this. Don't worry about the image. We're just kinda getting a guideline here. And then you can even pull the midpoint in different directions to make it a little bit different. Something like that. Looks pretty good. It's kind of like we've created this posterized effect. So now all we're gonna do is Command or Control click, if you're on windows, Command click this blue copy layer, and it's just gonna create a bunch of selection of all of the little details here. Once we have that selection, we can hide the blue copy. Actually just click RGB. We wanna show the RGB layer. And then we're just gonna hide that blue copy 'cause we don't really need it anymore. Now we're gonna go to layers and with this layer selected and with all this weird marquee stuff selected, before we do anything else, we want to invert the selection. Just hit Command + Shift + I, and that will just select the opposite of everything. So once you do that, we're gonna hit this mask icon right here. Boom. Okay, so now you can see that we have this transparent background and we have a lot of the hair and everything is perfectly cut out of the background. And so if we're gonna test this, we could choose this background layer, hit Solid Color here again, and then add in a really dark color. It looks kinda weird because we're not quite done yet. If we hold Option while we click the mask, it'll show us a true black and white version of that mask. Then what we can do, we're gonna hit the B key to pull up the brush tool. The brush tool has an opacity of 50% by default. Usually I like to bump that up to a hundred. And then if you right, click you can change the size of your brush tool. And so if it's right in here, and watch what happens. It's important to note I'm drawing on this mask. So I'm drawing white on this mask. See how feathery that edge is, because the hardness is set to zero. If I went up to a hundred, watch the same brush is kind of making this hard edge. So that's fine when you're dealing with all this internal stuff. What we're doing is we want... The white is gonna show everything of the image. So for example, if we made this like a red color, see how the arm is showing through. So hold Option and click that mask right there. And you can see that because it's not white, the background's showing through. So Option click that again. Now you can see the skin tone's coming back in. So this is a little bit of a process, but it's a really quick way relatively speaking. And I might adjust my hardness. I'm gonna adjust the size, and I'll just start kinda brushing this in. Just so we don't all go mad watching me brush all of this in, I will now fast-forward everything I'm doing here. So you don't have to watch me brush it. But just know that I'm brushing white over everything that we want to keep. And you can brush black over everything that you want remove. But because we've selected the blue Channel, a copy of that blue Channel, we've already gotten... Really what that does is it collects all of those little hairs on the background, separates the hair from the background. Okay, so that is pretty decent here. We're gonna hit hold Option and click this again and kinda check this out. So now let's check it again on a black background. So you can see there's still a little bit of a glow that's happening. Like it didn't get this full, full background, but that's okay. It's pretty minimal and it kinda adds a little bit of a glow to the image. I'm not too worried about that. So what I wanna do is just test it on some different backgrounds, just to make sure that it looks like the hair and all of these little pieces, like right in here, a lot of this stuff is really tricky to cut out manually. You can see even right here, I actually tried to do a brush right there, but it's probably too much. So we can go back to this mask and turn it to the black color. And let's go with like a 50% opacity. We can just kind of fade this out a little. Let's crank the hardness down. You can see that we actually have a quite a bit, I didn't realize how much of this background is still coming through. So what you can do also is Command + M and then just kinda crank down on this mask. Add a little more black to the mask and that will kinda clean it up a bit. Then we can kinda just fade this section out a little bit. Option click that again. And if that's not looking okay, you can just use your polygon tool the same way that we did on that SmartLine stuff, and then do Option + Delete. We'll fill this black. And we might just wanna soften that up a little bit just to soften the edge. The worst thing you can do is have these hard cuts in like a hair scenario. Anytime you see that it's just kind of a mark of someone who is not really doing a great job with their Photoshopping. And so even though up close, this looks a little bit choppy, but when you zoom out to 100% and you're playing around with different colors, it's a pretty decent looking Photoshop job. So now that we've done that and it looks decent on transparent background, now, what I'm gonna I do is right click this, Quick Export as PNG and we will call this hair, put it on our desktop, save it. Actually, let's call this hair-2, 'cause I've already done this one time. So we're gonna open up Figma and we're gonna grab hair-2 and we're gonna pull it in just like this. It'll take it just a second to come in. There it is. All right, so we exported this entire thing. If we wanted it to be a little bit smaller, we could move it over to like right there and then kind of go to our rectangular marquee. And then we could crop this right in there. Image, crop, and then we could do export from there. Quick Export as PNG, call it hair-2 again and replace it. Let's just delete that one. Grab hair-2 again. That way it's just like in a little bit better of a container. And now we have a lot of flexibility with what we can do with this inside of our design tool. And this is really gonna work best for marketing sites. Maybe the occasional. There's stuff you can do with it now inside of Figma. Because it is an isolation, you can actually play around with the background color inside of Figma and it's still gonna work the same way that it was working in Photoshop. So what I did to create this, you can see that it's kinda fading out here. Well, you could also fade that out in Photoshop. I actually did this inside of Figma with a utility gradient. But if you wanted to create that inside of Photoshop, so what I'm gonna do is duplicate this whole layer, just cause I wanna save what I've done. As long as this is black and white, we can go to the Gradient tool right here and the Gradient selection is right here. So we're gonna go foreground to transparent, and we're just gonna draw a gradient right in there. So if you wanted to get rid of the entire midsection, because that might not be what you wanted, you could fade it out kind of anywhere along in here and it would be a total fade out. And you could test that with a background color. So maybe you wanted something like... I'm just adding a gradient over and over and over. But sometimes you might not wanna do that because you can also just do it inside of Figma and it gives you a little bit more flexibility to work with. So let's go ahead and just kinda recreate this. So I've got a Google Font here called Playfair Display. I'm using the black italic which is kind of a nice serif font. We'll do a MacBook Pro size. We'll make this one a little smaller. Just gonna select the same color. And maybe I'll change it just a little, just so it's different. Put that in there. Just to kind of reiterate, this would be good to create some kind of like marketing collateral, or a hero image for a website, or maybe just like a big call out, something interesting for a marketing site. And you can really just do a lot more when you have this thing cut out. So what I did here, I want this to be cropped by the text, like right in there, right in there. We're gonna group this. And then we're gonna create a mask with our text by hitting Control/command + M. So now we have this mask and now let's just position this like in a interesting position, Probably we wanna see the face and a little bit more of the hair. So I'm gonna try to... We could really put this anywhere. Just kind of looking for a interesting place to put it. Maybe right in there. So what I did on the other one, I'm gonna layer some of this. I'm gonna take this photo and Option drag it out of the group. So now it's actually this one is behind everything, but it does look like it's still in the same place. But I'm also going to grab the hair text and Option drag it out, Control/Command + M to delete that mask. So now we have this white text beneath the mask, which is just kind of creating a duplication, and then we have the image. So we just have a duplicate of the image in the tags, like two of each. So this would be the hair masked, and this would be the hair unmasked. Reduce the opacity of this until we can kind of get that cool effect. And if I wanted to move these around, I would just click the hair and the hair layers and move them jointly around to see what was like an interesting combination. So maybe something like right in there. You can get the fingers in the R. But then again, the picture is just kind of ending right there and it looks a little bit odd. So what we can do is just draw a rectangle and we're gonna select this color in the background, change it to linear. It's automatically gonna give us this kinda utility gradient. So I'm gonna put the solid color down here and the transparent color up here. And then I can just play with where do I want this to fade out? Kind of at an angle, maybe it's at an angle to kind of line up the hair. And again, we could have done that in Photoshop, but actually the angle gradient is messing that up a bit. Let's go in and edit the linear gradient just to be straight up and down right in there. There we go. So you might not think that you're gonna use this technique very often, but I just wanna lastly show you a designer that I really admire. A friend of mine, Ben Johnson. You can find his Dribbble profile, bjohnson, and just look at any of his work. And he is usually playing around with some type of image isolation. Say, look how cool that looks. This guy has just kinda clipped out on top of this text, and it just creates a really, really interesting visual, like overlaying the images on the text. He may or may not be creating these ripples inside of Photoshop and bringing it over. A lot of this work might be easier to do fully in Photoshop. But you can say he's even cropping these clipped out photos in kind of interesting ways. He's using the luminosity blend mode trick that we covered in our last lesson. But lots and lots of different variety with how he plays around with his marketing images. I mean these aren't fully clipped out, but just kind of placing these images on top of text and really creating these really interesting types of layouts. Like check this out. This is just a lot of work, a lot of really cool grid work, typography, and he's cut out this flower, he's cut out these images and it really creates an awesome look. He may or may not have cut this out, he might just be only using the luminosity blend mode, but then you can see here he's done the similar thing that we just did with our hair cut out and he's cut out this leaf. So he's just doing a lot of this clipping work, but it really adds to the visuals. And it just gives it this very meticulous well-crafted look. And I think all of Ben's work is really unique in that way because he uses this technique often. So for homework, I don't think you really need to recreate everything that we did here, but I would definitely encourage you to download Photoshop 30-day free trial, or there's other programs like Affinity Photo, which I haven't used as much. But there are other Photoshop type programs that you may wanna check out. Download some images from Unsplash, and just play around with selecting things and removing it and just kind of manipulating photos. You might create more possibility than you would have imagined not doing that. So best of luck with your new found photo manipulation skills.


=== FILE: 6-7 resourceful.txt ===
------------------------------
﻿- Being resourceful and not waiting around for someone else, for certain things, is a pretty handy skill especially when it comes to gathering assets. Sometimes, you don't have the logo you need. Sometimes, you don't have the images you need. Sometimes, you wanna find out how you can get your mobile screen onto your desktop screen and take a screenshot, and just quick, just move quickly in the world of asset gathering and things like that. Now, if you have all of your stuff ready to go in a beautiful folder, then great, no problem. But, if you find yourself without the things that you need to get started, I want to show you some very handy tips that can help you keep making progress while you might be waiting on images, logos, things like that. If you were to just sit on your hands and say, "Oh, I haven't done anything because they haven't sent me that." That's just not very, that's just not a very good "can do" attitude because we wanna make progress and we wanna be efficient as designers. So, here are some skills that you can acquire to pick up those assets that you don't have. SVGs, images via the inspector, grabbing vector versions of logos, screenshotting to clipboard, mobile to desktop, and emailing people. So, first one here, I wanna show you that, say you want the Twitter icon, really quickly, but you don't know how to grab it. Well, a lot of times websites are gonna use Scalable Vector Graphics as their logos, SVG. So we can just open our inspector inside of Chrome, usually the shortcut is Command + Option + I. To use a different browser, no problem, every browser has an inspector. So what you wanna do is just click somewhere on this thing. I'm gonna click on the internal path, and then we're going to look over here, don't be scared, it's just a little bit of HTML. Inside of every SVG, is gonna be different paths or groups, that's what the G stands for. We can just click this SVG area and hit Command + C, and then, magically, into Figma, we're gonna hit Command + V. And voila. We have a nice Scalable Vector Graphic right in our design tool. Now, I will say the one place that it will not work is gonna be on a place like this. You say, "Oh, you know what? I need this Instagram logo." Well, if you look, this is an image tag, which means it's a bitmap image, it's actually a PNG, so you're not gonna be able to grab the vector version of that. You'll have to search for the download package or things like that. So, you might wanna search for Instagram press kit. A lot of times, brands have press kits that you can download. Instagram Brand Resources. This looks like it might be it. Browse guideline, submit requests, blah, blah, blah. Let's look for assets. Okay, there's the glyph icon. So, we can just click that thing. Yes, we've read the guidelines. We want online. And we're gonna download it. So there we go, we've got a zip file. Let's check it out. So we've got the EPS version of the logo, and we've got a PSD. So, the EPS is Encapsulated PostScript, it's similar to an SVG. And we should be able to drag that onto Figma and open that right up. Uh-oh, EPS not recognizable. If we open it up and preview, one thing we can do is, we can export this as a PDF, save. And at this point we would not wanna say, "Oh no, we only have the EPS version of the Instagram logo. We're not gonna be able to use it." We wanna keep pressing on and get that logo vectory and good, just like we need it. So we've exported this PDF. Now, let's see if we can bring this PDF into Figma. Still not working. "Oh no, we should just stop." No, we should not stop. We need that Instagram logo. So I'm gonna search for, we really wanted to SVG, so let's just search for Instagram logo. There's gonna be, let's, let's call it vector. There's gonna be lots of different places. Brands of the World and Seek Logo, these are pretty decent websites that you can download it from. Chances are, we can grab this one right here. Let's go ahead and download this thing. All right. So that is actually an illustrator file. Illustrator files are fine if you have Adobe Illustrator. I personally have Adobe Illustrator, but if you didn't have it, then you'd wanna find the actual SVG. So while that's opening up, I'm gonna go Instagram logo SVG. All right. Seek logo, here it is. Chances are, there's other icon sets and things like that, you could download this from, but maybe you don't wanna find a full icon set. You just want that actual SVG. So I'm gonna grab this one, download vector. You have to be careful with some of these, they're gonna be a little bit spammy. You can see we're getting popups everywhere. There it goes. Instagram logo. All right, we have our SVG. All we got to do now, is drag this thing into Figma. There we go, we have our SVG. So now, we have our Twitter that we copy and pasted. And now, we also have our Instagram. So, we're just gonna scale these together, now, we've got our SVGs. And we're not gonna wait around on somebody to get these for us. We're gonna be resourceful and we're gonna find those logos. All right, next step. I wanna show you a project that I was working on. This was a project called ZPPR, and it was kind of like a media management for video and photos and things like that. It was a startup that I designed, the initial version of their iPhone app. But, they were actually pitching this project to other brands because it was gonna be an app that brands would use to, just kind of collect all of the assets, videos, and their, their influencers could upload to this app, things like that. And one of the main clients that they were gonna pitch with this app, and one of the clients that we're trying to onboard was YETI, the cooler and kind of outdoor company. So, I knew that for their pitch decks, they wanted to have YETI content in their pitch decks. So I just use that as the story for the app. And I actually researched YETI staff members on LinkedIn. And I found people from YETI, and I grabbed their names and their avatars off of LinkedIn, and I put them in the app. And I was just being resourceful. But rather than a bunch of random avatars, and a bunch of random names, why not be resourceful and pull those images and pull those names off of LinkedIn. You're crafting the story, especially if you wanna make a good impression, and you're like, "Oh, there's Scott, he's, he's our creative director. And this is great. This is, Oh yeah, we can totally use this." But also, I wanted to have YETI images, they have really good images. I wanted to be able to use their images in our app designs. And I would never go and steal a brand's image and try to use it as my own, but in this case, I don't have any hesitation to use YETI photos in this app to show YETI the pitch deck. But how are we gonna grab all these photos? Well, I went to their Instagram page and just like before, just kind of searching through some of their really nice photos. And Instagram has this weird thing where you, you can't actually just click the image and drag it off. They're trying to protect their images. And it makes sense that you can't just download their images. But, using the inspector again, we can click this little guy right here and click this photo, and this is just a, this is an empty div, not sure what it's doing, but the one above it has a little collapsible thing, so we're gonna open that up. We're looking for this, right in here. We wanna find this source set and then the source... This is gonna actually, you can see that there's a 1080 by 720 pixel image right there. So I'm just gonna double click into that, and I'm gonna use my arrow keys here to select all of this kind of URL, and then, once I've got that selected, I'm gonna hit Command + C, come up here, Command + V, Command + Return, open in a new tab. And boom, look at that beautiful, full, big image, right from their content delivery network. Now, I'm just gonna drag this onto my desktop, drag it into Figma. And boom, we have a nice, big image directly from YETI, big as, big as we can get. This is just gonna be, this is a much better image than if we were just to take a screenshot, and haste in the screenshot. We'll have, we'll have a greater flexibility for what we can do with this. So we've basically already covered a vector version of a logo just by searching for it and downloading it. So I'm just gonna throw the Instagram over there. Although, it was technically in the SVG category, we can faithfully put this over here and say, "We know how to get some vector logos now." And so ne, next, I wanna show just to simply screenshotting to clipboard. Say there's a really cool design on Dribble and you just kind of wanna see, "Man, I wonder how big that button is. Really loved the negative space around that button." So, one thing that we can do is just, on the Mac... Sorry for the windows users, this is a little bit trickier to do on windows. But for the Mac, you can hit Command + Control + Shift + 4. And now, we're just gonna drag, click and drag. If you hold space bar, you can move, move it around. And then if you let go of space bar, you can adjust the cross hairs. But say, we started, say we accidentally started right here, and we're like, "Oh man." Well, don't, don't worry, you can just hold space bar, move it over here, and take a screenshot. Now, that Command + Control + Shift + 4, screenshots it to our clipboard. It doesn't save a file on our computer. So now, we can go back to Figma and just click the art board you want it to paste to, and hit Command + V, and all of a sudden we have a big photo here. Now, the trick here is, typically, you're gonna want to divide by two on these screenshots because they'll come in... We're, we're screenshotting these on a big retina screen if you're on MacBook, and it will bring it in as it's really large size. So a lot of times you'll have to divide that by two to get the full size. And now, we can see, okay, this is, we'll just kind of, you know, use this as reference. This might not be exactly the size we wanna go with, but, we can now start to use this as reference and say, "Okay, this is probably, you know, that's 20 points, maybe it's 16, looks like, maybe that's about what they're using." And if I wanna create a button like that, maybe I wanna practice with that color. And now I've got a big thing, and like, "Okay, that's pretty cool." That just gives me a kind of a, a really quick idea of that color. And it's just an easy way to grab a design, pop it in here, and use it as reference for sizing. A lot of times when you're designing things, you might want a reference how people are treating their buttons, and you wanna measure things. And so, it's just a quick way to screenshot, screenshot something and bring it in to, to your design tool to see what's going on with the design. Okay next, mobile to desktop. Sometimes, you're referencing something on your phone and you wanna get it on the computer. So this is a Mac specific thing, but you can just take a little screenshot. And now, I'm going to open up my finder window, gonna go to airdrop, which is right there. And now on my phone, I'm going to go to this photo, and click the share icon, and airdrop it to my MacBook Pro. So, that just tells me that it's communicating. Now, I'm gonna go to my downloads, right there. There it is. My mobile screenshot. Again, we're gonna need to divide... Actually, because I have an iPhone 10, this is gonna come in three times larger than a regular One X design. So I'm gonna divide by three with that one, and that will give me the One X design. You can see if I go to phone and I go to iPhone 11, that's gonna be the same size here. Whereas just pulling in that really big, huge version, it's gonna throw off our type sizes because this is 17 point size at One X. So divide by three, if you have your iPhone 10. And there are other models and you'll have to research how big the pixels are compared to the One X version, but for iPhone, typically, dividing by three. If you have an older iPhone, like iPhone 6, it's gonna be like dividing by two. It'll come in as like maybe 7, 750 or something like that. So that is going from mobile to desktop. And again, sometimes we just wanna see... Okay, these cells, they're putting them at like 44 pixels tall. And like, "How big are these icons?" Okay, let's see, they're doing, like roughly 29, maybe 28 by 28 size icons, maybe 29, maybe they're actually 30. So it just kind of gives us an idea of how big they're making these icons. Oh, let's see, what's they're, what's the corner radius? It looks like they're, maybe they're doing close to 6 They're 6 corner radius. Zoom out. Maybe it's a little more than that. How big, how big are their avatars? How big is Apple making their avatars? This one, 62 by 62. So it just kind of gives you a quick idea, a quick kind of gut idea for how big, these massive companies with huge design teams, that have put a ton of thought into these designs. You can just quickly get some dimensions for your UI components. And it's a great way to just get your bearings on proper sizes for things. Especially if you're designing at mobile, the, the scale between your computer screen and your actual phone can be really different, so this is a great way to get those measurements. And lastly, emailing people. Emailing people, especially if you're doing work for clients or you're new to a team. There was a time when I was working with GoDaddy team, and I didn't have the necessary credentials in my GoDaddy account set up to download all the new brand assets, so I was kind of, I was kind of sitting on my hands waiting for this material. But I did have a couple of meetings and I got to meet people, and I had discussions with other designers that were internal designers there. And there was a guy named Mike who was a designer. And I saw some of the work that he showed me, that he had done in the past. So I went to my email and I said, "Hey, Mike, thanks so much for the meeting today. Hey, by the way, do you have any assets that you could put into a zip file for me to download? I still don't have access to my account. It's gonna take me a while. If you can just put together a few things and send it to me as a zip file, that would be amazing." And designers like to help other designers, especially if you're a nice person and you should want help someone on your team. So Mike, within a few minutes, he sent me a big zip file of all these different assets. I didn't even get proper access to all those files for like another week. So, because I was able to email him and ask for those assets, get a zip file, download stuff, I could just get started, even if it's placeholder, until I got the real stuff. That was just a way that I could be resourceful in another way. So, don't let not having certain images or not having certain things stop you from doing the designs that you need to do when there are other means to obtain the resources that you need. So, best of luck on your asset collection. There's not really any homework unless you wanna practice digging into Instagram or other websites. Dig into the inspector. If you've never used the inspector, it's a great little tool to, to, to see how things are put together for SVGs and for JPEGs. So, don't forget these tips when you find yourself waiting on assets.


=== FILE: 6-8 create icons.txt ===
------------------------------
﻿- Creating icons is definitely a subset of interface design and web design in general. And there are people that considered themselves icon designers and they focus exclusively on icons. But as interface designers, as people crafting interfaces, there are plenty of times when we might need to create our own icons. And there's absolutely no reason that we shouldn't learn to do this skill, even if we're not always gonna do it, because it's actually not that difficult to understand the technical ways to create basic icons. I don't wanna diminish the skill of icon design in any way, because to create really unique and different icons, is an art form in and of itself, but there are definitely ways that we can jumpstart our own abilities to create icons directly inside of our design tool. So a while back I created this introtoicons.com course, that teaches the fundamentals of icon design in about an hour. And each one of these icons is a separate lesson. I teach how to design each one of these in Illustrator, and in Sketch. So if you wanna go really deep on these two software programs, then by all means go to this website and check it out. But for today, we're gonna look at designing these icons inside of Figma. So I've pulled all of them in here, and you can see I've got each one of these in a master symbol. So if I change any of these icons, you can see it's kinda updating. And one of the most important things to know here is that most interfaces, a 24 by 24 artboard is gonna be the best size for your icons. In the rare exception you might use a 16 by 16, and sometimes you might use a 32. But for the most part, a great, great starting point is gonna be 24 by 24. When you use these icons inside of an interface, you're gonna treat it as a block. Remember, everything is a box inside of an interface. And even letter forms have their own box. And so icons are gonna be no different. So, we wanna start with, if we're creating our own icons, and we're gonna be using shapes, lines and a little bit of the Pen Tool just but as basic as we can possibly get. So let's go ahead and just quickly create some 24 by 24 frames here, simple profile icon, we're gonna do a circle. So we're gonna do 12 by 12. And then I'm just gonna create a rectangle down here below. Let's call it 18 by eight, and now I'm going to return to get into, if I hit Return, I can access these points in here. So I'm gonna select these two points, and just shift nudge this thing up. And let's say we want to add a stroke instead of a fill. This is easy to do, we just take the fill off and add stroke, let's call it a two pixel. And sometimes if you're doing stroke icons, it can be easier to add these to the center. Because you'll get some interesting things that are happening if you add it to the inside or outside. And adding things to the center, the stroke to the center instead of the outside, will allow you to a little bit more intelligently line these up instead of overlapping them like that. If I hit Command + Y, it's gonna show me a preview like outline mode. I can toggle back and forth. So keeping these on the center if you're doing the stroked icon style is a little bit simpler. So if we wanna get rid of this bottom line here, I'm just going to click this point and hit Delete. Sometimes you wanna make a little stylistic decision and have either hard edge lines or maybe you wanna do these rounded caps. Why is that not rounding? Come on! Could it be that this is causing an issue? Yeah, sometimes the corner radius, for whatever reason, the corner radius, adding to a shape like that will cause those caps to not be quite rounded. So instead of going all the way up, I'm just wanna go in there, and you couldn't definitely cheat these in a little bit, if you're not quite getting the the radius that you want. Just wanna make sure that you keep it consistent. And if our head looks a little too big, we can hold Command and do Left + Up, Left + Up. We're gonna wanna keep these at even numbers. Because we're using a two pixel stroke, we're gonna want these to be even. But if we're using a three pixel stroke, let me just copy this down. If we're using a three pixel stroke for whatever reason. This would be, actually, that would be okay. What happens here, if you hit Control + P, you can see that you've got about a pixel and a half bleeding over from the edge. So, depending on the style, you might consider putting these on a half pixel. So this would let live on 6.5. If you wanted that hard edge to be there, this is probably getting a little bit too into the width for this particular problem. I think if you have three pixels, and as long as you're having, everything looks nice and lined up, screens are sharp enough these days to where you're not quite gonna see these pixel bleeds and it be that big of a deal. Back when there weren't as many retina screens, this was an issue, but nowadays it's not really that big of a deal. So that's our three pixel icon. What if we wanted to do like a solid shape? Most icons in iOS now are solid. So let's say we wanted to go back to a solid shape. So we take off the stroke, and we add a fill to these, while the fill is not gonna add to this path that we cut. So we're gonna select both of these points and hit Command + J which is gonna join that. So now we can, I always like to work in black and white first. So now this is gonna give us a little bit of a profile icon. When we're working with filled shapes, we wanna make sure that, the same way that we're kind of aware that our pixel lines are working really nicely together here. When we're working with solid icons, we wanna make sure that we are very aware of how much space is between the individual shapes. So right here, that's a two pixel difference. And that's a one pixel difference. And a lot of times you're gonna have to zoom out and use these in contact with your UI before you figure out what works best. But let's say we wanna keep this rounded theme going. So now we can select these individual corners, and maybe we just give it like one or two and just kinda play with it like that. You can always modify these points in and out based on what kind of style you want. So let's go in a little bit tighter with one, two over, one, two. And so that looks like a pretty decent icon. I'm gonna go ahead and delete this third one here. So we'll create like a stroke version and a filled version of each of these. All right, so I'm gonna select this. This one simple enough, we're really just gonna draw a rectangle here. And I'm gonna Command + Option + C and Command + Option + V to just paste that style. And we're gonna go with, probably like a four pixel radius there. And now I'm gonna use the Pen Tool to go there. I'll just do a small one to start with. I'm holding the Shift key, so I'm maintaining my either zero degree or 45 degree angle. And it'll let you know once you've hit that same top point there. And I do that just to make sure that I know that this is a true 90 degree angle. If I did something like this and brought it over there, it would just be a little bit messed up. So now I can put it there, Command + Option + V. And I don't want this bleeding over like that. So I'm gonna just nudge that down and over a little. And then I can just grab this, pull it to right there, and we're gonna check, we wanna make sure that our measurements on each side are equal. If I pull it over too far you can see that's a four pixel difference, and this is a five. So wanna make sure it's like right in there. And as we're designing these, we wanna make sure that we're leaving a similar amount of breathing room around the outside. And this might even be a little bit too far down, we might wanna bring that up a bit right in there. And then that means we might have to go in here and change this a little. And then if we weren't happy with the way this was rounding like that, another thing we can do is we can actually just draw kind of a similar thing that we did on this piece right here. Actually, I'll just copy this over here. And I'm gonna do a Shift + V to vertically change that. And then I'll make it a little bit larger, hold Command over this while we have the Pen Tool selected. And then that allow us to just bring out these big handlebars. These big handlebars that we can adjust the curve of that point. That way, this is more of a custom shape. And that's not going to affect the end points the way our other one was. See how this one is kind of affected by we're trying to mathematically round this. So that's just kind of a way that you can customize that edge right there. And this one, we might wanna round that a little bit. Just we're not too worried about it being everything mathematically correct, we just kinda want this nice and rounded look here. All right, so moving right along, we're gonna do this lock. So basically just gonna keep this basic outline shape, but you can tell we don't have enough room for our little lock handle. So I'm just gonna make this a little smaller, I might want to make sure this is kind of aligned here to the bottom edge. So as we're designing this, we're kinda zooming out making sure that all this kinda looks the same. So I'm gonna create a little rectangle, Command + Option + V to paste that same style. And then I want these to be fully rounded. So in order to kinda get this little squatty look, you can tell we're gonna have to make this a little bit smaller. I'm actually using a quite a bit larger of a rectangle here, but it's not a problem. Just move this down again. So, we could make this a little bit taller if we wanted to. You want it to be optically centered. It's okay, I think if this little thing is sticking above, because our optical center is gonna kind of defy some of the mathematics here. So now I'm gonna hit the L key to draw just a simple line. And then I'm gonna do Command + Option + V on that line with that right in the middle or option to check make sure we're good on each side. The lines do a little bit of a weird thing. They'll they will measure from one side, so you can see I've got six to the left here and then eight on the right, but I know that this is two pixels wide, so that's totally fine. If that was throwing you off of a bit, you could hit R key to pull up the rectangle tool and do a two pixel shape. And then just round those corners, make it dark like that. And again, I would just wanna make sure that I've got the same amount of space on each side. So you can see this one's a little different, it's a little smaller than that one. But in terms of the size, I think it works with the other one here. So we don't have to be 100% exact, I'm not gonna design this one because it's really the exact same thing that we did here. This one, all we got to do here, let's actually delete that, we'll grab our large shape here, like the frame name, paste it in, and really we've just got a line that goes across here. So I'm gonna hit the L key and draw a line right across here, Command + Option + C off of that and then Command + Option + V on to that, and we wanna make sure we're aware of the negative space in here. We don't want it to be too tight. And we don't wanna use a one pixel line in here, unless this was a very specific style, where we used a two pixel line for the outlines and then a one pixel line for the detail. But I just wanna start off really, really simple, lay these out, everything is gonna use the exact same stroke, the exact same style. So we're gonna make sure we keep this at two pixels. Let's do another L key line, Command + Option + V. And these are gonna be our little rings for the calendar. And so you can see, this is not exactly the same as that one, but I'm just trying to make it look good. And this is not necessarily looking bad. So I'm okay with that. We might wanna make these one pixel longer, so they come in and they have a little bit more depth. That looks pretty good. Let's move right along. And let's delete these out so we can create this kind of edit or post icon. So what I'm gonna do here is get into the shape, and I'm gonna put a point right there, put a point right there. And then I'm gonna select this point, and I'm actually going to delete it. So now I've got this open shape. And you can see that these are opened up a little bit more, but that's okay, we'll just create this pencil really quickly. So again, this is just a rectangle. So we'll just draw a little bit of a rectangle, it doesn't really matter what size to begin with. And we're gonna hit Command + Option + V to paste on our style. We don't want this one to be quite as rounded, so I'm gonna take that rounded radius off. So hit Return to get inside of this thing. We're gonna add a point right there. We're gonna hit the V key to get to our Selection Tool and select these two while holding Shift. And then we'll just nudge this up a few times. That's one, two, that's three, two or three, either one could work. I'll try three to start with. Now, I'm gonna select this, if I hover right near the edge, you'll get that icon changing. So this one's gonna rotate, we're gonna hold Shift to rotate it at 45 degrees. And now, I can kinda move this into place. And now, I kinda want this to be optically centered, like right in there. But you can tell it might start to feel a little bit tight. So what we can do is go back into this shape and select that point, move it over, let's say two pixels over, two pixels down, and maybe we can bring that back in a little bit. And if we want we can make this pencil a little bit longer. But if we scale it, you can see we're kinda messing up our angles right here. So we can either, a lot of times it's easier to work when it's not at an angle. So I might do this and select these points and go like, okay, two pixels taller. That will keep the bottom part intact. Or maybe we wanted to go even a little squattier with our point. Now we can go back and reverse the rotation again, pull this one out, put this one back in, maybe something like that. But maybe this feels too long. And maybe you don't wanna keep rotating it back and forth. Another thing you can do is just go into it right here, and if I go over to the left, and then down one, that'll keep the constraints in place. So I can kinda keep going Left Down, Left Down, Left down, or Up Right, Up Right, Up Right, Up Right, to change the kind of length of that without having to rotate back and forth. Same thing with editing this points. I can go up and then over and that I'll keep the same kind of variation in the perspective. So we're not kinda skewing it in a weird way, 'cause if we went up like that, obviously, that's gonna mess things up. I think this one's probably self explanatory based on the way I adjusted that one. This settings icon, this will be kind of a fun little trick here, so what we're gonna do on the settings icon, we're gonna actually grab the Star Tool. We're gonna create a star doesn't matter how big. Let's see 20 by 20. And then we gonna actually change how many points we have. So this one has one, two, three, four, five, six, seven, eight. So we'll leave this one at eight. And we can also change the angle of these points, down and up. So, we're gonna make this be like right in there for now. Or if we are gonna be kinda OCD about this. Let's go to 80% instead of 81%. And now I can just add some corner radius to this thing. But I could also play again with how deep I want this thing to look. So we could go like with a very specific knobby kind of style, or maybe it's a little bit more of a bloated icon, we can kinda play around with that, the mathematics of those curves. And so even though this is 20 by 20, we can tell it's not as big as like, even as big as 18 pixel right rectangle here. so we can actually scale this up, even if we come outside of the frame, it's okay. We just wanna make sure that we're aware of these lines in here. But we are gonna add our stroke, so let's go ahead and do that and see what things look like. All right, so now I think we can, we're safe to scale this up a bit. Scale it up to there, think that'll work. And then we'll just draw our circle in here, Command + Option + V, makes this odd odd number is not gonna quite center correctly in here. So wanna make sure we go six by six, center that. So you can tell this is a little bit different than that, but that's okay. I think we're starting to get a nice look here. Okay, last one here. I want to show this one's a little bit tricky. But that's the fun thing about designing your own icons, is you can really start to break down icons into specific shapes, like, okay, that's a rectangle that's been rotated, and a piece has been taken out, or that's a circle, and this is a conjoined circle and square, or that's a line. So this one's gonna be a fun little icon to show. So here's what we're gonna do. We're gonna draw a rectangle. And we're gonna add our style. And having this as a rounded rectangle, that's totally fine, 'cause we want that to be that way. So if we look at this, we can tell this is really a rounded rectangle with a bit of a chunk taken out, the same way that we took this chunk out. So now we can just go in here, hit Return, and let's see put a point right there, and a point right there just like we did on our other one. And we're gonna delete this. And that gives us a nice little, kind of a similar style here, but we need to make sure that this is going to be okay, let's actually pull the corner radius down. I will change all of this to three, because that's kind of affecting the way that's working. But once we do that, we can just Option drag this right over here. And now I'm gonna do Shift + H and Shift + V to rotate that. So we have something starting to look like a bit of a link, we might actually want to bring in this point, one more time and then we'll go into that and bring that point over. That'll give us a little bit more room to shift this and so we'll grab both of these and then rotate that, like that. If that's feeling a little bit large, we might wanna rotate it back, and select each of these shapes. Maybe we bring in this, just these two pixels or just these two points, bring them in one, just to kinda give it a little bit better feel. The other one looked like it could have been slightly too large. There rotate that, and this is a stylistic thing, I mean you could rotate it that way, you could leave it this way, still looks like a link, I'm kinda partial to that version as well. There's our link. And the same thing that would be like if we wanted to make any of these a filled icon for example. We just have to remove the stroke and add the fill. Again, I like to start with black. And for these, we might wanna go with white, just so we can see it. But then we can, we don't really want to have an actual shape on top of the shape. So instead having this white extra shade, what we really wanna do is select both of these, and use our little Pathfinder Tool up here. So we're gonna subtract the selection. So watch what happens when I click this, watch the layers here. Boom, it's gonna turn this into a subtracted shape here. And this will directly affect the way the SVG code is written inside of everything, see this is 24 by 24. But if we wanted to, we could grab this subtracted shape, and we could change this to 20 by 20 up here. Sometimes it can cause a little bit of pixel edge oddness, so we might wanna go six by six on that. We'd wanna make sure this is not on an odd percentage, on an odd decimal number there. If we put that right in the center, that's gonna perfectly center that right in there. So, that's a way that we can kinda create these build icons. If you wanna learn more about this a little more slowly and methodically, especially if you wanna see it in Sketch or Illustrator, check out "Intro To Icons" But this will be the first lesson on just basic, just using basic shapes to create your icons inside of these 24 by 24 containers. So for homework, I would encourage you to dig into this Figma file, and try to recreate it these icons that you see in here, you can just duplicate it into your own drafts and then just recreate those icons. And then as a bonus, try to recreate four additional icons. Something like a home icon or a list icon, or photo, video filter, just four or five more icons in the same kind of style. And maybe you modify it by like a two pixel stroke. Maybe you try to go and you create your full set of nothing but filled icons. So I'd love to see your work posted and I can't wait to see what you come up with.


=== FILE: 6-9 using icons.txt ===
------------------------------
﻿- Let's talk about using icons inside of our interfaces. So the first thing is functionality. Are the icons making a difference? Does the icon represent something well enough to where, with or without a label? And those are two different scenarios, but is the icon actually enhancing the functionality? In the example of social media links, you can put a link for Twitter, a link for Instagram, a link for Facebook, pretty much everyone knows what those are going to do if you click on them. So you don't actually need to say, Facebook, Twitter, Instagram, in addition to those icons, it's more of a ubiquitous representation. So in that case, they are very functional, and they are definitely usable. But when you're designing custom interfaces for custom projects and apps, there's a little bit more of a gray area, like does everybody know that filter should you use a funnel for filter or should you use something else? There are some gray areas. So you need to make sure that the functionality is first and foremost enhanced by using an icon. And it's not just all about aesthetics. To make really good icons, you do need to focus on aesthetics, but you just need to make sure that you're enhancing the functionality. So if you have 10 icons in a row with no label, that's not gonna be very functional because not everyone is gonna be able to guess which icon does what. I made this mistake earlier on in my career. And sometimes you just have to go through those types of lessons. Okay, so second thing I think about when I'm designing icons is the commonality of the icons. Are they similar? I don't want to use a one pixel stroke icon with a two pixel stroke icon. So if you are to go and find a professionally designed icon set, it's gonna be very common. All the negative space is gonna be really similar, all of the stroke sizes are gonna be similar, even if you're using a solid icon set, the solid fills and the negative space around the solid shapes are gonna be very, very common. There's gonna be a nice, cohesive language associated with those icon sets. Okay, and the third thing that you want to think about when you're using icons is the personality. How much personality do these icons add to this particular project? Is it kind of more of a standard, reserved, just kind of label only or is it more fun and engaging, or is it something else? And this kind of applies to the style. And so those are the three things that I really look at when I'm using icons. So enough about all of the theory. So let's just dive into some actual examples, both on some mainstream apps and projects that I've personally worked on. First of all, we're gonna look at iOS, looking at the settings screen on iOS. So we've got a bunch of icons here. And not only do we have icons, we also have a color coded background. You can kind of infer what's happening here with icons, like they're pretty standard, but they have a little bit of personality. But one of the biggest things I wanna point out here is everything is extremely consistent. There is a box around each one of these icons, a very literal box with rounded rectangles, and it's say exactly the same on exactly the same spacing, even, whoops, oh, I didn't mean to do that, a lot of the negative space around these icons, none of them are touching, none of them are touching the edge. The white piece doesn't go all the way to the edge. And you're gonna have a bit of, kind of a consistent negative space. And we're not too worried that this circle comes up a little bit closer because it's kind of balanced with the shape down below, but there's just a nice negative space inside of the container, and it's not all crammed into one little, tiny space, there's breathing room. The same way that we add breathing room to the margins and the padding of our typography, of our buttons is kind of the same thing on a little bit smaller of a scale. So we want breathing room on the outside of the icons. And if we use a container, not all the time are we gonna have containers, but if we do, we wanna make sure there's nice breathing room all the way around. And in this example, these are very, very functional; airplane, airplane mode, Wi-Fi, Bluetooth, cellular, Personal Hotspot. I think all of these are very, very common icons, maybe except for Personal Hotspot. This is maybe a new introduction, but because they are kind of linking it with cellular, with the color it makes a little bit more sense. They would probably not be able to get away with using this icon without the label but because it's very conventional with the color the stroke size of this stroke right here is the exact same size as this on the cellular. It's really similar to the one on the Bluetooth. So if any of these are using a similar stroke size, it's gonna feel pretty common. The one thing I would kind of critique here, this notifications icon, it's a really, really thin stroke. And I wonder, this one feels almost out of place compared to the strokes on the volume for sounds and the strokes here, the stroke here, if they would make this stroke size larger, I think it would fit in with his family a little bit more. So that's just a tiny little critique. But you can also see, there is a an additional stroke even though this considered a solid icon, there's a stroke inside of here, that this little detail here is similar to the detail on this. But you can tell, there's a slightly larger size on these verses those, so I honestly think that you could spend a small amount of time and get the notifications and the screen time icons, maybe a little bit closer in line with these stroked versions. So there's some very, very small little details and just in terms of how the icon is designed, but overall, I just really wanna point out that there is a container and it's treated like an object with breathing space on the inside, and then breathing room on the outside and it's treated kind of as a block. Looking over here at the Facebook example, there's a lot more of kind of an organic feel. They're not all inside of container like that. I believe that Facebook wants to feel more friendly and more personal. They don't wanna feel like corporate overlords. They wanna feel friendly, they wanna feel personal. So they're using very organic shapes with little gradients, multicolor, with gradients with drop shadows. They're trying to give this almost environment, and they're very strategically using blue and green, blue across here, they're fading these linear gradients across. So simple, simple shapes, but just adding a touch of personality with these gradients and drop shadows and just a lot more of an organic when you compare it to the Facebook icons. But if you look at the containers, I've got containers drawn here, you can see that each one of these is definitely very much inside of a container. And this one, the Facebook is using slightly larger icons at a 32 pixel container. Most of your icons inside of your interfaces, especially ones that have to do with functionality, the kind of gold standard is gonna be 24 by 24 pixels icons. That's what you're gonna have down here in the tab bar for your navigation. Sometimes you might find 25 by 25, kind of different kind of ones based on like the odd 375 pixels that go all the way across. But one pixel difference, it's not really gonna make that big of a difference. So as a general rule of thumb, 24 by 24 is kind of the gold standard. Even if you look back over here at these icons, this is a 24 by 24 bounding box. And you can tell that each one of these icons is pretty much gonna fit inside of that 24 by 24 bounding box. However, they do have the container behind them, these containers are actually at a 29 by 29, inside of each one of these little line items here. So each one of these line items has its very own specific container. And, but it's consistent and I just wanna point that out because it doesn't matter if it's 28 by 28 or 29 by 29. It might create some odd internal friction that it bothers me that it's 29 by 29, I don't really know why it's that size, why not just go 28. But that's a whole different story. But most importantly, there's a very consistent usage of the icons, and you can see that the spacing looks really nice, the line weights are very consistent, there's almost a boring quality to it. It's just very systematic, and I don't mean boring in the sense that these don't look good, but just, it's very, very calculated, very systematic, and you have to be systematic with your icons. Thinking of them as a block inside of your interface is a great start. And so same thing with here, there's a very systematic usage of size. So even the ones that are smaller, they can occupy kind of a smaller area, but ones that are a little bit larger like the friends here, it can expand out into the negative space a little bit more because it's smaller at the top. So we're kind of looking at overall weight inside of that container. And this is more for kind of designing icons. If you're just using an icon set, you're typically gonna have a very standard and consistent feel. It's also interesting to see on Facebook that for all of these main sections like friends, groups, marketplace, all of these are very colorful, and they have a lot of personality. But then on help and support, and things that are maybe a little bit more technical, they've used for grayscale. And I think this is a really smart usage of color when it comes to friends and personal and pages and dating, gaming, all of this is kind of more personal and friendly and has to do more with the social network versus the Help Center, Support, Report a Problem, Settings and Privacy, all of these are very app-specific and Facebook-specific. They don't really have a lot to do with communicating with friends. So I really like the difference between the color usage on these same kind of gradient style, but the color usage kind of helps distinguish the app settings versus the kind of social network settings. It's also important to note all of these things are more of very Facebook-specific, whereas the home, feed and videos and groups and notifications and more, these are a little bit more app-specific. And Apple has a lot of standards with their tab bar and the way that they want certain icons to be designed. So it might be actually distracting if they were to use these icons on the main newsfeed. But they can get away with it here because this is a page of content and almost like a secondary navigation of this big list. But it will be overkill to have this style of icon in the tab bar because this is more of like a system settings. This is a very, like, here are the navigation items. You don't really wanna draw a ton of attention to these icons because they are very, very utility. So you can have a little bit of personality, but you want them to be toned down because they're in a tab bar. And the same way on this Instagram page, the focus is on the content. And when you're looking at all the content, you don't want a bunch of different colorful icons kind of disrupting that flow. So that's why you'll see a lot of more kind of simple glyph-state icons inside of tab bars. And for few switching up here, it's gonna be a lot more simple, a lot more restrained, just kind of lines and shapes. You've got your back button, grid view versus what you've been tagged in versus the little more icon. But you'll notice each one of these, I've got my little red square here. These are all roughly fitting inside of a 24 by 24 container. This little video, this little kind of shows you that multiple photos are in this post, and then again, all of these tab bar components. And they're even having to combine the profile photo with the icon. So they all want this to be a pretty consistent look and feel. And it's the same thing in the Twitter app, Very consistent usage of size, and the Twitter app has pretty restrained styles for their icons, but they're all roughly 24 by 24. Even the more icon up here, they are breaking the bounds a little bit with their container, but they're doing that just so you can have access. So it looks nice and cohesive with the avatar right there. Looking more closely at these icons, they're all treated as blocks. And there's very even space between here and between here and also between each other, very, very consistent spacing, and there's also a very consistent line usage and the negative space between these lines, it has a similar effect, feel to this one here. And the bookmark is a little bit wider they wanted the bookmark to be just as wide as the lists icon, just so it has the same type of feel, and then all of these are kind of common and their personality is similar. Down here, they're using a little bit more detail but it still has that same feel. So you got these kind of double lines off of each other that gives it a little bit of a texture. And then they're using those same double lines down here and the icon for the light bulb that goes from light mode to dark mode. And all of these main icons are 24 by 24. But then you'll see right here, this is kind of the second most common size, this would be more of 16 by 16 size. So if you have a smaller subset of information, the 16 by 16 size is going to be a great secondary reference, but the style is really similar. And so they've grouped out all these 24 by 24 icons, and now they're bringing in the 16 by 16, then it's very intentional with how they're using those sizes for the main navigation. But you can imagine if they were using big 24 by 24 icons in the context of one suit, that would just feel too cluttered and crowded. So you can get away with smaller icons at 16 by 16 pixel sizes when the interface can afford those smaller little details. Alright, so let's take a quick look at a few of my projects, add a little bit more of variety to this lesson. Alright, so this is a profile page inside of an iPhone app. And for this project, I'm pretty sure I had a kind of a combination between an icon set I was using, and possibly, kind of modifying these to work, to kind of extend that set. And you can see here I've got a 24 by 24 avatar, and even though in my layers I'm not actually using a 24 by 24 bounding box, you can kind of see that all of these are pretty consistent. This was actually quite a bit older of a project. So I'm actually surprised that I'm not using at least symbols inside of here. But you can see that if I draw that 24 by 24 bounding box, that all of this kind of is gonna fit within that, all of these are gonna fit nicely within that 24 by 24 bounding box. And usually, that's the case when you're using an icon set, you wanna make sure that it has this one in particular, these are one pixel stroke icon. So you wouldn't wanna have one of these with two pixels just for the heck of it. So you can tell, this just kind of sticks out too much. It doesn't work well. You could, however, change the stroke of all of these to say 1.5 if you wanted them a little bolder, but then you can say, this one's starting to feel a little bit too heavy compared to the others. So if I'm going bolder with the lines, I might wanna take out some details. So now all of this feels a little bit more consistent. Alright, in this example, you can see that I've got quite a bit of icons here, I've got a ListView icon, a settings icon, I've got my forward and backwards icons and then I've got these little things down in here, I've got the volume icon and I've got the muted icon. And these are not quite icons, they sort of are, sort of aren't, they're more of like a one letter label, they stand for stereo or mono. And we have these little sliders, but they all kind of need to feel like they're in the same family. And so one of the things I did in this project, so I have all of these icons as symbols or these would be components inside of Figma symbols inside a sketch, but you can vary quickly and easily see that every one of these icons is on a 16 by 16 artboard. And a lot of times when you're working on your own icon set, and even if you're working with an icon set inside of a project, and it's not your own icon set, most of the time when you're working with these icons, it's gonna make the most sense to create little 16 by 16 or smaller 24 by 24 components out of them, and then use those as components versus just pasting the vector shape right in there. So it's gonna keep it a little bit more modular. You can switch out the icons a little bit more easily, and you can also make adjustments to the icons like so, if I wanted to pull these off of here, and I wanted to make some tweaks because I wanted these two to look really similar, maybe I decide, well, these have rounded, rounded corners. So I really think that these corners should be rounded as well, but how rounded do I wanna go? I might just start off with half a pixel, see how that works, maybe that's a little bit better, maybe this is slightly better than having the strikethrough. So maybe now that I can kind of view these together, I'm going to take this out and put this in. Now I'll go back to all those instances that had the mute button and have the icon. And now I can see that all of these positions have been updated. So it's a really easy way to keep the icon system kind of abstracted just one layer. That way, you can manipulate all of the icons together as a family so you can see the negative space, see all the little details, maybe you change the colors around, but then wherever you use them inside of your interface, they are a nested component or they're at the very least just one instance of that component that will just make your life a lot more easy. This is another great example of when it makes a lot of sense to keep your icons inside of components instead of just pasting them directly into your layers. You can see that inside of here I have a sidebar. So if I go into my sidebar here, you can see now I've got my sidebar icon, Sin, sidebar icon requests, sidebar icon contacts. So if I go in here even further, then I'm starting to get into those vector shapes. And I can get in here and start modifying those. But I have a version of each one, I've got the contacts and then I've got contacts active. And for each one of these sidebar items, I've got icon request, icon request active. And so I've created two versions of these, that way, anytime I put my component of my sidebar anywhere else, I can just switch out the active versus the default and it's just gonna be easy to turn it on, turn it off wherever I need that to be. And so that's just another advantage of creating these icons inside of a component early. Now, not right away, you can experiment with designing in layers and just pasting in icons and just getting an idea, but once you have a decent idea of where the icon is gonna go, you can pretty much go ahead and draw your 24 by 24 square, create a component, you can have your icons live inside of a separate little artboard where you can see how consistent they are with everything else. And when you need to update it, it just updates all of your UI a one time. Last example of a custom icon set that I created inside a framer for the SmartLine project. So look right here, I've got this artboard full of icons. It wasn't a lot of icons that we needed, but you can see that each one of these is 24 by 24. And I've got a very consistent kind of style going here, I've got rounded corners on the shapes. But then we're terminating the cap with a hard edge versus a rounded corner. And that's just more of a style preference. But all of these are very consistent line usage, and just kind of created in a way, it's easy to kind of look at everything in this context and see how it all plays together. You wanna make sure that your magnifying glass isn't too short compared to the photo upload or the back arrow or the the post icon. But once I have all of these, then I can put them into my component. And I've got, inside of my component, all of the different variations of, so we've got dark as the active, we got light as the inactive. I've got my other icon here, that's the post icon, but then everywhere on all of these different instances, I can activate the active version of that particular icon. So just a recap, make sure your icons are functional and they add function to the thing that you're designing for. You don't really wanna go too heavy on icon-only usage without labels because sometimes it's gonna be confusing. So if you have the opportunity to use an icon and a label, the majority of the time, that's gonna be better unless there's only like two or three options and it's just very, very easy to differentiate between the two like home icon, it's gonna be able to stand alone on its own. And the bells for notification, those are becoming pretty ubiquitous, and you can use a lot of those on their own. But if you start getting into sorting, filtering, and these other odd icons, even if it's a person is that friends, is that a group, is that a profile? Sometimes you have to be a little bit more explicit. So don't rely too much on icon only usage. In fact, I would be very hesitant to use more than three icon only type designs without starting to introduce some labels. So for homework for this lesson, I want you to check out the feather-icon set, whether you use the Figma plugin, like we have here, or you check out the feathericons.com, try to play around with some of those icons. Notice how they come in as 24 by 24 icons, maybe you create like a little sidebar navigation or maybe you recreate the iOS Settings app screen with those feather-icons and you put a background, just get a feel for working with a very cohesive set like that, just so you can understand what that's gonna look on a very consistent basis. And if you want to extend this even further, maybe you try to design two or three of your own icons that are similar to the feather-icon set, and you just kind of keep it consistent. Keep the line, shapes, the strokes, the end caps, the negative space around the border, try to keep all those consistent and balance that with your UI as well, make sure you're padding on top, left, right bottom all of that's the same. So dig into these feather-icons, try to see if you can use them as they are with some customization and even extend some of them for your own. So I can't wait to see what you come up with for this homework, and best of luck.


=== FILE: 7-0 elements intro.txt ===
------------------------------
﻿- Hey, welcome to the elements module. Two quick things before you dive in. Number one, this is going to be a culmination of everything that's already been covered in typography, layout, color, style, imagery, all of those things are gonna come together and set the foundation for all of these elements. So if you haven't gone through that stuff yet, you're gonna be missing out on a lot of solid content, because a lot of that stuff directly sets that foundation and tees up all that we're about to go through. Number two, it is extremely important to remember back to that UX versus UI lesson in the first module. I talk about this concept of users going from point A to point B, is that user experience spectrum, and each little blip along the path is the UI. And that's really what we're gonna be diving into here with navigation and profile pages and authentication. Those are all little blips on that user experience. So it's extremely important to keep that concept in your mind when you're designing elements like this, because a lot of those factors will dictate how you design those elements. And we're gonna go deep on the visual details of all the elements, but it's definitely gonna be through the lens of UX, and so we're gonna kinda be considering that very consciously while we design these elements. So I just wanted to put those two things out there before you dive in, just to give you a heads up. So again, welcome, and I can't wait for you to get started.


=== FILE: 7-1 navigation.txt ===
------------------------------
﻿- The primary purpose for navigation is to navigate, and I know that seems obvious, but if you really think about the word navigate, it means don't get lost and find your way around. So that's exactly what navigation is going to help the user do; it's going to help you organize information that you wanna present, and it's really critical to remember point A to point B. We're helping users navigate across that spectrum. And there can be multiple point A's, there can be multiple user scenarios coming from Twitter, coming from an email campaign, coming from a Facebook ad. There's lots of point A's, and their mindset and where they're trying to go. Sometimes you might not even need a navigation in certain scenarios. If you're signing up for something or if you're checking out, a lot of times, too many options can create barriers and can create bounce rates to increase. And so the thing that someone is actually trying to do doesn't happen because we have too many options. You've ever been to a restaurant and you've looked at a menu sometimes when there's just five entrees, makes it a lot easier to pick which one you want. But there's a sushi restaurant in my town, and if you've ever gone to it and looked at the menu, it is completely overwhelming. There's pages and pages and pages and pages of possible options and it's very overwhelming. And the same exact things happen with navigation. So a lot of times you have to keep in mind is someone exploring or is someone hunting? If I'm exploring, I wanna see all the options, I wanna see lists of things. Lots of options might not necessarily be a bad thing. Especially if you're designing a larger site. But if you're hunting, and there's a very specific task, or very specific thing that you wanna show a user, a lot of times that requires a special type of design, and it's more of a funnel and a flow, less of just kind of like an all-you-can-eat buffet of navigation. So let's take a look at a quick couple of examples here. All right, I wanna start with something simple. So iOS from the very very beginning, they have advocated for no more than five items in this bottom tab bar. It's close to your thumb, you can access it pretty easily, and it's just the right amount of options to kinda get you where you need to go. And they have also said, you know, if you have more than five items, turn this little extra guy over here into a more icon. And that's kind of exactly what Facebook has done right here. Now they have home, watch, groups, notifications, and more. And this could be different if you're looking at this at a different time. Facebook changes their design all the time. And at one point, they even had six items down here; they're always experimenting. But since the beginning, it's always been no more than five and this has lasted for the last decade. I mean, for the last, I think iPhone came out in 2007 and ever since then, this has been a standard. And it's more based on human psychology, less about design because it requires more information from our brain, it requires more work to make a decision on where we wanna go when there's a lot of information. So I think these mobile apps are the perfect example for really trying to hone in on those four to five most important pieces of information. And this is very much more of a user experience perspective type of problem. This can often be political within the organization. It can be subject to a lot of different people's opinion. This doesn't necessarily go into the visual design of an interface, and we'll get into that. But I wanna point it out because this is something that's important for it to be in the back of your mind when you're designing navigation. You know, you need to be involved in why things are here, not just what they look like. So the more deeply you can dig into the why behind the navigation, the better it's gonna turn out because getting the what right is a little bit easier once you know why things should be there in the first place. So let's keep going here. You can see they've got these four, I don't know if it's for now or just for me personally, but right now these are the four most important navigation items. They have their more icon right here which links to this page. So I've got my profile, I've got a page, couple of pages that I manage, and then all this other stuff, you scroll down. Tons and tons of navigation, but they're only showing these top four right here so you can just get to that quickly. So you can see over here with Twitter, we've got a similar kinda four tab option here. And they could've put a more tab right here, but instead they chose to put your avatar up here in the top left and then you tap this thing. And then this slides over and you get access to your profile, your list, your topics, your bookmarks, moments. Some of this stuff could arguably not be related to your profile, but they have chosen to kind of put this as content under the ownership of profile. So there's a couple of different ways to do this, but I just wanna point out certain patterns that have stood the test of time that are pretty much immutable at this point. Even with Instagram, this is kind of a rare exception where they have action item in the navigation. This is not going anywhere necessarily; this is actually taking the action to post onto your wall, to make a post. If you've ever used Instagram, you know this already, but there's the four main navigation items, and then you've got this fifth action in the middle. Sometimes it's worth considering putting an action in the tab bar, but most of the time, it can be debated as to whether or not that actually needs to be in there. Under the profile, now my profile is selected, I still have this little hamburger menu up here that gives me access to all this stuff. If you were around in 2011 or so, Facebook introduced their hamburger menu for the first time and they got away from their grid view that had been in their mobile apps for a long time. They introduced the hamburger menu and then you tap that and it slides out and you have all your options. Basically an endless junk drawer of navigation options. Every single app known to man started copying that pattern, and so that was a huge hamburger menu. You should kill the hamburger menu, maybe we shouldn't kill the hamburger menu. And so that kind of invaded the mobile space for a while, and it's still become kind of an iconic. There's not necessarily anything inherently wrong with the hamburger menu by itself, but if you use that, just those three lines only, without showing any other context, it can be a lot more difficult to find the navigation items. And there's a great study from Luke Wroblewski about navigation items being shown versus hidden, but a lot of that is very contextual to the app, but I will link you up to that study below. Okay so beyond iOS, I wanna take you to a relatively simple website that I designed. This was probably back in 2013 or so. I wanna point out kind of a simple navigation here, and then how this transitions from wide desktop down into a mobile menu. Most of all of these web-based menus, they're gonna have these different states. They're gonna have the default state and then some type of hover state. And they're gonna have an active state, which is what you're seeing right here. And then sometimes you might even have a pressed state which shows what happens after you press it. So in this particular example, this is my default, this is my hover, and this is what it looks like on an active page. And on the actual live site, you got your hand that comes up, you click this, and it's gonna eventually load into that active state. And this is a sticky navigation; you don't necessarily have to have your navigation be sticky. You can make that decision while you're developing, but it's also worth considering whether or not your navigation is sticky or not on the web. Sometimes it can be easier to actually create hover effects on the web with actual code. It'll require a little bit of CSS, but really it's this anchor tag, and then there's the hover tag, which kind of tells everything what to do. So I'll link this as well if you wanna experiment. A lot of times I don't actually design a full, complete hover state until I can get it into a prototype. Sometimes I'll just leave default, maybe inactive, but I like to save a little bit of the interactivity for the very end. That way when it comes a little bit closer time, sometimes I'm trying to work out the motion and the interactivity after I've kind of designed a lot more. I don't wanna lock myself in too quickly on interaction tidbits. A lot of that stuff for me comes later. There's nothing wrong with having an idea and testing it out while you're working on your designs. But as long as you have a default state and an active state, and they're different enough, then I think that's good enough to keep going through the rest of the project. And then sometimes figure out some of that interactive stuff later. Okay now let's take a look at this Baby cents website that I made some wire frames for. I've got the mobile view and I've got the kind of iPad view and then I've also got the large kind of desktop view. And this is one of those sites that is quite intensive in terms of sections and departments. There's a lot going on, and there's not really an easy way to just put in all the navigation. I actually flew to New York and had several two-day sessions with the client and we're white boarding and we're drawing stuff and we're chatting and we're trying to come up with every section and every topic that's gonna be inside this website. I didn't design any of these navigation items on this site until I had some type of content map and structure that I could go from. This entire categorization of all of these different things, all these static pages, all of the user data, like saved emails, all of this stuff was a result of a sit down white boarding session. And I don't wanna go too deep down the rabbit hole on this whole product side of things. But I just wanna point out that there's a lot of work that goes into deciding what the navigation is actually even going to be. So I show those other examples as some simpler concepts, whereas this one has a lot more going on. There's kind of this account related info up here. You've also got profile-related things, and then you have all these departments, you have the ability to search, and there's some websites that get more complex than this. And we're trying to head off like okay if you have a kid on this website and you've registered your kid and you wanna find stuff for that kid. What if you add more kids? Then what you even have to consider like, okay well if you only have one kid just linked to that one shop, but then if you've added more kids, then we're gonna show this little model. If you click this and then you go to individual kids shops. So lots of little tiny details that go into trying to figure out even just this navigation. And then you also need to figure out like how is this going to collapse? Well a lot of times you can imagine your big navigation here. This is all kind of profile related; this is my profile, who I'm following, my saved searches, my list, account, shop, and this is all related to me. This is stuff that I have created. Whereas all of this down here, this is everything that Baby cents is offering. And so if you break this up into two separate lists, then you end up with something like this over here, down in the very bottom. So you can see basically all of this stuff here is now in a vertical list here, and then all of this stuff is in a vertical list right here, so you can condense these horizontal things into a vertical list when you're dealing with responds of it, you just now we have these two entryways that will pop open these models. So now I've got, this is me, this is Sam as my user, and this is what happens if you tap that little profile area. I have access to all of this stuff right here. And then for menu, if I tap menu, all of those top picks, gear and travel, all of that stuff comes out. It's gonna be really difficult to design a navigation for a site like this unless you've done that hard work or someone on the team has architected the information in a way that makes sense. And you, as the designer, can say yes that makes sense, I'm gonna design for that now. So just again, be aware of what kind of goes into a big navigation like this, and if you're working with a client or your team, have those discussions about what makes sense, and get that information in place before you start trying to fiddle with colors and hit states and active states and hover states, and all of that. And there's also going to be unauthenticated navigation where there's the ability to sign up, but no one has signed up yet, so the navigation's gonna look a little bit differently, so we're asking for your email, we're telling you that you can login, we're telling you you can sign up. And you can still get to the menu there. So we're replacing the profile stuff with some of the ability to actually sign up for the website. And this is all wire frame, this is just black and white gray scale, it's a lot easier, at least from my point of view to design stuff like this in a wire frame stage. I'm still considering line height, I want my padding to be nice, I want these lines to be consistent, I'm gonna use good icons, all of that, but I'm not gonna worry about custom typography and coming out with a really cool fonts. I just wanna do the bare minimum of good design and then move into some more final designs. Once I had all that wire framed out, then I felt comfortable moving into the actual visual design. Now that I've got the wire frames, you can see that this is the smaller text and I'm using 14 point font up here for the smaller stuff, and then for the larger stuff, I'm using 16 point which is more kind of like body copy size. So basically when I'm designing this, I designed this kinda separately from everything else and then started laying out everything else. And then you can see I've got, all right, first name, got the menu, and then we've got this popping out here and so on and so forth. So I just wanna reiterate that it takes a lot of mind power to come up with what's gonna be in the navigation in the first place. I've had multiple meetings with clients to talk about just what the navigation structure is gonna be. So it really depends on the project as to whether or not you can just take five items and start designing with those. On simpler projects, that can happen. But on larger projects, if you're ever dealing with that, definitely spend a little bit of time talking to whoever's making those decisions about what needs to go in there in the first place because those questions and problems can ultimately tee you up for a better visual design to begin with. Typically I like to try to limit it to just five items, the same way that the iOS only gives you five spots for your navigation. I like to try to think of the top five things that need to go there, and if there might be eight, nine, 10, I might just stick some of those less important information into like a little more button, like more dot dot dot. So you might have about, features, pricing, whatever, more. Or maybe like resources, think of those names of categories that you could lump things into and then create a little dropdown menu out of it. 'Cause you can always make a vertical list just one row after the other for like a mobile layout, whether it's a more page on a mobile app or it's a menu, you tap the menu button and you have all of those horizontal pieces laid out for all of your designs. Another really good thing to consider is the usage of nouns versus verbs or words ending in I-N-G, or words that are plural versus singular. Think about the copy that goes into the navigation. Are you gonna say about us, contact us, our case studies, or are you gonna say about or contact or features? Think about those words and think about what that looks like visually when you're designing the navigation. That way when you get into the colors, maybe you're using gray scale, and your hover is a color and your active state is black. It's gonna look better if you have those succinct copy written words. So I would encourage don't just wait for someone to make those decisions for you. Start thinking about what looks better. Sometimes it's gonna be better to have two words. Every button, every navigation item is gonna be two words. Sometimes you're not gonna be able to make that work, and other times you might have to just settle for what somebody tells you what to do. It just depends, but I would always inquire about the usage of that language and make suggestions even if that wasn't necessarily your job to do. Okay I've got another example I wanna bring up again because this is an example of a project where we wanted to present this information really so people could pay their internet bill. They're gonna use this portal to pay their bill, possibly do some upgrades, and check the status, and that's really it. There wasn't a lot of other things that we wanted them to really be able to do other than pay, and fix payment issues. So we don't have a big navigation that people can just go all out. So we're using basically more of a flat style of listing all this content out. And we are using a variation of the hamburger menu. In a lot of cases, this is not really gonna work. This was unique because this was designed for the hunter, not necessarily the explorer. And then when you activate this little menu button, I've got the designs for that up here. We're using that same 32 point font and just trying to create like a nice consistent theme with some of those larger type sizes. So home is gonna bring you back here, services, that will take you to some of these services that you can upgrade. Billing, wifi, all of those sections are down here, and you can see that I'm kinda modifying the look and feel of that hamburger button depending on whether I'm on the home page, or the interior page. And there's no big rule that says this has to be exactly in the same spot. But looking back on this, I might should have chosen to kind of put these two side-by-side. Possibly something, like just another little study where maybe I was bringing this stuff down, bringing this navigation kind of in the same spot. I think it's, in practice, it's probably a good idea to have that hamburger menu in roughly the same spot because if someone's scrolling through the website and they're used to tapping this to open up the navigation, and then all of a sudden it's in a different spot, it's gonna be a little bit weird. So that's probably something that I could have improved on this design. But I also wanna point out that this was just kind of like a little web app, and on the larger versions, it was really just gonna be a very simple little status type page. We weren't gonna do this huge design, so I left the menu kind of the same way. Instead of listing out home, services, billing, we left that there. Some of these new screens, it is definitely in the same place. I think that mobile one was just more of an oversight on my part. And then showing what that menu is gonna look like, bringing it down here. So I'm actually bringing in the close button in the exact same position as menu. Imagine if you tap menu and the thing slides over, you're gonna wanna tap in the exact same spot to kind of just keep that interaction a little bit more consistent. So if you are gonna do a slide out menu, make it easy for someone to dismiss it by keeping the menu and the close button kind of in the same spot. So there's lots of different options for top menus, side menus, flying out menus, dropdown menus, it really just depends on the nature of your project. But I think most importantly is just to really figure out why things are there, and then to make sure all of your states are covered: your default state, your hover state, your active state. If you're gonna do a press state or not, and sometimes you might need to prototype those. And also remember with the exception of the Instagram app, the navigation is really meant for a user to go somewhere. And actions are meant for a user to do something. So in the Instagram example, that plus sign in the middle is definitely an action to post a picture. Whereas everything else is going somewhere. So just think about your navigation as this is going somewhere and all of your actions are actually doing something. So for homework I'm gonna give you three different options to choose from. You can pick one of these if you like, or you can go all out and do all three. So first of all, I want you to design a mobile app, like a shell, just like the navigation only, you don't have to do much content. I'm gonna list everything out down below so you can have that information to design with. But basically while you're designing this, just create like a shell and focus really really heavily on, are you gonna put everything in the bottom, or are you gonna have a couple of items in the top left and top right to go side to side? And if do go side to side, you also need to show how do you get back? Is it gonna slide over and have a navigation to go back? Or are you gonna have a close button 'cause it pops up? So I want you to kinda think about the interaction a little bit more, in addition to the way it looks. And as a second option, let's go with a marketing website for a software as a service company. And you'll have a fictitious name and an optional logo if you want to design that. But again, we're just gonna design the top header; navigation really, you can put content in there if you want, but I think it'd be easier to focus on just the nav and show what it looks like with those five items listed out, and where the call to action like sign up and log in maybe off to the right. But then show what that looks like on a mobile screen listed out vertically in a single row, and how are you gonna position the call to action with some of the other stuff? So think about some of that interactivity between the responsive screens. And then for the third options, this is gonna be like your mega navigation; your mega corp. Come up with a fictitious name for a big corporation. If you wanna go all out and make a fictitious logo, that would be cool too. We're gonna have a top tier nav of smaller items, and then a primary navigation of five items or so, and then a third navigation, and each one of them are kind of like a parent and sibling relationship with all of them. So I'm gonna list all of that stuff down below. Kind of have some different options for you to go through. I think it will be fantastic if you did all three, but I understand if you only go for one, no big deal. But take a look at the homework assignments below and I can't wait to see what you come up with.


=== FILE: 7-10 tables_filtered.txt ===
------------------------------
﻿- First of all, I just wanna point out that designing tables can be quite challenging. It's not always clear what a user is supposed to do with information inside of the tables in the first place and that makes designing them even more difficult. Well designed tables are going to allow a user to scan, analyze, compare, filter, sort, sometimes manipulate data, most of the time gain knowledge or insights and most importantly, act confidently. So, if you're designing a scenario that has something to do with one of those situations, then you might need some sort of table. So, before we go too complicated in table theory, let's just dive into some simple examples and get progressively more complex. Let's take a look. So, first of all, we've got Intercom's pricing page pulled up here as it looks today, at the time of this recording and this is definitely a table. I don't know if they're actually using a full proper table or not, they're not actually using table code but that doesn't really matter because you can format any type of information to be in like a table format, it doesn't necessarily have to be a table tag online, it's just a matter of displaying information in a certain way. So, right here, we have a huge headline, start, grow, accelerate, scale. They're making decisions based on the names of these packages and they're doing a really good job of showing hierarchy of okay package name, the next thing that I'm seeing and noticing on most of these is gonna be the price per month and then you can tell they're obviously trying to push this plan the most. They have extra visual contrast up here with the teal color, they've got this little chosen by 53% of businesses tag. And then also if we zoom way way out, maybe not that far, you can tell that they've made this one intentionally darker because they want that to be the focus but this is a great example of when I need to scan and analyze and gain insight and then possibly take action. So, it's like okay, how many seats? Okay, one seat. Okay, let's see, five seats, 10 seats. One thing that they could have done a little bit better is possibly line up the seats with each other. You can see all of these seats are lined up but this seat is kind of popped up here so you can't fully scan all the way across. It's still nicely laid out and it's probably not that important because this one is a little different, this one's kind of the starter plan and then this one's everything in start plus, everything in grow plus, everything in accelerate plus. You can see more. It's just a nice way to compare and analyze all this different information. Now, you could imagine if this same information was in just some boring table without much style, it's gonna lose its emphasis but the big headers and the big numbers and the calls to action really make the table come alive and give it a little bit more information that a user can use to make a decision confidently. You can see on this streamlined icons website, I created this table to show the difference between the two different packages, the essential package which has 14 categories and the ultimate package with 53 categories. So again, this might not be a true table tag that is a actual HTML table but the same principle applies nonetheless. And we strategically ordered these to be the same here and the same here, that way it was very easy to show okay, technology, business products, all of these are not included, whereas all of these are included. And if you scroll down a little bit more to see the full packages, you almost have another bit of a table. It's this is possibly borderline not quite a table but again, it kind of is. There's a headline a little bit of subtext and then these individual rows and a call to action. Same thing, headline, subtext, rows and other calls to action but it's very specific in the way that it's trying to show information. It's not just a big table full of data, just raw data, like here's everything and there's no affordances, all of the data just kind of splattered at you at once. It's carefully thought-out in terms of smallest, medium, largest and then showing how many icons you get in each package and what you can expect if you get the entire package and so on and so forth. Here's another really simple example for the flow kit pricing section where you have again a title for the table. You could almost imagine these as two columns in a table and then you've got one, two, three, four, five, six, seven, eight, nine, 10 rows of information. So, but again, we're not we don't necessarily have to have a bunch of borders and dividers, everything doesn't have to be the same size. We can really take liberty with the way that we modify the information inside of the table to make it make the most sense for the user. So, in this case, I'm downplaying the name of the package and I want to highlight the price because a lot of people are gonna be making a decision on price so I put that front and center. And then we have basically the same amount of information, full library, sketch, Figma, HD files, Figma plug-in license, one year of updates, unlimited projects and then you have your license. You can scan back and forth pretty easily. Okay, one license and five licenses and then we're also adding another link there so we can go off and see that, okay, how does the license work? We don't necessarily have to put how the license works inside of this table. We could have potentially put a small snippet about how the license works but it would have also crowded this particular table layout. And in this one, we wanna be able to scan and analyze and we can use all of our typography and layout and color and style decisions to really enhance the data inside of this table so we can have it perform and do the job that it needs to do. Okay, let's switch gears a little bit and let's look at some raw data inside of a design file and look at how we can use this information and we can style different tables based on whether or not it needs to be read only or editable or any other number of things, whatever the design challenge at hand, we can change the data and change the way it's displayed depending on the purpose for what we're trying to serve, the the action that we're trying to let someone take. So, let's just dive in. Okay, so I've got just a very very simple little table here. You'll probably recognize everything that's going on here. We've got the shift nudge course, module number, name, lesson, total time, author and then possible action. So, this might be data in a table and you can see I didn't really spend a lot of time trying to organize this very much. I just have this giant group, a few different groups within groups and then everything is there. And so, when you're laying on a table, this doesn't really matter necessarily if you have a bounding box around the table or maybe you just put all the information out and you draw lines and dividers. It just kind of depends on the way that makes the most sense for you to be able to manipulate that data. So, if we look at one version over, you can see in this version, I've started to make a little bit more decisions around styling the information. So, instead of having every single every single text field the same exact size and color, in this one everything, every cell is 152 pixels wide by 38 pixels tall. So, everything is exactly the same whether or not there's a really long word or a short number, everything is the exact same. We've now decreased the width of this smaller row because there's just a single digit number and then we've also decreased the width of these additional sections here, lesson and time and we've kind of made everything a little bit, each cell is kind of shaped a little bit differently. So, we've also added a smaller type size here so these are sixteen and these are 12 all caps, you can tell I've knocked the color back and I've also knocked these lines back a lot more so these are now three three three, instead of you know this just solid white. This is just raw information coming at us and now we're trying to make a few more decisions on how to handle and how to treat this information and the data. In this example, we are designing a nicer looking table but we're not really designing for a specific use case, we're just trying to make this one look better and I think we've done a decent job but it's not really solving a particular problem. So, let's keep looking. All right, so in this next one over here, one thing I've done here now you can see, what if every cell doesn't need a border? What if every row and column doesn't need a vertical divider? And what about some of this repeating information? Course, shift nudge, shift nudge, shift nudge. If you find yourself repeating information over and over and over, it might not need to be in the actual table itself at all. Same thing here with the author and maybe even with this edit button. So, in this example I've pulled shift nudge out of the table and I've pulled away the author that could be technically self explanatory or maybe that's somewhere else. Maybe if you're looking at this table you already know who's teaching the course. And maybe you know just maybe we don't need the ability to edit this. Maybe this is being designed for a student and not necessarily the administrator for manipulating this data in the first place. And you can also tell I've removed the number from this information and I've paired it with the actual module. So, 1-start, 2-typography and then instead of having all these vertical dividers, we can just put in some light gray dividers and give ourselves you know we're also bringing in these images now and making sure we have very consistent spacing between elements and I, lots and lots of big negative space to help this information breathe. But then if this is the route that we're going to take with this information and if we know that our use case for this particular table of information, maybe it's just for a student to access that information. So, maybe the table gets simplified even further and so we take the lesson count and the time involved in each module and then even the name of the course, maybe the name doesn't even have to be there, maybe people know where they are and we can just turn this table information into something in terms of just a simple list that is a lot more actionable. And I can actually just scan, okay, start typography layout and I've really started to bring in the more important information upfront. And some of that lesser information that's still important and maybe some people care about it but it's not as important as maybe the name of the module so we're bringing it in, 10 lessons. In this particular example, I would like to figure out a way to not say lessons every single time but I don't know if there's a way around it in this example so that is a trade-off that I would be willing to make in a layout like this versus doing a full table like that because I don't think that we really need a separate individual list like this inside of this table, if and that's a big if, if our main priority is to just get someone to click this to get into that particular module. Here's another variation where it's kind of the same thing but we've included the author name up here, the title name up here. So, we're trying to figure out eloquent ways to manipulate the content. So, this is as much of a content design exercise and even a content creation and editing exercise as much as it is a table design exercise 'cause if you just take everything at face value and someone says, hey, we need you to design something that looks good for this table and you just say, okay. And then you just go and you adjust the borders, you just the dividers, you make some nice typography decisions and you increase the padding and you make things look relatively nice, you're doing a disservice at the deeper root level in terms of okay, why should that be there? What purpose is this table serving? And you don't always get to make those decisions and you don't always get to be a part of those conversations necessarily but the more you can ask why, why should we do this, why should we do that, without being too stubborn about it, if that makes sense. I mean it really depends on the context of your project and your team. But if you have a very strong understanding of why we need a table for a certain task that we want a user to accomplish, it'll make your job a lot easier. Sometimes you might just need a table design because we might need to use tables at some point and when you wanna know how they look. That's fine too. In that case, you can just figure out some nice-looking borders, some nice-looking padding. And in that case, you might just, you might realize, hey, you know we don't need any vertical dividers, maybe we don't need that. And you're gonna be really focused on, okay, this should be left aligned. You might come in here and say, man, I wonder what this looks like if we left align all that. That could possibly work. A lot of times you're going to write aligned numbers and not left align them but then that might actually end up looking weird with the title. And the same thing here, you might want to write a line your time but that sometimes that could look weird. If you're not dealing with currency or things like that, sometimes center aligning smaller amounts of information can be a little bit more useful. And another thing that I really think is important to point out here, this particular font that I've been using for shift nudge, it has what's called tabular figures associated with the numbers. And really what that means is tabular numbers is just a mono spaced version of the numbers as opposed to the standard varying width numbers that come standard with most type sizes. So, let me just copy and paste these off to the side just so you can kind of see the difference here. So, this is tabular numbers and then this one I'm gonna go into Figma and I'm gonna scroll down here to numbers and we're just gonna do the standard style here. So, you can see, look at the difference between this 11 and the 12 and the 10. I think those are some of the most glaring areas for this particular example where the 10 and the 11 and the 12, they're just not quite that scannable. And so, when you're using these tabular numbers, notes that one got a little shifted, this is going to create basically the same size box for every single character. So, we have this is not quite exact but you can kind of see what I'm getting at here. Let me just make that one pixel smaller on each side. You can see that each one of these characters is gonna fit into this very rectangular, tabular version and using tabular numbers. And again, you'll have to find a font and make sure that that font supports tabular numbers. This font does and you can activate it in that kind of ligature panel or the whatever this is called over here, the type detail panel. You can activate that and that's gonna create much more scannable numbers. It will create a nice mono spaced version of those numbers and it works really well inside of a table. And I've done the exact same thing here with the hours and the seconds. Also this works really well if you have a countdown timer. If you want something to countdown, if you don't use tabular numbers, the width is going to change when it goes down to a one and then it goes to a five. The width will change over and over and it'll just, if something's counting down, you really don't they want the hours and the seconds and all the labels kind of jittering in and out. So, tabular numbers is gonna be the way to go for things like that. So, what if this list wasn't designed for a user to click and see more information about that module. What if it was a back-end administrative panel and I could manipulate this content. Well then, we might actually need an edit button and then we might need to start thinking about typing into an input field or and having the ability to save and cancel. So, there's different ways you could do that. Maybe each one of these is an input field, maybe this is the only thing that you can change in this particular table. So, instead of showing just read-only data by default, we just go ahead and pop an input field in there instead. And then if you were to click on an input field, maybe this is what it looks like. And so, we're just kind of editing right in context. So, we're just like okay, start, we could change that right here to maybe this is you know maybe we wanna call it begin, we hit save and then all of a sudden it, this little pop-out goes away and then that's in place. And then if that's the case, we might not need this edit button over here. But there's different, you might have data in your table that might not need the individual editing abilities. You might need to edit the entire thing at once. And if that's the case you might have something that looks more like this. Maybe this is your field and you click edit on one of these and then the entire thing changes. And so, now I have maybe a drop-down of multiple course names that I've created somewhere else, maybe I can change this. I can change the amount of lessons that are in here, I can change the author, maybe the time is based on the number of lessons that you reconfigure. There are definitely some UX considerations that are not thought of in this particular example but I just wanna show the diversity and the range of possibilities that you can put into a table that might have edit capabilities versus read-only capabilities and maybe this is our little cancel button to make all of this go away without saving anything. Typically, if you ever want someone to enter into edit mode, you wanna also provide a way out that would allow them to cancel everything and don't save any of the changes. A lot of times that can be a cancel button, a lot of times that can be an X icon, it just kind of depends on the style and the way that your project is leaning. All right, so maybe we have another example where we don't have single line editing capabilities the way that we had up here. Maybe we wanna edit everything at once and save everything at once versus editing saving editing saving editing saving over and over. So, in this example, maybe we just edit the top layer, shift nudge, actually that should probably be aligned to the baseline, would probably look the best there and maybe this aligned a little bit with that content might look a little bit better, maybe something like right in there. You could also center align that possibly. But you also have to remember that, we're gonna have this would be more of a table heading and we wouldn't always be able to decide exactly what goes here and exactly what goes down there. So, a lot of times, it's best to design something like this, a heading, kind of like on its own. And so, maybe it does look better if this was like all the way over there or slightly indented, regardless of the information below it because you won't always be able to control the amount of information that is gonna be showing in here if you're kind of designing for a system type approach. So, let's say we're editing everything all at once and we're not gonna edit things one single line item at a time. So, maybe we hit the edit button here and then all of a sudden we're in full edit mode and we can either cancel to go right back to where we started or we could get in here and start manipulating the information. Maybe when you hover each individual row, maybe we get this background with a little handle bar here that we could actually grab and rearrange. So, maybe we don't actually change these numbers at all but rather as we rearrange this, the numbers update automatically and we can also change the name of the module, we can change the drop-down of how many lessons and then we could change the author so on and so forth. So, this is another example of how the same exact information could be displayed depending on the use case. So, we have all these different versions that serve different purposes, same information but it's all serving a different purpose depending on what you need to do with that data. And then I also wanna point out that typically, most always you're gonna need to end up figuring out how to display table information on a mobile display. So, right here, this would be an example of trying to really fine-tune that information and get it spaced in a way that this is maybe information that's not gonna change much in terms of like extra rows, extra columns et cetera and is all gonna fit perfectly on this fixed width layout and this is exactly how it needs to be and nothing really needs to change. But a lot of times you might have this flexible, growing amount of information, especially in terms of columns. Lists and vertical height, growing in vertical height is usually always a lot easier to deal with 'cause you can just scroll and scroll and scroll. If something's expanding on the horizontal axis, it can be a little bit trickier to handle. So, in that case a lot of times you can just put the same exact form, you know even if you're grabbing one of these and sticking it on that mobile screen, if you do that, you can add this little small shadow and a lot of times a small shadow like this, a little utility gradient is gonna be enough to indicate that you can kind of swipe left and right on that information. And it doesn't have to be a huge big shadow, you can just you do a small little shadow that kind of indicates that there is more there and then if someone starts swiping this to left or right, then I have another version that has that same utility gradient on the left. So, this one has the left side and the right side and you could imagine kind of what that would look like if you were swiping it left or right. And actually this entire thing would probably be going so it's not quite as accurate but get the idea. So now, we have this kind of swiping back and forth but these are all going to be conversations that you need to have with the people on your team, you need to have these conversations with your developer, whoever's in charge of making the decisions. You know what is the purpose of the table display data that we're doing? Is it you know, doesn't need to be manipulated by everyone? And if so, by who? And just asking lots of questions. The the best way to design for a table and the information inside of a table is to really know what it's going to be used for. And sometimes not always, it can be a little easier to actually design a table with code. So, if you look at this example, I've got a lot of table HTML here, we've got headings and our rows and all of our cells. I don't wanna spend a lot of time trying to cover the ins and outs of this because I feel like you can get in here and you could even start editing this and changing it, just playing around with your own and figure out a lot of this if you've never touched HTML and CSS before. So, if we wanted for example to make shift nudge and elements, if we wanted to change every single one of these at once, I could just go in here and say okay, instead of hot pink, I want my current this is the class name that I gave to that particular row. So, I want my current color to be white instead of hot pink and now you can see that the entire all of this tags has now changed. And it didn't take me, I didn't have to go and click every single individual element inside of Figma or Sketch or XD or anything else, it was just one line of code that applies to that entire section. And so, sometimes it can be worth fiddling with the CSS because you can manipulate this stuff a lot faster. It can kind of hinder your creativity and it can go, it can be a little bit slower but if you get it to a certain point, sometimes if you get it to close to being designed, putting it in code and saying, okay, let's look at these background hover effects. Do we wanna go with this like dark gray? And instead of having the entire row, maybe we just do an individual cell being hovered. So, now we're showing like what each one of these cells hovered looks like and maybe that's not what we want so we change it back. You could even change the color of this to go you know black instead of gray. So, there's lots of different ways that you can play around with these tables and experiment with hover effects. And you know I think it's most important to remember that you're not actually making a final table, you're designing a picture of what the table might look like. So, if you can get it into code or you can get with the developer to put it in code and maybe you can sit sit beside each other or have a chat about you know interaction patterns or even creating a prototype inside of Figma or XD or anything that supports those animated states, a lot of times that will give you a little bit more information in terms of making decisions for how that living breathing final table might kind of come to fruition and then you'll get a better idea of everything. Oh, I didn't think about the hover styles. Or oh, maybe we should remove the borders on the top and the bottom when it's being hovered. And you that might just be a couple lines of code that you need to go in and change but a lot of times you might not think of that information or think of those little interaction patterns unless you have it inside of a prototype like this. I wanna finish on a really practical example from Steve Schoger who created the refactoring UI book. In this example, you can see we have kind of a nicely designed card with a house and a label, you know lots of labeled information. And if you were to show me this and you would say, hey, what you know what do you think about this? Does the type of look good? The space look good? Everything actually looks pretty good you know. This has a nice feel to it, nice spacing, nice use of typography but what are we trying to really put forward with this information? If someone's actually trying to buy a house, most of the time they're primarily gonna be concerned with price so if you look at the one on the right, it's nice because now I don't have to guess, just hits me in the face, $750,000, here's the address. Maybe you go five years old or maybe you keep it 2012, that's kind of debatable in terms of what you would wanna do but showing three bedrooms, two bathrooms, you could do without the icons or you could leave them in. And then you have you know an image of the real-estate agent and this just seems like a nicer way to show that prominent information. So, someone might ask you, hey, can you design our tables? And it might actually not be a table that you need at all, you might need an actual card design that shows us in a more intuitive way. Okay, for table homework, I want you to look back at some of those pricing examples that I showed in the first part of the video and come up with a three-tiered approach to the pricing for the fictitious app that you've been working on for some of the previous lessons and show the three tiers with progressively more features for each plan and call out the major differences, larger or smaller type, maybe the the call to action is slightly different but you decide how you can kind of take liberty with certain information inside of a table to accentuate, maybe it's the middle one you wanna call out or maybe the other one. And so, play around with accentuating different parts of those pricing plans. You can name them, you can add illustrations if you want to or you can keep it simple with just text only. And then once you have that, another exercise will be design a table that's somehow related to the internal workings of your app, whether it is a back-end dashboard that needs editing or it might be a list of things that is for a user to kind of click through and you can use that Figma file that I walked through as some examples for editing one thing at a time or editing multiple things at a time and saving it all. So, you decide what needs to go in there but ranging from simple to complex, create a few different tables and see what you can come up with. So, best of luck on your table homework.


=== FILE: 7-11 systems_filtered.txt ===
------------------------------
﻿- I hate to start the video off with a disclaimer, but I gotta do it. Design systems is a gigantic topic and there are entire courses dedicated to teaching design systems from the code point of view, to naming conventions, to design files. So I'm gonna do my best to cover the most foundational aspects of the design system and how we can apply that to our designs practically and our design tool, but just know that there is a world of information and an entire rabbit hole times, infinity that you can dive into when it comes to design systems. So with that out of the way, I wanna first start off by saying a design system only works if everyone agrees to use it, sometimes you'll have a company that has a design system, but then you have others on the developer team that might build a part of the app not using the system. So maybe that's like halfway implemented and that's not gonna work very well. And people are only going to want to use the system if it allows for confident decision making, if it makes sense for everyone to use, and it provides lots of options and maybe most importantly it's scalable. So a design system doesn't have to be everything under the sun and you don't use anything else. And this is all you have just only use these blocks. The design system should be scalable to where you could introduce new components as needed. And someone has to be in charge of shepherding and evangelizing that design system within the organization. And this is more on a really large scale, but you can imagine that all of these different people involved makes it quite challenging to just create a design system. So one of the main things that goes into a design system are the use cases for the system and also naming convention. These are two of the perhaps biggest factors that go into even creating the system in the first place. Naming and categorizing things often one of the most challenging aspects of the design system in and of itself. Naming conventions should typically follow the hierarchy of information, but what if there is not any hierarchy in your project? What if no one has decided whether something should be sorted by color or size first, this is what can make it more difficult because in some organizations, color might be a top level category, and so all of the yellow things need to go under this category and other organizations that it might be size. All of the large components go here and maybe there are color variations underneath it. So it just depends on like, what is the more important hierarchy? So kinda determining categorization and determining naming structures that is going to play a big role in how you name your components. There also might be stakeholder and developer opinions about how things should be named as well. So this is all kinda comes crashing together in this big, messy sequence of events between designing things, putting in the code and making it available for everyone to use both designers and developers. So it can be quite challenging, not everything that you work on needs to have this huge, scalable dynamic design system that covers every single possible use case and every single thing known to man, what would go into it and what we would use it for. Sometimes you don't need that at all. So imagine you are working in a small office with three people and you put a label on a box and it included various small office supplies. In the box you were gonna play staples, paperclips, sticky notes and scissors, just a handful of items. So what would be the best label to put on the box? Assuming that the box was on a shelf and you couldn't see the contents inside the box, you might consider the name, small office supplies, but is your coworker going to confidently pull the small office supplies box off of the shelf when they're just looking for sticky notes or what if they're looking for scissors? Now, if you've previously had a conversation with that coworker about where the sticky notes and the scissors are, or if you only have a small amount of office supplies and you tell everyone, "Hey, if you need any office supplies, they're in that little box over there." Then that box of small office supplies makes perfect sense because that's where everything is just kinda all thrown in there. It's a simple system, a simple little box everything's thrown in, and it doesn't need anything else because everyone who is an employee there knows exactly where to get it. And it's a simple messy system, but it is a system and it works. And sometimes your designs can be the same exact way as that small office supply box. You don't have to create this incredibly large dynamically, scalable, huge, huge, huge design system. Let's say a new employee comes, the company grows a little bit and they are trying to figure out how to get the scissors. Where do I find the scissors? And they haven't talked to anyone. They don't know where that small office supply box is. So that's where documentation comes in handy. That's why you see these big website with lots of documentation. Here's how you implement it. Here's the name of everything. But then again, do you want your new employee to consult documentation every single time they're looking for scissors or sticky notes? Most of the time when you're just getting started with a new project, you don't need a huge, huge, robust system. You just need to get organized enough to where it can make sense to scale it gradually beyond there. And then when you run into a challenge, like someone not being able to find the scissors, then maybe you need to consider dividing that one big box into separate boxes. And then that allows you to build on more diverse groupings of information. And then it becomes a little bit more scalable as you add in more people. So that's my big spiel about the theory of design systems. Let's actually dive into a couple of different examples, ranging from very simple to a lot more complex. So let's take a look. All right, so I've got here a pretty iconic design system, the mighty Lego brick, and you can see, I've got this guy right here, master, brick, single. All right, so I'm going to actually make a copy of this just so we can kinda dissect what's going on here. So I've got a background here with a green color and I put the highlight in the shadow on this existing color. So it would have the exact same color inside. And the reason I put the highlight and shadow on a separate layer is because if you try to put that on an opacity object like this, you can see how the drop shadow actually changes the color of the background because it's actually, the opacity is letting the shadow bleed through. And so if I make this shadow really dark, the opacity ends up bleeding that bleed through. That's not really what we wanna go with. So I wanted a way that would allow me to make one change to the color of this brick and it would apply to the entire thing. So that's why I have, this is a fully solid color. And then I've got the highlight just as an extra little fill. I could even call this highlights fill, and this is my highlight and shadow. I could even just call these effects or even shorter effects. So I'll put that back on there. And all of a sudden I have a pretty nice looking little Lego block. From here, now that I've got my single brick, now I can make a copy of this. And then I can just like I have in this above example, I can butt these right against each other. And I'm gonna have the exact same distance between these two objects as I would, if I were to put them on top and bottom. So you can see if I draw a little rectangle measuring tool here got 20 pixels of space between this middle object and that middle object, and then exactly the same amount of space in here. So that's one of the things that you want to consider when you're working on your design system components, think about the component background, expanding completely to the screen's edge, or at least think of your components as a fully flexible 100% width item, and then build that padding into it, whether it is 24 pixels or 16 pixels or 18 pixels. And then also make sure you consider how that affects everything when it stack on top of each other, whether it's a list or a profile, photo and name, and then there's padding, that's why in some of those layout modules, I was stressing over and over about, make sure you use that implicit grid and you're focused and pay lots of attention to detail on every little tiny aspect of that entire component. And the reason for that is when you go to actually build these components with code, you will be able to effectively put these in as individual components and just kind of snap them all together, and it should work nice and easy together. And then I can create an additional component called Master/Brick/Double with basically two of these interior master brick, single. So really every one of these, even though this is a master component, it's really just a bunch of these put together. I could technically even create a brick of four out of these two instead of having four individuals. I think in this one, I have individuals as well, but you could technically create you this other one with, kind of this nesting situation. But this is where the naming conventions get tricky, because do you want to start incorporating colors into the naming convention of your system? Or would you rather have a variation of this one master brick single. We could technically say, I haven't really named these anything yet. I haven't created individual components for these. These are just modified versions that I haven't actually saved as additional components. All I've done is I've gone in here and I've created a version, I've created some selection colors here, green, blue, red, brown, yellow, light gray, et cetera. So maybe in this example, I might wanna say, "Okay, you know what? This one should be. It's a single brick. So should I call this single brick? It's not a master components because this one's the master component. So maybe this one is just brick single, and then this one is green. And so if I use that name convention like this, and then I convert it to a master component, and then I do the same thing with this one, brick single blue. And then I convert that one to a master component. Now, when I get ready to, if I have a copy of this, now I have green and blue because they're related. The reason they're related now is because of the way that I've named these. I've got brick single green, and I've got brick single blue. And so now when I get ready to use an override, whatever is on the last half of that slash right there is going to be inside there. So you can see, if I changed the name of this blue and I've removed the category, marker, and I changed it like that. Now, when I look in here, you can see that brick single, like green and blue are not related because I haven't named it the proper convention. So if I just get in here and I'm really thoughtful about naming this, break single green, brick single blue, and now I can go brick single red, convert that to a component. And I'm intentionally creating a component within a component that way if I ever wanted to get in here and modify this master and say, for some reason, I wanted it to look like that. All of a sudden everything is still intact and I've got multiple layers of abstraction to really be able to control certain parts and certain elements of that. So I'll get back in here and change this again. So we've got break single. Sometimes I'll just copy and paste part of that away. It's quicker to rename. So now I'll go for a single red yellow, or brick single yellow, brick single Brown and bricks single just call that light. And then I'm gonna to go ahead and convert these to master components by hand command option K. Here we go. And now I'll bring my other versions down here. So now if I wanted to recreate these. Now originally what I did was I went in here and I just made a copy of master break single. And then I changed the color to blue like that. And because I'm not changing this transparent color, I still have this version on top. So it stays intact. But now that I've created individual nested components, now I can go up here and now they're all named the exact same way. All of these right here are named the exact same way. Would that named convention? And that last identifier on the last half of that slash Mark is going to allow me to have these instances all related. So now I can say, okay, actually I want the blue one here and now I want the red one, now we want yellow, now we want brown and now we also want the light. So we can recreate those exact same version that we did here. Now we have that option. You could technically make a case for maybe all of the blue blocks could be in the same thing. If you decided as an organization, we want to organize things by color, you might change the entire naming structure. You might say, this is brick blue single, and this is brick blue eight. Maybe you say, brick blue one, brick blue two, brick blue three, and so on and so forth. So now that I've got brick blue single and brick blue eight, if I have an instance of that, let's just say this is an icon on the tail end of some other type of frame components, whatever you want to call it, I've got a line item and an icon here. Well, if this is not the same size as some of the related objects, and I go to change it, it's still gonna be a related component because of the name, because I have brick blue single and brick blue eight, that's gonna make and force the categorization to exist. And now when I go to change it, it's gonna do that. And that's not really gonna work for a lot of the scalable components, unless you have the ability for this entire component to grow. But most of the time you're gonna be switching out components on the smaller scale, you'll be switching out smaller elements of the same size. So I personally liked the idea of naming things in this convention, where the size is actually taking precedent over the variation of color. There's different ways you can do this. There's not necessarily gonna be a 100% right or wrong way. And a lot of the times you might not even need to do this when you're first getting started. It's important to know that you're gonna need to be able to design a bunch of different iterations before you get worried about making things components. Before you get worried about creating a design system, you're gonna need to know what you're designing first. And a lot of times that means getting really messy and exploring because if you start creating components too quickly, you're going to heavily restrict your ability to make changes on the fly. Even use an auto layout sometimes inside of Figma or Sketch and making those dynamic buttons and trying to get really smartly organized with every little thing that can actually hinder your creativity. So just be really careful that you are without a doubt at the point where you're ready to start creating systematic components. And it doesn't have to be, you spend three weeks designing and then you start creating component. It can be this constant loop around, okay, I've designed six different pages here. This stuff could probably be components. So I'm gonna go back and I'm gonna create components out of all of that. That way it can be a little bit more dynamic, and then you might go for a long time without creating any other components. And then you just kind of go back and forth, back and forth, cleaning, renaming, recategorizing and just so on and so forth. But the nice thing about these little blocks and built-in padding around every single version and variation, whether it is the two, the four or the eight, every single little piece in here has its own little container. All the padding margins is all built in. And because of that, you could confidently stack them all together. And I've created a little mosaic over here of our old power, Mario, using all of those same exact blocks. So I'm using all the same colors, same size and everything. You are limited to what you can do. You also have a lot of room for creativity to use these blocks in a variety of ways. If you every played with Legos, you know that they've just added more and more and more. They have plenty of little one off components that are based on some new character, but there's always at that base foundation. There's always the Lego brick, the inner snaps with everything else. Now we're gonna dive into this actual flow kit file. And I wanna show you how I set up this entire system, because this in and of itself is also a design system. And I wanna show this particular system just because I feel like it's a simple example for how simple you can get, but then how many variations and how robust you can actually make a simple little system. So everything in this particular system is built with these master symbols here. So I've got, and I made the decision, look at the names of everything. These are cap solid, cap stroke, cap arrow, stroke, cap decision, all of these different caps, but look inside of this actual flow component, you can see that I've got these labeled point A and point B. So I've got, but this is the arrow master. And then this is the dot master. So I made one layer of abstraction. So I have my dot master and I'm using this stroke dot as default. So the reason I did that was because I wanted the ability to change the default really easily. So if I went in here and I changed the default to dot solid, then it would change every single item in the entire flowkit document, because every one of these variations they're built using these main flows right here. And that way if I would ever changed my mind about what I wanted, as the default, I could just change this one here and say, okay, actually I want them to be dot stroke. And so I have all of the actual items here. It's kind of like saying, okay, this button is blue and it's the primary button. So instead of saying button blue, button blue, button blue, all inside the code, you say button primary. And that way, if you ever rebrand or change your mind down the road, that one color needs to be slightly different. You can go back to where primary is defined in the code, and you can change it from blue to red. And then over here, you can define what was blue actually even mean is blue this color, or is red that color. So there's this layer of abstraction that you use to kind of help you maintain the system, but also give you the ability to go in and change the system. Even the straight line and the curves are individual components. And look at this, they're all the same size. So it makes it a lot more modular, just like those Lego bricks. I'm very focused on making these all the same size and they're going to make up part of those inner pieces. That way on some of the versions like this enables the ability to get some of those pieces to stay, and some of those pieces to change around. I'm getting in here and I'm saying, okay, this, I want to stay on the top left, this one, I want to stay on the bottom right, this curve should attach itself to the bottom and the right. And then this curve should stay on the left, right and the bottom, whereas this curve, now I want it to say left, top, right and bottom. So each one of these has different rules associated with it, but it's all based off of this one curve. So if I actually changed my mind and I thought, you know what? I want all of this. I want every curve to be purple. I could change this one master curve because it has been abstracted out of its original form. I can change it now, here and now every single curve that's used in the entire flowkit library is now purple. This makes it really easy for me to update. And it also makes it very streamlined to produce these additional right left and all these directions because I can manipulate it and then put it inside of another symbol. And so now I've got all of these flows are built off of these main pieces, but then now I've got my master curve default is actually embedded down into my flow, right curve down default. So you can see MasterCard default is actually a child symbol or component inside of that. And then even in this one, I've got the exact same symbol just rotated with slightly different rules to make it work for that particular version. So there's this concept of abstracting things. One layer, two layers, sometimes even three layers so that you have very granular control over that system. And it definitely can be a tricky concept to get at first, but you could even just start with one layer of abstraction, instead of saying button blue, you can say button primary button secondary. And then you define those primary and secondary styles on another section. And you can easily change that and it updates everywhere else, but then you can take it even further with icons and embedded symbols and instances that can give you even more variety and even more options to use while you're implementing these. So now I wanna take a look at something that's a little bit more tangible, a little bit more real world use case. Now to set some context for this design. Again, this was me and my friend, Sam, who built this little application and I didn't need a huge design system to spread across an organization. It was really just for me and for Sam to use for him to develop with and me to design with, but I did need to test a bunch of designs. I had this little fly out here, so I've got, let me just go to my symbols panel to kinda show how everything got built. Now, everything didn't start this way. I didn't organize everything and start designing everything out of organization. You see, this is my fourth version on Trust UI version zero.one. Let's pull this up and take a look at it. You can see look at these really bad designs. I was really focused on the icon trying to figure out if I wanted to use something like this. And these were just kinda like quick little placeholders. And then slowly I evolved these things into, okay, maybe I wanna slightly around the icon, the input fields. Maybe I wanna slightly round these buttons, playing around with special little icons and slowly but surely making these feel a little bit better. And so as I'm laying this stuff out, I started to make these symbols. If I go back here, you can see that inside of this actual fly out version here. So we've got score, we've got our foreground color, we've got our switch, we've got our background color, we've got our ratio and then we also have our settings icon. Now there's not a huge naming convention here. Everything is part of this app. So I didn't worry about control slash whatever control slash whatever for these components. I just wanted something where the padding was built in. I've got this button here. If I go to this control, I wanted there to be exactly eight pixels here, and I wanted there to be exactly eight pixels over there. So I'm building in the padding into that actual component. That way, when I go to assemble them, I can just snap them together. And I know it's going to work well. That's where that Lego block mentality comes back in. You want it to be able to snap together without having to add in a spacer or extra things. Now you can create a spacer if you need more space. And the spacer actually becomes its own component. And so you're saying, okay, I need to add in a 32 pixel spacer, that's definitely a possibility as well, but that's kind of beyond the scope of what I'm talking about here. As you can see here, we needed controls slash light and controls slash dark. And these are some variations that I was trying with ciders. Really, We have these two main ones here. So this is controls, lights and controls dark because depending on the background that you chose, this thing can actually change color. So we wanted the ability for the color to change. Notice that the eyedroppers here are white, but if you reverse it out, they go to black. There's two different color variations. So we can account for all the different colors. If we analyze the background of both the controls light and the controls dark, you can see that I do have the background color sets. But that's really only so you can see it on this white art board. I have it where I'm not including it in the instances. That means that whenever I place this as a symbol, so if I go to controls dark, no sliders, and I want to place this somewhere. Any instance of that is not going to have the background color. And the reason I did that is because I created all these colors watches. Now this is a long time ago when sketch didn't have the ability to override tents and things like that on certain symbols. So I created a lot of tests, colors watches, and I called them color zero zero seven three, EFF all their hex codes. And then inside of these versions, if I look at the background at this particular symbol, you can see I've got another background here called the app. So this is the app right here. This is the kinda app background, which is this version here app background no sliders. And inside of this, you can see I've got a vector shape that includes this little path right here can move this guy around and then I have the background color getting masked by that shape. So if I took this out, you can see that this is an instance of this background color that I've stretched out completely to be the background of that app. And the reason I did that is so that I could go on to here and I could go and I could say, okay, you know what? I wonder what this would look like, if I changed the background color to, let's say, we wanna go with this color. Now, all of a sudden I can very, very quickly change out that background color because I've built this kind of system inside this little tiny world. I just needed a way that I could switch pieces out intelligently. That way I could test the colors on the strokes, test colors on the background and test the icons. I needed the ability to test all of these different colors so we could make sure that what we were designing actually work. So each one of these is an instance of the app that I can just change out that color of the background. And then I can also go in here and change that text. If I wanna change the text, you can get in there and change that if you really wanted to. But that's just another example of a very small, tiny little design system, similar to that office supplies, metaphor, that was just for the two people that were working on it. So it was organized somewhat, but we don't have to go and build a huge design system website. And we don't need this big, every single use case. What about a toggle switch? And what about profile user icons that our app doesn't have any of that? So I didn't need to build a full design system. I only created a system out of what I actually needed, and I didn't create the system until I designed the actual interface. Once I had the design for the interface, then I started chopping it up into little pieces and fine tuning those little individual margin and padding that way I could snap it all together and make it work well for what we needed to test. Moving on to something a little bit more robust than that contrast out, I've shown this before, but I think this is a really good example of a solid design system with components and symbols. Now this is built on sketch, but all of these interface pieces on this particular screen, I put them all together with sketch symbols. And it didn't start that way. I do want to point out that I've got this other file where I'm still trying to figure out how this should be styled. Should this be zebra Stripe? Should this be a purple highlighted? None of these were actually made it into the final designs. Cause I was still tweaking these. It didn't feel quite right. But even some of these like this, you can tell this is not a full symbol yet. I just have a line of text and this texts and everything is just kinda hanging out here. It's not a symbol, It's just kinda placeholder. It's in place, but I haven't fully componentize every single little item. I have some, but not all. For example, I did make components out of these little line items. If we go back to the actual final version of this and I click into here, you can see them all stacked up. They're all perfectly aligned with each other. They all have padding built into them and they're all stacked right against each other. So if I go into individual versions, I end up with this. So I have my background, I have my catalog and I have my label here. My label is another symbol here. So inside of this, I have my label. So if I zoom out a little bit, you can see that if I move this label, this is the kinda child label. If I move it all the way, everything's going to change. This is the primary area where I've got the text label. And then I have these little 16 by 16 icons. They kinda fit right inside of here. But if I go into this, you can see I've got all these little 16 by 16 icon, including this status indicator. So I have a combination of this loader and the status indicator. So this is all one line item, but I've got a combination of catalog label. So I'll just place that there. Let's go ahead and give myself a little black background to work against. And then we've got our little icon here. So I've actually placed this icon just right on the edge of that. And then I just went ahead and created a full new component out of that, and then a bunch of variations. So this is what happens when you download a new version. This is what happens when you just loaded that version. This is what it looks like when it's downloading and so on and so forth. So I have this little mini mini, tiny little system inside of the line item. So this is something that you just loaded. This is something that's downloaded. And then I've also got the background color that changes if you've selected that item. So this is a great metaphor for a bigger, larger system. All of the padding is built in, everything is snapped against each other. And we have little individual pieces that can be switched out. And that all comes down to the naming convention. And also the sizing of everything. All of these are the same exact size, and we've got the icons in the same exact position. So we have these two abstracted areas that can pull from this library and then pull from that library to create that one particular item. So at the top level, you have these arrows, and then as you drill down, you get these other instruments that are a part of this, that ended up having these little individual components. And then once I had those lists, I even came in here and I had to create a header version of that. But It's hard to design. You don't necessarily know that you need 23 pixels up here and then 20 pixels there. And notice how this arrow is off set a little bit. What if you're designing this in isolation, it's gonna be hard to make decisions like that. So I'm always going back and forth between this version here, so you can see catalog group. So I've pushed this over because I wanted that arrow to line up with the rest of these individual text fields. And if you go out to the full page, you can see that I've got an icon here that lines up really well with the zero one and then the favorites brass choir. So this catalog actually changes to a back arrow, once you go a few layers deep, and then the favorites there, you can see that now I've got this arrow here as well. And all of this still lines up, and I'm looking at this together only with these sag on top of each other. Can I tell that I need this negative space in here? So it's a matter of putting out the full design and then slowly and carefully reassembling these building blocks that you can pop back into place. And if you can think about it as snapping things directly together and building that padding in, that will help you when you're designing from the first go around, it will help you be a lot more mindful of those little decisions like that. The same theory applies to this line item here, we have all of these instruments are getting loaded. So I have this just simply called instruments. Inside of the instrument, We have a title and a number here because this determines the slot that you're using. But then I've got just like that contrast app. I have the solo mute available option, and then I have the CC channel here, and then I've got the volume slider and then the X button. So all of these are right in place. And each one of them has a variation. So if I double click into this, you can see, I'm using the naming convention instrument controls CC one. Now I just made that up. I could have called it anything I wanted to, but to me it made sense that I have this one instrument line item, and I have like three different controls on that one item. So why not call it instrument slash controls slash, and then the name of that individual object. That way, if they're all the same name and they're all the same size, I can switch them out very, very easily. So I've got controls CC one, I've got controls CC two, if you have two different channels that you want to control. And then I have one that is actually active. So this one is completely deactive zero on that channel. And this one is showing like halfway. So I'm designing those sliders and the knobs and everything, but I'm designing in context with that slider so that it can be changed out on the fly when I get ready to. And then the other version, we have the standard kinda volume. They should probably have a purple slider in there. I think I might have left that out by mistake. If you mute the channel, then you get the mute icon in here. And then if you do have this active controls and you have two different channels, then you can show the volume knob. But really all of this is designed in these little blocks. So then when I go into the actual page and I have all these instruments loaded into place like this, I can easily go in here and say, okay, for this one, I wanna show what it looks like when this volume is all the way up, or actually, you know what, let's show this one, instrument, maybe, okay, this volume, I want the volume to be maybe volume levels active. So I just switched that out. Or maybe I want this to be volume levels split. And so I can switch these out very easily to show like a variation of what's happening. So the system is really a matter of what makes sense for you designing it, especially if you have other designers involved and you kind of come to an agreeance on, okay, let's call it instrument controls and volume. You might have to whiteboard this out with someone. And if you have a developer that you're working with, they might have an opinion on the way that things need to be structured as well. So the design system becomes much more complicated when more people are involved because not everyone is going to fully understand exactly why you made your decisions, and you might not know how to make some of those decisions on your own. Sometimes you might be a part of a larger effort to make that design system come to life. And you're part of a bigger team that is kinda all working together for that. That's exactly what happened on this ExxonMobil design system. I was working with four or five other people just on the design team and then also four or five people on the client side. And this is just a small snippet of just kind of a spattering of components that we put together. The real version was actually built into a website as we were designing it. We're designing it and coding it all at the same time, getting feedback from the client, making changes to the code, making changes to the design over and over and over. So for example, this one little stepper design, step one, two, three, step four, the active step and then these five. This is actually the sketch file that I use to design the stepper. And it's not even organized. I didn't name this. I didn't create any symbols out of this because their design team didn't even use sketch. They were really big into Adobe products and we were just delivering the actual code design system. And then after the fact we were gonna go create whatever they needed in their design files. So this is some of the just unorganized design assets that I created that was quickly converted into code because the living breathing code is the actual system, not really the design file. The design file kinda tries to be that system. And there is a big effort to make those two communicate more, but it's really the design system lives and breathes and is inside of the code. And just for fun, here's a quick little video that they put together of the ExxonMobil design system, just to show you kind of all the different pages and all the different things that went into it. It was definitely a multi month project. It took a very long time, check it out,

- [Narrator] Meet Unity, our new Exxon mobile design system that makes building exceptional web applications faster than ever. At the heart of unity is a set of ready to use UI components and page templates that developers use to quickly assemble interfaces. It's as simple as copy and paste to bring these components into a project. By reusing these UI components across projects, developers can create beautiful, intuitive interfaces with less work. Unity is built on a foundation of modern best practices for user experience. All markup is fully responsive, so it works great on any screen size. Unity also embraces high standard for accessibility, usability, and performance. Unity was built on ExxonMobil's existing brand guidelines. So apps get the right look and feel right out of the box. Unity styles the basic colors, fonts, and icons, so developers can focus their energy on real challenges. Get started and learn more at goto/unity. Let's bring unity to ExxonMobil's app.

- It's also the term floating around, call it design tokens that seem to trip up people because it's kinda of a new term, but really a design token is a formalized and centralized version of the variable. Now, variable can just be something like color primary is blue or blue equals zero zero eight eight F F. Those are variables. Something that can be assigned a different name, but the design token is more of like a formalized version of that everyone can adjust and have eyes on not just the developer or not just the designer. So tokens are variables that actually make sense. It's not just randomly assigned. They can be easily understood. Everyone's aware of the naming methodology, and it's quite intuitive to make decisions with them. So you might have color dash background, color dash divider, color dash whatever, whatever you decide as a team, that makes sense. That's kind of like that design token, a group effort. So you want people to have those tokens to be able to use, and it'd be intuitive to use them. And that's again where that naming comes in. There's not really a way for me to say, Hey, this is exactly how you should name everything. There are some approaches to naming things, and you can take your own opinion, but it's really about communication. You have to talk to the people you're working with. You have to talk to the developers and any other stakeholders that are gonna be using the system. That's gonna be key to really make this work. Opens are really the mortar that bridge the decisions with the code that implements them. So your design decisions and the code, and kind of everything is gonna built off that token mentality. Your design decisions become the code and that code runs the entire website or app. So if your decisions are kind of messy and haphazard, then so will the implementation. So the more you can talk to the team members, the more you can really sit down with a pen and a piece of paper, or even as spreadsheet or in a text editor, and really think through those naming conventions, whether it's size first or a color first, and what are the slight variations on that gonna be? Is it Lego brick single yellow, yellow brick single blue, or is it yellow brick single or blue brick single or blue break double. There's just so many variation. There's so many versions that you could create. You really have to do that hard work of figuring out the naming convention and the categorization on your own. So for your design system homework, I'm not gonna get you to create a huge, huge design system, but rather one of those kind of like a small panel, like a small card based module with a couple of line items in it, maybe similar even to the sustain sampler example that I showed you that had the category name and then several different icons. So we're gonna have a card with multiple variations of list items, and you can name them however you want, but they should be able to be interchanged really quickly and easily. They should be named similarly. So they all show up in the symbols panel at the same time or the components panel. And you should be able to scale them a little bit. So you might need to adds a resizing rules on the individual interior pieces. They should also have very calculated margins built in all the way around them so they can snap together just like our Lego brick example. So I'll list out a bunch of different variations down below. Think about a really intelligent way to name them. And if you were imagine just like handing it off to someone, would it make sense? Imagine needing to pass this on to someone. So you might actually create another little side frame that documents the colors, the names of the colors, or even the names of the list items say list item with Toggl. This is used for when there's an on off switch or list item with arrow, this used when you need to go dig deeper one level deeper into a navigation. So just stick with a few line items just to get that kinda basic practice down with optimal sizing all the way around optimal naming and snapping everything together. Maybe you even add a symbol for the background, for the card. Maybe you change it from light mode to dark mode, and you have list item dark, list out of light. And do you put dark and light in then middle, or do you put dark and light on the end as a variation. it's really up to you whatever makes the most sense. So have at it. And I can't wait to see what you come up with.


=== FILE: 7-2 inputs.txt ===
------------------------------
﻿- Designing user input can be one of the trickiest things to nail as an interface designer. There's lots of things that require user input like creating accounts, signing up for things, checking out, spending money online just in general. And a lot of what goes into designing that is definitely in the user experience realm and making decisions on what should be there and what shouldn't be there. Kind of falls into that product design gamut. But I wanna really focus on what makes a good default state, what makes a good active state, and everything in between. At first glance it might seem simple to show a simple little default input field and then show what it looks like while someone's typing in it. But there's so many different variations that we need to account for when we're designing inputs in our apps, whether it's for a website or a mobile app. So let's take a very fast paced look at designing all the different variations that go into the mighty input. Okay, the first thing I'm gonna do here is paste in a list to work from. Lists are just the best. Now I'm gonna create my first input field box, around 320 pixels wide by 48 pixels tall. The size doesn't really matter now since we're designing in abstract, but this is a good starting point. Now let's give ourselves a little top aligned label with an eight pixel left margin to mimic the eight pixel radius we gave our input field. Keep things nice and systematic. We're also gonna go with an eight pixel bottom margin as well. Now if these were hard edge inputs, I'd be more likely to left align them completely without a margin. We'll go ahead and group this and duplicate it for our next design. I'm using a 16 point font size here for both the label and the input field. On rare occasion, you could go a little smaller with the labels if you want, especially if you're using all caps or something like that. Again, we can always tweak this later but it's best to err on the side of usability and readability when you're designing inputs. The placeholder value is tricky to get right and it's largely driven by color contrast. If we go too dark, it's going to look like someone's already typed inside of the field and if we go too light, it's not gonna be readable. Here I'm testing two different options for the gray placeholder text against the input field background. The first test, I'm using a double A score for the gray. I'm using my up and down arrow keys to adjust the value of the hex code, while keeping an eye on the contrast score. Double A is technically the score you would want to achieve inside of your user interfaces but in my opinion, this is too dark for placeholder text. And it's worth noting that not everyone is going to agree on this. Okay the second test, I'm going with the absolute bare minimum color contrast of double A large. According to the web content and accessibility guidelines, this color contrast score should be reserved for 14 point bold and 18 point regular type sizes. The line of accessibility is a little fuzzy here because different type sizes can have differently weighted characters. But because we're using 16 point font and a slightly heavier weight than regular, I feel pretty good about using this double A large score. Again, not everyone's going to agree with this. The top example here passes double A, and the bottom example passes double A large. I prefer double A large as a nice middle ground between being readable, but also not looking like someone has already typed into the field. There's kind of a delicate balance here. Now, let's design a version that has been hovered by a mouse cursor. This may seem obvious but there is no hover on a mobile device, unless you're using one of those fancy new iPads with the track pad. Either way, a hover style is a nice way to indicate possible interactivity. I'm gonna use a slightly darker fill for now for the hover state, but we'll have to test this later to see if it's actually enough change or not. All right, now let's move on to a focused state. We want this to be unmistakably activated by the user, so we're gonna add a nice two pixel blue inner stroke. Now let's place a tiny little two by 20 rectangular shape to serve as our cursor. 'Cause it's all about those details, you know? Now let's add another input field variation that has some helper text. I like to go roughly two point sizes smaller than the input size for my helper text. And since this is a separate text field from the input, we do wanna make sure this passes a double A contrast score. So we're gonna go with seven six, seven six, seven six. Which is as light as you can go on a white background and still have proper contrast. Let's type in a little content to make it better. Okay, now let's design an error state for our input field. I'll copy the helper text version that we just designed because it's always helpful to show why an input field threw and error. Now we're gonna grab a shade of red that also passes double A accessibility. And it's important to know that color alone isn't gonna be fully accessible due to the fact that there are plenty of people with varying degrees of color blindness. To hedge that problem, we're gonna throw in a small alert icon as well. So even if this was all grayscale, the icon would serve as a fail safe if the color red wasn't perceptible. I'm not 100% sure if I want the icon inside or outside of the input field yet so I'm still playing around with it. Now I'm gonna quickly add a narrower input field for reference, for something like a zip code. There's really no reason to have a wide input field for something you know will have a fixed amount of characters. Otherwise it can be quite confusing and it'll just take up too much space. Let's not forget our multi-line input field for things like comments, et cetera. I like to start off by doubling the single line input height, and then adding longer content to test out the line height of the text inside of the field. While we're at it, let's repurpose our helper text style for a little character count limit over here in the bottom right. There's definitely a lot more detailed work we could do around the character count limit, but for now this will do. I wanna show what it looks like when someone is typing here but I'm just now realizing that I forgot to create a single line version. So I'm gonna go ahead and do that. I like to use a triple A contrast score for user input but since this is pure black text on a pure white background, I know that it's the highest possible contrast already so no need to check it. I'm gonna use exact same color as the label and move the cursor to the far right to indicate someone is typing. Now I'm gonna copy that style for the multi-line input and show what 11 characters used out of 120 could look like. Okay now let's copy our error message version and create a success message. This can be useful for checking user names or other information that might get validated in real time without first submitting the form. And green is a pretty difficult color to work with when it comes to accessibility. Everything that passes double A is gonna be super dark and not really that visually appealing. So I'm gonna cheat a little bit here and go with double A large, and it's debatable whether I should do that here or not but, it's a decent starting point and we can always iterate on this later with a nice light green background and darker text. For now let's just move on. I'm not sure if I like this trailing icon outside the input field or not, so I'm gonna experiment with putting them right in there with the message. With more time, I could probably get something to work but I'm just not liking this so far. I'll come back to that. Now let's create a hidden input style for a password entry. Option eight will type bullets for you if you're on the Mac. I'm gonna snag a couple of eyeballs from the feather icon Figma plugin, which is a great little default go-to icon generator. There's a lot more interactivity we could design for password requirements but for now we're just gonna type everything out. Now that I've got the inset trailing icon in here for the password field, I'm thinking I like that placement better so I'm gonna update the success and error icons as well. All right, that looks good. I'm looking back at the hover state and I'm just not really liking it. So I'm gonna try a two pixel gray stroke instead of the fill only, and that will kind of lead up to the two pixel blue stroke that will happen on the focus state. Now we'll make the frame a little larger to make room for some check boxes. Using half the height of your input field as a size for the check boxes is a pretty handy trick. And if you wanna take that whole concept further, it's also quite nice to create a much larger hit area, the size of an input field, instead of limiting it to only the 24 by 24 box. For now, I'll use the same blue as a solid color for the selected check box. Now let's indent these small boxes to fit nicely inside that hover state. This also hints subtly at ownership from the label above. We can break all of these up into default hover and selected states. Radio buttons are most often styled similarly to check boxes, but fully rounded instead of rectangular. It's also important to point out that single select radio style buttons can also be designed in other ways like fill, background, pill shapes, or entire modules that contain more information. The most important thing to remember here is to make it look very easy to understand by highlighting what's selected. I also want to point out the fact that input fields can be pre-formatted. Think of credit card numbers, security codes, and the example shown here, telephone numbers. This can be done a number of ways visually, so consider whether it looks best in separate fields or all in the same. It's also worth noting that you should absolutely consult with your developer on this. There are lots of open source libraries that handle this type of functionality and it can oftentimes be best to design around the technology so implementation is easier and you're not creating something completely from scratch. This is a quick example of a credit card field that shows the type of card a user is entering as they type the numbers. Think about the stripe checkout fields. If you have more options to add to a selected item, consider designing a conditional list of child options based on the selected parent. Here I'm showing an example of some check boxes that appear when this toggle switch is activated. But you aren't necessarily limited to this style alone. But, it can be really helpful to have some type of style that links these items together. Here you can see I'm using the background color as the thing that is containing all of the parent-child information. You can also experiment with tabs or pill style parent selections but above all else, make sure the relationships are clear and easy to understand from a visual perspective. Now let's not forget the trusty drop down field. This is helpful if you have more than two or three options of something and need a longer list. Drop downs can be styled a number of ways and in this example, I'm using the exact same background color for the activated list. Try to be extremely mindful of how your selected drop down looks compared to your active text input. The closer in style you can make them, the better. Also make sure you have a great looking little down arrow to indicate the drop down is actually a drop down. Apart from the text, this may be the only thing that actually indicates it's a drop down and not a text input. Take a look at Shopify's checkout. They do a great job of making their input fields and drop downs have an extremely similar style. Everything is nice and neat. Also, check it out, they're using float labels. Next, let's check out a prefixed input field. You might need prefixed input fields for things like user names, web addresses, currency, et cetera. It should be really similar to a standard user input with a subtle read-only prefix. In this case, I'm using the "at" symbol. You may also need the opposite of a prefixed input field, where some type of read-only text will come after the input. Think of units of measurement, like kilograms, pounds, meters, yards. Sometimes you might need a little extra information at the end of the input to make it clear what the user is entering. Make sure in those instances you have a very clear delineation between what is input and what is read-only text. Once you have all of your input components, look at them all together, zoomed out, and make any adjustments to color, spacing, et cetera, to make sure everything is nice and tight. Okay now that we've taken a look at lots and lots of different variations of all the different types of input fields, I want you to design something similar for your homework for this lesson and create a big, abstracted, kind of design system style input field, just like we watched in the video and start off with 16 pixel labels and 16 pixel input font. And then for your helper text, try to start off with like 14 pixels for that as well. And once you get a few of them laid out, you may go a little bit larger, maybe a tiny bit smaller depending on what you're designing and the style that you go for. You don't have to design it the same way that I did, I definitely encourage you to come up with some kind of fun, unique style, whether it's just completely abstract, something you like, or maybe you are lifting a brand that you really like and you're trying to create input design system bits and pieces for that particular brand and you want it to fit in with their style. So whatever you wanna do, up to you, but I encourage you to design all these variations and post your work and let's see what you come up with.


=== FILE: 7-3 forms.txt ===
------------------------------
﻿- Anyplace online, whether it's an app or a website, where you're posting information or content, that's a type of form. It doesn't matter if you're posting an Instagram story, sending a Tweet, checking out on an e-commerce site, those are all types of forms. Anytime when you are extracting data from a user and receiving that on your side, you're providing a mechanism for user input. For our purposes in this lesson, we're gonna focus mostly on the text-based input so that we can build on that as we lock in those fundamentals. And what I really wanna point out in this lesson are all of the different types of events that can happen while someone is completing a form. We're gonna take a look at a few different examples where the point A is drastically different across all examples, but they're all filling out a form. So we're gonna try to keep in mind, what is that person trying to do? What type of person are we designing for? And if we can know those things while we're designing the form, it's gonna take us a lot further in terms of having a really good form design. So let's take a look at a few examples. The first thing we're gonna do is take a look at the FibreStream website, and this entire website is dedicated to helping people choose their internet plan at their building address and get them signed up all online, so it's really based around this one form, and you start off by typing your building address. And we spent the majority of this project going through this flow and this form, trying to figure out the best way to design this for someone to make it as seamless and as easy as possible. So first of all you tap into here or click, and you can type your address, and we have auto complete that will show up to make it a little bit easier so you can choose your address. You can go back, change it again, and then you have a unit number, 'cause a lot of these are apartment complexes, or in fact, all of them are. So let's say we're in unit 100 and notice what's happening here. If we go back to the home screen, it's just one input field. This is a design decision to make it quick. If you live at one of these buildings, you can just say, oh, you know what? I'm at 628, and then we are conditionally showing the unit number field. Just for a sake of simplicity, and that's definitely a design aesthetic decision, but it's also a user experience decision. We are looking at and saying, okay, start typing your building address. All right, let's do it. Type my building address. See there's not even a label, because it's one field and if there's only one field, you can get away with that. We might need to say, check availability at your address, or building address. Maybe there could be some subtitle text, but nonetheless, if you go and notice these dots here. We're showing availability and no availability. So that one's not gonna be available, but there's a way to request. So it's not a dead end. It's not just saying, oh, I'm sorry. But it is something that you have to account for if you get to some type of dead end. We're gonna go back and we're gonna type this again. Already we're showing that it's either not available or available with this little orange circle. So if I click here and I go to unit number, then all right, it's available. And this is technically still a form. I mean, we're showing a result here, but we're still kind of in the form process. So, okay, I have availability to get internet at this address. I just need a fiber jack, and we can have one of our technicians wire up your unit in no time. Okay, great, get fiber now. This is a form, okay? These are kind of parent, selectable items. I can choose my internet package, and let's say I wanna get the fastest. I get to choose my router. So these are technically radio buttons and we're making the decision to collapse them once they've selected them to move them on to the next. So you can go back. Now we're gonna choose our router. Let's say we have our own. And home phone, it's disabled. Notice how it's completely grayed out? It doesn't have enough contrast to pass contrast accessibility, but if it did, it would look active. So we're leaving it grayed out. And there were enormous amount of conversations around this one screen and around how we should lay all of this out. So let's move on to the next screen. All right, when do you want the technician to come out? So instead of showing a huge calendar, we're just showing the next availability. It's like, assuming that people want internet as fast as humanly possible, we're just showing them the next available block of time, and then giving them the ability to have more and more. Rather than show like a big calendar, which is definitely an option, we just wanted something quick and simple. The first available time. Let's go with that one. And now we'll go to next. All right, and now we have a simple contact information, and we're using the float label on this form, so we're just a little bit cleaner and we can save a little space. So we type here. I can go Bob, Example, bob@gmail, and so on and so forth. So that was, you know, one example of a form design and you know, it's really a building block of all these input field examples that we've already designed. We have this really contrast dark state for each of the input fields. You'll notice that this is a pre-formatted phone number field. So if I type in 555 555 5555, it's not gonna let me type anymore, because this is as much as possible. This is as much information as possible that can go in this field. Now we could have technically made this form field, right here, a little bit smaller, and maybe that would have been fine, but we also kind of like this aesthetic of it just kind of having a streamline feel like this. Since it's not crazy wide, you know, we can get away with that. It's got a very, like, small feel. You know, it's very focused. There's not a huge navigation anywhere. It's very hunter oriented. Someone who knows exactly what they want as quickly as humanly possible. Give me all this stuff. Go on to the next. Let's get signed up. Yes, I want do it. Okay, here's my info. Boom, I'm gonna do it. And also, you know, you gotta have some good error messages as well. Now if you look at the actual design files for that, this is showing what this was designed at at the mobile size. A lot of times, if I'm working a responsive website, I'm gonna focus primarily on the mobile stuff first, 'cause this is often the hardest to get right. So you can see that we have the same kind of thing. Check your address, unit number. This was actually the original design, and then later we decided to hide this until you've entered your information. And so same here. As you start typing, we're showing an auto complete suggested list. Then you've got your unit number. If you look back and forth at each one of these, you can see how the mobile screen looks really similar to this screen. So we're able to just repurpose a lot of that for the desktop version with the wider navigation and everything like that. And then you've got your packages that you can choose. All of these are kind of, you know, very, very meticulously designed and because we're not really using any borders or shadows, I had to pay very, very close attention to this shade of gray. I wanted it to feel really lightweight and airy, but also it has to be dark enough to make it stand off the screen, but if I would have gone much darker with all of these, it would start to get quite dark and muddy. So, when you're not using borders and dividers as much, you have to be very, very meticulous with your color selection, and get it right in the sweet spot where it's just light enough and just dark enough to not stand out but also look tap-able. And I'm also paying lots and lots of attention to the intricate little margins in here. So, I want everything to feel like this nice parent-child relationship, and have everything nice and lined up. So we've got this aligned with that. We have this option for this secondary line. Little extra details for finding out more information. And then every single screen just has this giant orange, unmistakably, bright, and focused, visually heavy next button to take you to the next screen. Once you get to create account, this is another option where we showed the possibility for signing in with Facebook or Google account or signing up with email. And that was the same exact screen that we saw right here. It's just they ended up deciding not to integrate that third party information. And then right here, showing the error states, showing the activation date. Once you've signed up and you want your service to start there's another thing that you have to add in, and it's like a little success message. Then of course you have to pay. There's another form for payment. So we're asking someone to pay with Apple Pay or with Google Pay, or their card number, and showing the pre-formatted form fields for that. So there's lots and lots of different types of forms that are all kind of built on those input fields. And really this is mostly a user experience type of problem and a product design type of design solution at large, but it's made possible with all of these different types of interface design bits and pieces. All right, on this next project, I'm gonna show you this wire frame that I designed for this company based out of Scotland called Skyscanner. They were designing this business traveler app, and I was in charge of kind of figuring out the flow and the interface. But this was quite a bit more complicated and we hadn't landed on a final look and feel yet. I kind of combined this user story and this wire frame flow, kind of all in one, to just set the stage. I had this guy Eric who had an office in Berlin, and he was gonna make this trip regularly. So he's familiar with all of the legs involved and he just needs something quick and easy, and he wants to send it to Doris, who manages all of their travel. So just kind of setting that expectation for the type of person you're designing for. If you're just designing blindly, a form, and you don't have an idea of who you're designing for, your forms are not gonna be as good as they could be. And so we came up with multiple version of these different people who have different needs. So this girl has only been to Amsterdam once, and one of her friends is having a wedding, and so she's not quite as regular of a traveler to this place as this other guy is. So we're trying to show different features that would help each one of these types of people out. These are all point As so that we can effectively design the interface to get them to their point B. So starting with this one, we've got the dashboard that's kind of roughed in. And we have the ability to do a new trip, which is completely brand new, or we have this guy, who does this trip often. So we save his information. So in this instance, we're showing a new trip here. Or this frequent trip, assuming he's already completed this once before, and he's done it a few times. Enough to make it a frequent trip that he's gonna go from Edinburgh to Barcelona. And this would be a shortcut to bypass all of this information and get straight to here. So on these screens, it's completely new. So he's gotta select a departure. He's either gonna choose from recent, use his location, or search nearby airports. In this case he just starts typing in Ed. Notice that I'm using just blue, black, and gray. Because there's lots of complicated information here, I want it to be as simple as possible before I dive into the interface. So I'm still working out some typography. Still working on some layout. But I'm not quite concerned with all of the colors yet. And the full spectrum of style. It's close but it's not there yet. So I'm working on this low fidelity version that's just unmistakable. Just blue for active things. And white and gray for everything else. So he types in Ed, he sees Edinburgh start, pops right in, and he chooses that and goes to the next screen. All right, where is the arrival? Gonna type in Barc and then he taps Barcelona, Spain. And all of a sudden, okay now we need to choose our departure date. We're also showing, hey, would you like to show your calendar events? Would you like to, you know, for this app to access your calendar so we can inform you whether or not you have any conflicts or not? So in this case he taps set an optional return date. He does wanna return. So if you only tap here, it's gonna be a one-way ticket. If you tap here, it's gonna be a round-trip. And then he chooses the number of travelers. And because all of this is up here, we're using this top right as the forward driving action, as opposed to having a big button down here that says search as well, because you know, we're saving a lot of this space for everything else. For the auto complete. For the calendar, and so we're keeping our main driving action up here in the top right. So now we're finally at the place where we can choose our flight. We have to show all of the different flights. We have to show all the legs that those flights contain. And this is just all part of this one big form. And it really starts with these one, two, three form fields. So there's four input fields, and they're all based on user text. But this one, you know, you can tell. This one's restricted to numbers. This one is restricted to dates. And these are restricted to location. And so we're kind of intelligently showing a very small amount of kind of space in here, because the keyboard needs to be showing as I'm typing. And you know, you could technically, I think we may have even come up with some other examples where only the input field was showing, and then you could kind of put the input field up here, and then have all the auto complete stuff. But you still need your back button and you know, it's kind of a delicate balance with how much information you show. And notice also I'm trying to show this keyboard because on mobile, this keyboard is going to be showing if you're inputting text. So you have to make sure that you're only working with about 60% of the screen for this entire design. Until you get to something like this, you don't need user input necessarily, if you have some kind of pre-formatted selection mechanism. So moving on over here. Eric is searching this flight. We also have the ability to add another traveler. He could add another one of his colleagues to this same flight. 'Cause remember, he's gonna send this to the admin at their company, and she's gonna book the flights for both of them. And this is just kind of a tool for business travelers. So we're searching. Now we're going from Edinburgh to Barcelona. Choose the flight, okay. Once you tap this, this is just an option for bookmarking for later. So we're selecting an outbound flight. Then we're selecting an inbound flight. We're coming over here, and you know, there's lots of stuff here. So I'm still not quite sure how this is gonna work. So for now, in a low fidelity version, I'm showing, okay, there's two booked flights. It's the outbound towards Barcelona and then it's the inbound back to Edinburgh. So we've got two booked flights. We can either book this trip now, we can send this trip to someone else, or we can add a hotel. So I'm just temporarily showing these actions and you know, there's nothing wrong with showing to be designed if you need to kind of bridge that gap. So now we're choosing a hotel and I wanna show what all of that looks like. Now we have two booked flights, one booked hotel, and then send this trip to someone else. And so we're gonna shoot off an email to Doris. So just a really, really complex type of form here that goes way beyond just a simple email and password. So there's all these different little states that you have to think about. First of all, you have to know who you're designing for. Then you have to know, okay, is this a date or a location? And is there any way that I can make it easier for someone to select this? And is this pulling from a database of existing airports or is this a complete freeform type of input field? And so all of those little details are going to drive your decisions for what and how you design this input field. A lot of the pre-formatted types of things like airports, you're going to need to select that out of a database, but you also want it to be easy to find. You don't wanna show a list, a scrolling list, of every airport known to man, but then no way to get through it without scrolling. So this is kind of the best of both worlds where this is kind of like auto complete. You choose the one and then it kind of pops in the airport code. The interface design version of those wire frames ends up looking something like this. This is quite old. There's a lot of things that I would change about this now. And you can see here that I actually changed. The airport terminal actually starts to auto complete right below the input field, as opposed to this one, you can see, I was still showing departure date and the quantity. But I think made the decision, once I got over back into the interface design. That's when I realized, you know what? We could show a lot more here if I just temporarily covered up those two fields. And so we're actually, you can see here, this is search, and so I'm changing round-trip/one-way so once you start typing in this field, we're changing the title. Select your from. Where are you leaving from? So At, we're leaving from Atlanta and we're going to, and we're changing the title in both forms. Something as simple as just tapping into another field can change pieces of the interface and now I'm gonna select Edinburgh and then it's gonna kick me over to this new select departure. So each one, it was like we're entering into a new mode. Like this is the input field mode, and then done goes back here. So the same thing here. Select departure, select return. We've got our calendar. We've got a notification badge if you want this to access your calendar. And then once you've activated your calendar, then you're bringing in all these calendar events. So there's lots and lots of little, tiny details that can be designed for each of these input fields just based on the user. And we would never have added any of this stuff if we weren't working from someone who their user story and their kind of user research said that they wanted to, they wanted to select their flights based on their existing calendar. And so having the ability to see, okay, when is that rehearsal dinner, and when is that after party? Okay, I'm gonna select a flight on, okay, Monday is the presentation. So I need to get there on Wednesday. The pizza challenge, you know, I can miss that. And I can get there on Friday. So there's this idea that I'm hyper aware of who I'm designing for and in this case it's someone who wants to see their calendar while they're selecting these airplane ticket selection dates. And then I can keep going, keep going. You can see I'm showing this can swipe down if I wanna kind of give myself more calendar view, or swipe up if I wanna see a little bit more. And then we're even saying, okay, there's six events during your trip. Just so you know. There's one event during your trip. Or what does it look like if you chose something in April and you cross over the month threshold? So how does that look inside of this form? So there's, you know, while it's gonna be virtually impossible to cover every single possibility under the sun when it comes to actual forms, I just wanna give a big variety of what is possible by showing you all these examples. And then finally, if you hit done, okay, we've got all of our fields populated. Now we're saying, okay, now we can search for flights. Now let's search for flights. And then an entirely new section, entirely new page. Now we can see the flight search results that are available to us. So once we've completed that search, now we have, okay, we're going from Atlanta to Edinburgh. Here's our dates, and now here's all the ones that I can select. And if I need to go back, you know, we're going back over here. So this is just a giant form. Okay, and even the filter. We're not gonna get into filters too much, but a filter can be a part of the form, and so we're launching this entirely new view. So lots and lots of different little bits and pieces in this big Skyscanner flight selection. All right, last, I wanna cover this onboarding flow for the SmartLine app. Again, all of these screens right here, all of these screens were probably under discussion for a month, with multiple project owners, multiple team members. Just what's required? What's optional? What should we show? Just tons and tons and tons of meetings, flows, and documentation. So this is what we ended up with. These are the final screens of this onboarding form. But here are some additional screens where there were some discrepancies between what Android was doing, what iOS was doing, and we're trying to revise this so it could be similar for both platforms. And so we were capturing, what does it look like currently on Android? And what does it look like on iOS? And how can we combine these two? I'm creating user flows, and we're having meetings about what information should go where before we're even getting to these screens. And so this probably could have been wire framed, but we were kind of working on the visual style at the same time, so we ended up kind of doing this with the final visual style. But on this form, you can see, okay, we're gonna get started. We're choosing a second line for a business. So the very first thing that we needed to do was search for an area code. Though I had lots and lots of designs for this input field, I had a standard input field with the background and then I had multiple versions that stacked input fields together and then finally, we just decided we wanted to use the entire screen as the input field. Just have this huge unmistakable area code input field in here, and I'm definitely using some double A large, possibly even slightly on the failing side, text in here, because again, it's gonna be very, very important that this text doesn't look active. You can tell. This one color right here, this has a failing color. And it does not pass accessibility. But you could also argue, we have a label that says choose a number. Search any US area code. And this is absolutely triple A accessible and so even if you could not read this at all, it is still says choose a number. Search any US area code. This is merely just a little bit more helpful information. So I'm okay if this fails, because if it was too dark, it would look like it was already active and someone might get confused here. Just a small little visual contrast tidbit on that. That's the decision behind making this color a failing color, 'cause even at double A large, it was too dark. So once you type in your area code, then we are automatically, once that third digit gets typed, we don't even have a next button. Once that digit gets pressed, and you typed in one, two, three, then we're automatically triggering on key up. So basically when your finger comes off that third key, we're firing a function and taking you to this screen right here, where you can choose a number. So we've got our little kind of ghost loading state. So while this is populating all the numbers in their database based off of that area code, I wanted to show, you know, kind of the skeleton of what is about to pop in. Once it loads, you have all your suggested numbers and then you have more options that you can scroll through, and you can even choose a city based on that area code, 'cause you know multiple cities can have the same area code. So we needed a way where they could choose either Carlsbad or San Diego, or Encinitas and they could make a filtered choice with that filter right there. Once they've chosen a number, then we're going to the next screen, and we're saying, okay, now this is your SmartLine number that you just chose. We're popping it in right there, 'cause you picked one of these. Now let's set up your account. It only takes a minute. So enter your email. We're also showing, you know, a lot of auto complete stuff. It saves your email. It might save you a little bit of time and then you know, we're entering email, we're typing in a business name. But this is actually optional. So we're saying, what's the name of your business? We'll use this to give your new number a name. So we're giving a lot of helper information around this. It's not just one form that has a bunch of different fields that says, you know, business name, whatever. And there's no context. You're not gonna be that likely to fill out a form without much context. It's like, why do they want my business name? Why would they even ask for that? I don't wanna get spammed. But no, we're saying, what's the name of your business? We're gonna use this to give your new number a name. We're gonna call it that business name. Okay, well, maybe in that case I'll go ahead and type it in. Or I can skip it. But also I can change it later if I do skip. So notice how I'm altering between next and then skip for now. I can go ahead and tap this as my secondary action, but once I start typing, I'm turning that into the next button so I can go, and all of a sudden, now it's become a primary call to action. Just like, okay, now we need your actual phone number. You know, it's quite a complicated process, 'cause you're choosing a new number and you're linking it with your existing number, so the language here is even more important than the design. And the design is incredibly important too, because we need nice typography, and nice, big instructions. So we're saying link SmartLine with your existing number. SmartLine works by linking your existing number. Your personal number will never be shared. So we're trying to reassure someone, like, hey, this is not gonna spam you, but we do need this for this to work, and we're not letting you try the app until we have this, because this entire experience is based off of us having this number. So finally you type in your number. Okay, we're gonna send you a code. Send me the code. What's the verification code? You know, and notice how we've broken every screen, almost every input field. Not even almost. Every input field doesn't have a background, doesn't have anything. We're actually just using this entire screen as the input field. We're showing, okay, messages. Well sometimes that'll pop in the code. So, okay, there's the code. We got it. All right, finally. Finally, we're here. Your account is ready: email, mobile number, your SmartLine number. Your business now has its own number. Start your free one-month trial to make it official. And so this is a huge business decision about whether or not you do free trials and all that. So that is really another topic that we can get into on another course. Even from here. Okay, I wanna start my free trial. Once you start the free trial, there's still more to do. You have to double click this to get the app store going. Okay, you're setting your number. Okay, I need contacts. This is required. So we're not letting you do this. And it's like, okay. Lemme access your contacts. Okay, okay, lemme allow this. And if I allow it here, then great. Contacts are enabled. Now we're gonna go over to notifications. But what happens if I hit don't allow? This is a huge, huge UX question inside of app design. If I hit don't allow, all of a sudden I need to give them information on what is gonna happen. So SmartLine works by creating two contacts on your phone to handle incoming and outgoing calls. Basically we need access to contacts or this app will not work. Oops, this is required. And it's not some danger, danger, alert! You have to do this or you're, you know, or the phone will explode. It's just a simple like, oh, I'm sorry. Contacts are required. You need to add this. So this is what you need to do. Go into contacts and go, ding. So we're providing another entryway. No dead ends. Open in settings. Okay, go here. Allow SmartLine access. Boom, you're done. Then you can go back and do notifications. This also required because we have to make that phone ring when someone calls your number. But you also have to be aware of what permissions you need to do. So the same thing. If you do notifications, then we give you a little animation, and move you to the next thing. But you know, and this is an advanced form. This is a lot more than just name, email, and password. This is months and months of work. Conversations, white boarding flows, and visual design, kind of all coming together. Another couple of forms here. You can set your business hours. You can set up a voicemail. You know and we're actually showing. Okay, we're already making this selection for you. We're showing, okay, right now, you're set every day. Every day, you're 12 a.m. to 12 a.m., or 12 a.m. to 12 whatever it is, 12 a.m. to 11:59 p.m. is what it probably should say. You know, if this looks good, just hit save. And if this default greeting sounds good to you just hit next. Otherwise you can change it right here, but we just wanna let you know that this information is available. And then finally! Finally! We're in the app. Once we hit next, we can go here and we see, okay, actually we can call or text a friend with our new number, and this is more of kind of like that onboarding hint type thing. But it's critical that you have the default input field and the active input field, and that you show what it looks like with the keyboard showing. All the different variations that could happen. What does the error message looks like? You know this really comes down to style and design direction, and we chose this very, very minimal approach. Whereas, you know, there's definitely some other times. If you look back at the SmartLine example, you know, we have a simple, kind of underline input field. And then even with the FibreStream example. You know, we have more of a slightly standard, you know, still a little bit kind of designed out to make it on brand, but more of a standard input field. I wanted to point out these examples to give you kind of a big variety of what can happen on onboarding and account creation and signing up for things. Okay so I hope all of those examples just gives you a taste of how important it is to know exactly who you're designing for so that you can better provide those situational responses while they're searching for specific things. And you can meet their needs a lot more easily. And again, I know this is coming from a much broader UX and product perspective versus just visual design. But your visual designs are going to absolutely shine and make the user completely delighted if you're able to meet them where they are. So for this lesson's homework, I want you to take a look at designing three different forms. And we're gonna build off of some previous lesson exercises, so if you have a mobile app or a software website or a big corporate website, or you wanna change it up, that's completely fine. But ideally you would build on your previous lessons and you would create a sign up form, you would create a login form, and you would also create a little spinoff forgot password form. Now I think it would be ideal to show, maybe the sign up form in both mobile states and a desktop state so you can show the differences between the sizing and the layout might change a little bit. I got some examples down below that you can check out. And then I want you to create the login form and the forgot password form. All of the details down below. There's lots to consider, even with these simple forms. So you don't have to create mobile and desktop for every single one, but as long as you have the overall layout between something like the create account, then that could be enough to kind of showcase what that form is gonna look like, whether it is the login or create account. 'Cause you're kind of creating a system. So once you have that in place then you can really focus in on the mobile versions, because designing the mobile forms are always gonna be a little bit trickier because the keyboard is gonna be showing, and you might not have quite as much room that you would normally have on a desktop. So I like to design with the tightest constraint possible, so that if you can solve that first, then solving it on a much larger screen size is gonna be a little bit easier. So, check out those details down below, and can't wait to see what you come up with.


=== FILE: 7-4 profile.txt ===
------------------------------
﻿- Think about social media sites like Facebook, Twitter, Instagram, Pinterest, et cetera, your profile serves as a public version of yourself in a way that is often deeply personal. It's the public facade that you want to showcase to other people online. But then on the other hand, profiles for services like Netflix or Hulu, they're less publicly visible and they serve more for your own personal usage. And it's actually really important to understand what is the value of the profile page and what is that going to provide a user. You know, not everyone's gonna upload a photo of themselves for an app that doesn't really have like social features. So there's really no benefit for me to upload an image of myself for my Hulu account because I really just use that to watch TV. I also might be skeptical to provide my phone number for my profile if I don't know how that number is gonna be used. So it's really important to know the context for the profile that you're designing. From a general perspective, a good rule of thumb to think about profile pages is that they are publicly visible, that other people online are going to see them as opposed to settings pages which are more for personal information like sensitive account details, privacy notifications, things that personally affect you and you alone. So there's a good distinction to draw between public and private when you're designing profiles versus settings pages. So let's take a look at some profile examples and dive in. This first example that we're gonna look at is an old iPhone app that I designed, it's called Rivalry. And I don't know if you remember that app called Yo but it's really similar to that, where you basically log in, you pick your team, once you pick your team, all you basically do is you connect with your friends and you tap on one of your friend's teams and you send them a callout. So if I am a Georgia Bot Dawg, I might tap my Florida Gators friend, and it would basically just send them a message and an audio cue that would say "Go Dawgs", and then I would get a score. And then they tap me back and it would say "Go Gators" and they would get a score. It's back and forth, back and forth. Kind of not the most sophisticated app but this is what it looks like. I want to point out though that the profile really ends up becoming the settings, like the settings and the profile are really one and the same. And so I did create a bunch of wire frames for this particular project to start with. And one of the ways that we actually decided to create the entire app was part of the profile was when you first launched the app, you were gonna pick your team, and you could scroll through these alphabetically ordered teams, and then as soon as you pick the app interface is gonna change to your team color. So your profile is really going to affect the entire color scheme of the app. You can say here, I've chosen red and black because that's the college in Athens, Georgia. So that's what exists. But there's other color schemes that we created, this primary and secondary color scheme. So for example, if you would have chosen Florida, then your color scheme might actually look orange, would be blue like that. So your entire interface would change based on the profile color that you selected. I know that this is the profile lesson but I wanted to bring this up because this is also profile and settings can be quite overlapping. And so this could very easily say, profile, on this simple app because it's very simple, it's just the team, the email the username, password and phone number. And the phone number is optional but I want to make sure that we call out that the phone number is gonna help others find you. So, if they allow contacts then you will be able to kind of find people inside of the app. But it's really like a simple team, there's just four bits of information and the team but also the profile, the thing that you've selected inside of your profile is affecting the entire app. So there's interesting little things that can happen as a result of choosing certain profile items, can fact the rest of the app. Okay so this example, this is the 12Stone mobile app. This is an app design for a church and you can see here that the profile tab was one of the main navigational items. But you could use the rest of the app without signing up for an actual account. But if you get to the profile tab, we are hitting you with a signup, create account area. Notice that we've got first name, last name, email, and password. Or we have these two third party options to sign up with, but you can see that we're driving people towards this and this has kind of become secondary. And now, a lot of times you might want people to actually sign up a Twitter or Facebook primarily and you might put that on top and you might have this secondary. But on this particular instance, we wanted the first name, last name, email, password because it kind of tied in with how they were already handling users inside of their system. So I wanna also point out I also designed lots and lots of wireframes for this. And you can see right here, I consider doing just these three buttons. So sign up with Twitter, sign up with Facebook, sign up with email. Already have an account? Log in. And so each one of these would kind of kick you off into individual signups. So I took a little bit of liberty when I jumped from this screen here to this screen here. I'm like, you know what? We don't really have to have this completely separate, we could just go ahead and ask for the email information or put these as secondary. Because this design is asking for, you know, you're putting the emphasis on signing up with an email and this design over here, you're kind of, you're almost accentuating all three of them equally. And so on this one, I've got these sectioned off with the party examples are kind of grouped together whereas the email is kind of put out here. And this is definitely more of the onboarding but it all contributes in the end user profile. You can see here these are the required bits of information for this particular app, and then they hit sign up and before we're fully signed up, okay we're asking for phone number. But we're not just asking for phone number, we're saying, "If you're already in the system, "providing your phone number "we'll help keep your info in sync." So they do enter their info. In case I'm already registered for some other random event and I've already got my information in the system, I don't want three different accounts so all of a sudden, if we give that phone number, we can hit next and it's like, "Oh, actually based on your information, "we found some possible matches. "Please select all instances of yourself." And I'm like, okay there's Douglas, there's DJ Douggie, there's Doug, all of these are actually me. So I'm actually showing now, I'm tapping this because I want to show this is the default version and then this is the active version. And then I'm saying, "Yep, that's me." And then as soon as I do that, it will let me, you know, kind of go to the next phase. And all of the create account information is very tightly tied to the actual profile. So you can see your profile here, there are some definite like settings type thing. Some of this information could definitely be put inside of account information under settings but because this is a slightly simpler app, we made the decision to put all of this stuff on our profile, even though only part of this would be public facing. So I know that in general profile information is public facing and settings information as private. But this example kind of combines those two because there's not that much information. So we've got Matt as the user profile here, we've got the information, the address, the campus, do I have any linked accounts or not? And then also we have this household because this was a big part of the app, was keeping tabs on who was in the actual household, and you could add family members to the household. And then know the difference here too, between view only profile and then remember this is actually a tab in the app. So, this particular screen is not showing the bottom tab but this tab bar would be like writing here. So this would be the view. I'm on the profile tab and I tap edit. That's gonna put me into edit mode and all of a sudden I am back in a very, very similar setup as the signup. You can see his first name, last name, email, password, and then first name, last name, email, password. So when you're creating an account, a lot of times you are actually creating that profile information. And we're not actually asking for a profile photo. So in this instance, I'm actually not even showing what a blank avatar would look like, I'm just showing the end state. And then if I edit the profile, then I have these abilities to change the name, change the password, add the phone number, things like that. And then I can cancel and I can save, I can update the address. And then I'm also showing, you know, this is what it looks like, kind of a, you know, think about a design system, this is what a user profile bit of information is gonna look like. And then here's the exact same profile information with another person and a bit more information. But because this is someone in my family, I can actually remove this person from my household. And then again, add family member is really the same layout as my profile. You know, this from my profile is exactly the same. So once you kind of designed this profile information, a lot of times you can reuse, you don't always have to do this but editing the profile can be really similar to creating the account. And if you've defined those patterns upfront, it can be really helpful to reuse in those instances when you need to edit a profile. Okay, here's another example of a profile from the SmartLine app. This is a great example of what it looks like when you have a default user profile versus a customized and updated user profile. Now, if you remember from the onboarding, we collected some information but some of it was also optional. We have this default CallPaper when someone is actually calling your second line. So on here, we're making the decision that you can tap this avatar to actually update the user profile. And I'm showing, okay, I'm moving and scaling this user profile, I'm showing what it would look like to take a picture, what it would look like to select from the photo library, what it would look like to even select from the albums inside of your photo library. And then if you want it to change the background, this one was kind of, you know, we wanted to have some preselected backgrounds available so you could choose a new CallPaper. And we had some of them preselected, predefined CallPapers that you could choose from, or you could choose your own from your photo library. And so this just shows two examples of choosing one of the preselected ones versus uploading one. You know, and you can't assume that someone's gonna upload the nicest logo, the nicest way. So it always works nicely if you can test it with something with white background and maybe the best logo in the world. So that's just another example of what you have to keep in mind if someone is going to update their own information, it's always best to show a really nice version that's empty and then another version of what that might look like once they've customized their hours and once they've blocked some numbers, once they've updated their profile to have that full amount of information. You've got your empty version and then you've got your fully customized version and then you have all the states in between. Choosing a different background, choosing a different photo, photo library, and then even updating some of the information in here. The difference between read-only account setting information but then editing it and having the ability to go in here and actually change the input fields and redo it and then save it. And then you're back into the read-only state. We're talking about profile here but there can be some crossover between account settings and the profile. There can be some gray area, especially if the app is not really that large of an app. And some of the feature set is a little bit more simplistic. Okay, here's another app called Steady, where we have the profile, which is, it has a sign up, kind of blocker on the profile because we want people to use the app before they created an account. But then once they've signed up, we have all these different options underneath their profile. And again, we're actually kind of mixing in a little bit of settings type information inside of the profile here. We have the photo, we have custom profile, which I'll come back to, we have linked accounts, notification preferences and info and password. So this is , you know, an example of when we're mixing a profile and settings kind of information, all in the same. I'm showing, you know, we're just using the standard, take a picture, choose from camera roll for the avatar. And now I'm showing an avatar in place but also this custom profile thing, I'm showing this kind of progress bar for all the custom profile. This particular piece was very critical for this app. And linked accounts actually refers to bank accounts. So we have bank accounts that are linked. And we also have the blank version of that. So there can be lots of secondary, second and third screens that have to do with information, bank account linking, all of that can kind of live under that profile or account settings. Now this custom profile was pretty interesting on this project, because this would actually take you to this survey. This is all stuff to kind of round out your custom profile. And these were some questions that we came up with for this custom profile. And so you can see, you know, this is a lot of information. And not everyone would feel that comfortable sharing all this information. So that's why we made it optional but also made it kind of prominent inside of that profile so that you could also go in here and you could always save it and finish later. So every screen, how to save and finish later. And if you were to go in and save and finish some of it later, that is how you would end up with that 50% profile completed. So if you went back to custom profile, it would take you back to that flow where we're trying to get that information you and it would just put you back in wherever you left off. And so we're actually also incentivizing, you know, linking a bank account so we can give a monetary reward to the person who actually filled out all of this information. Seemingly simple looking profile on the surface. If you just look at this one screen, it's pretty simple. But there's a lot that's happening to kind of complete this profile, and we're talking a lot of that information under here. And each one of these kind of goes into a vastly different section but it's all related to that one person. And so, you could technically put account settings as a, you know, if I wanted to I could say "Account settings" right here, and my information. Because none of this would be public facing necessarily, definitely not the bank account information and definitely none of the personal information. This stuff right here is more account settings but they're all relatively related. So we chose to consolidate them under profile. Okay for homework, I want you to continue with your fictitious app concept or website concept, whatever it is that you've been working on. And I want you to design a profile page for it. And there's gonna be three different variations. One is gonna be the bare minimum amount of information. Remember if we're creating an account and all we grabbed was their name and their email and their password, well the profile is gonna be pretty sparse when they first log in. So let's show an empty user avatar with the ability to add a photo, maybe you try to add some fun design to like the blank avatar kind of like Twitter has done with the eggs. You know, they're like baby birds, they haven't hatched yet, they haven't uploaded a photo. There's a little bit of creativity you can have with the empty states. And so I'll add some ideas for more profile information, but the first variation is gonna be that bare minimum. Maybe you have their name, maybe you have something else, and it may also make you reconsider what you asked for on the front-end when they're creating an account. Because you might want to authenticate them as quickly as possible but you also might want to grab a little bit more information to round out their profile. But again, that's up to you, it's a design decision for your own app. Secondly, show a final version of the same exact profile with their name, their photo, every piece of information that possibly could exist within that app, make it look like it's been fully completed and that there's nothing left to be added or removed. Like there's, it's kind of in the middle of, it's a fully featured profile. It's got the background image, it's got the photo, it's got all the information, you know, whatever goes into that, just design like a fully robust profile. And then for your third variation, let's design some in-between states. Maybe you design what it looks like while someone uploading a photo, like accessing the camera roll or accessing the camera. Maybe you throw in some permission requests, depending on if it's an iOS or some drop-downs if it's on the web, different things that would happen in between an empty profile and a completed profile, think of those key screens, maybe you show some active fields, different things where you might have a read only profile and then you hit edit. And now you're in an input field version of the same profile. Then you have to hit save, and then it goes back into the other completed version. So those three versions, empty, edit mode and fully complete. And put it in context with your existing navigation. So let's see how it goes and I can't wait to see what you come up with.


=== FILE: 7-5 settings.txt ===
------------------------------
﻿- Settings, in general, are typically reserved for apps, specific items. Think like account information, notifications or display preferences, things like that. So, from a general point of view, personal, public-facing details would be considered profile type information whereas personal, private information would be considered a setting. Think display preferences, two-factor authentication, password, email, all of that stuff, but not typically work its way into your profile. There are some instances where some of this information might bleed into the other, but overall, a good way to think about it is settings is private and profile is public. And as the designer, I want you to try your absolute best to protect the user from having to make too many settings-based decisions from the very beginning and not overload them with an overwhelming amount of decisions to make in a settings type scenario. Cause there will be plenty of times where you might need to design light mode or dark mode or you need to set something as a default. But there may be some disagreement with the team. Whoever you're working with might disagree about that and an easy crutch is to say oh, let's just make it a setting. Well, that works for a lot of things, but a lot of other things need a really strong, opinionated design about some art defaults. And so, even if something is a setting, what should be the default and what would make the most sense for the user at that particular time for that particular app. So, let's dive into a few examples here. The first project we're gonna look at here is this Zipper app, which is a mobile app and a desktop app for collecting digital content for brands that influencers could post to and these brands could kind of aggregate all of this influencer content. Digital delivery, all that kind of stuff. So, without going into too much detail about what the app actually does, I wanna point out primarily that this app is heavily collaborative. So, there's lots of teams that would be involved. An influencer might sign up for this app and I might be working with the Yeti brand, I might be working with Zipper brand, I might be working with Nike. And so, each of these projects would have the ability to sign up and I could start inviting people, we could all post photos and then that brand could use these photos as part of their marketing campaigns. So there's lots of different team members on each project and this might be internal team members, external social media influencers, et cetera. So, onto the settings page, the client that I was working with was still a little unsure about this fifth navigation item. We weren't positive if we wanted to go with team and have something where all team members for that particular project was showing or if we wanted to go with something more, and then we had quick access to the profile and the team. Or maybe we're gonna do a combination of both. We weren't 100% sure yet. With that kind of penciled in, we still designed out this profile and the settings as well. So in this case, we're actually assuming that the profile was gotten to from somewhere. Somewhere on these two screens, to be determined, but we knew that it was either gonna be on something like this or something like this. We would be able to go here and say okay, now I'm on my profile. And I can either edit my profile, change the picture, change any of my information and then I could hit save and then I'm back here, or I could go to my settings right here because there were gonna be very specific app settings. The tricky thing with this app was that the settings were not yet decided upon. We were designing a lot of this stuff as forward thinking, future versions of this app. So, the settings was more of a placeholder, but we knew that we wanted to place that within the profile because it was heavily driven by that personal profile. So this is an example, again, where settings is actually an extension of profile versus its own actual tab. So, we go to settings. This is what we ended up designing for the settings section. Really, it's basically just one element. It's a line item with a toggle. So this is something turned on, something else is on, this is turned off, this is something with little more info, and this is like another group of things with preferences that are similar because they did not know what was gonna be their settings. This might say send me an email when I get tagged in a photo. Send me a push notification when this happens. And so really, we're creating the system for them to be able to use, so even if you don't know what the actual setting is going to be, you can still design some type of placeholder, especially if you know it's gonna be a lot of on-off settings. This is an easy way to do it because then, whenever they decide what their settings are going to be, they just know that it's going to be on this screen. You're gonna get to it from the profile and that you have all of these different options. So, as the developers are getting ready to implement this stuff, they can just use some of the stuff that you've designed as placeholder as long as you've covered single item instances, maybe it's groups of three. Something that's a little more important that has more information. And so, this is just like those input field options that we designed in the input lesson. We have this design system that's starting to be built and this can be used by the developers whenever they get ready to actually implement this stuff. So we kinda cover all of our bases without having to wait on content or specific features. Now yes, it would be better to design all of this with actual real life situation and real life context for what is actually going to be a setting, but sometimes, you just have to make do and design a couple of different options and then hand it over and hope someone does the best work with what they can do with what you've designed for them. Okay, in this project, this is the my Monero desktop app. I've shown this before, but in case you don't remember, this is a desktop Mac application that is a cryptocurrency wallet for Monero. And so, if you know anything about cryptocurrency, it's based on being private. It's like digital cash. It doesn't have an owner, so there is really not a profile here. You have this random string of characters that serves as your address and that's how you send and receive your digital currency. So there's not really a profile on this app, but there are settings inside of this app. So all of this stuff, we actually have a settings, or preferences is what we call it. Preferences is kind of another word for settings. And so, I actually created two different versions here because this was gonna be version one. We knew that that was gonna be a PIN code and there was also gonna be a server URL. This one's gonna be kind of the bare minimum of what was going to exist. And so, I have variations here where you're adding a server URL and that is kind of process of saving. Then this shows that it saved. And then if you hit change PIN, we wanna show what that actually looks like. Enter your current PIN, enter your new PIN or password and then confirm. And then we're also... We're using the input field with a little bit of helper tags because this is pretty important that they know what's actually happening. So, once you've changed your PIN, you can go back here and then in the future, they wanted to add some additional functionality and they weren't ready to implement it right away, but we went ahead and designed all of the different little components that they might need to add new functionality. So for app timeout, this is if you didn't use the app for a while. Since it is a wallet and privacy is a big concern, you can set your own timeout. So as soon as you haven't used it for three minutes, the app would completely get disabled until you entered your PIN. And also, notifications. Notify me when funds come in, outgoing transactions are confirmed, I can request to save and we have all these delicately designed toggles to kind of fit that whole color scheme. So definitely inspired by the iOS system and style, but with a slightly kind of customized look to fit the entire look and feel of this cryptocurrency desktop app. And then also, just showing what does the space look like between these blocks of text? You can see here, I've got 40 pixels there. I've got 40 here, it looks like I've got a little three pixel mishap there. A lot of times, you really just need to show what the spacing looks like and what certain types of things look like even if you don't have the entire product situated and the entire UX thought through and every little notification. Even if all of that isn't designed, you can still create these combinations of toggle switch lists and how that looks when there's multiple lists and how that looks with a slider. How that looks with an input field and go ahead and kind of design out the visual padding that's gonna be baked into the space in between here. There's lots of things that you can design even if this is going to be what things start with. Even if this is the simple starting preference point, you can still go ahead and design certain situations and that way, you provide the team with assets that are ready to use as soon as they get ready to implement that. Okay, lastly, I want to show a pretty complex application. This was the Thermal Camera Monitoring web app. So, lots and lots of stuff here and I don't want to go in tons of detail, but this was an app that would allow users of a big manufacturing facility to monitor the thermal heat signatures of their equipment. And so, what they have is these thermal cameras that are motioning the equipment and this application is monitoring the heat signatures and letting the user know if there are any heat anomalies or not. And they can track the temperature over time, they can insert new cameras and lots and lots of very complicated information. This, actually, I designed all of this on a whiteboard and then I used a spreadsheet and tons of meetings with this and lots of wire frames before ever jumping into the actual interface design. But what I wanna focus on here is the settings side of things. This is designed for someone in a manufacturing plant to monitor heat signatures on thermal cameras. So, there's no public facing account. So, there is no public profile, there's no profile avatar, there's no fun background image because that just doesn't make sense in this type of setting. So, we've got our settings page and we have our account because most every web application or mobile app is gonna have some type of email and password. In this particular app, we have the name, email, and phone number. But again, look. We're using a very specific... We're using this for a very specific reason. This is used only for anomaly notifications. So if I wanna get notified if my machine's about to blow up because it's getting really hot, then I'm gonna want you to send me a text notification. So this is really important contextual information here. You've got your password, you've got your timezone... Okay, why do you need my timezone? Oh well actually, this sets a default timestamp on your thermal images. It's like okay, I'll let you know that. And would I rather display the temperature in Fahrenheit or Celsius, and then I can save that information here. But then, also check out the tab we have here. We have account settings, we have member settings, and then we have billing settings. And there's a number of ways that you could set this up. This is kind of how we aligned on this. You could've very well had a setting screen off to the side and then you have... Here's my account and here is my members and then here is my billing. And so, we could've definitely put in... Well, let me see if I can put that in place, we'll just copy this over here. So, account could've been there. Members could've been there and then billing could've been here, and we could've done our little arrows. Not gonna spend too much time drawing a bunch of arrows, but you get the idea. So, we could've done something like this. So, you go to the settings tab and you don't have any information, but then you have to go to each one of these and you go back and forth, back and forth. But, we chose that account information was probably the most important at this point. I'm gonna put that right back there. Get rid of this stuff. So, account settings here. Got all of our information, and then if you go to members, these are all the people that you have assigned to this particular project. So, you have other people that you've assigned as admins, other people that you've assigned as technicians, and then you have your billing information. Here's my payment information, here's my card number, here's my expiration date, I need to update my card. Here's the company information, here's stuff that will appear on my invoice. And I can change this information, I can update it, and then I've got a log of my payment history. So, lots of highly specific, highly customized settings type of information that is highly, highly tailored to this particular project. You know, this is not gonna be your average Instagram settings page. It's always going to be contextual for the app that you're working on. But, you can see, look. We've got input field with regular text. We have an input field, we have a pre-formatted input field with helper text. We have a hidden input field, we have a drop down. We have a radio button list. And then here, we have another list. Here with some edit buttons. We have a simple tab structure. If you think from just a visual perspective. If you can learn to design these types of, kind of immutable components that are gonna be used across many multiple apps, then you can put these in your arsenal and then you can really focus on what makes the most sense for this page, and this is definitely more of a product thinking, product thought process, user experience kind of strategy. And again, that is an entirely big topic that can easily be another course. But for now, we're just looking at assembling all of these visual components into a way that makes sense. We've got our text hierarchy, we've got our smaller headings. We're using very strict borders. We're going not too heavy on the borders so everything looks nice and hierarchal. And just lots of different settings for this particular web app. Whether you're on a complex heat signature thermal monitoring app or a digital content app that doesn't have a solid amount of requirements or a cryptocurrency app. That is all completely different. It's going to be different depending on which type of app you're designing for. Which type of website, which type of software. So, it's gonna be up to you to ask those questions and to have those conversations about what is going to go on there because you can always design these different components with different styles. The most important thing is going to be figuring out what needs to go where. And you're only going to be able to figure that out through having lots and lots of conversations. Okay, for homework, you might've already guessed this, but we're gonna be designing a settings page. So, continue on with your fictitious app concept and create the settings page for that app kind of in the existing design. It's fine if you wanna tweak it or if you wanna use a separate project completely, but the idea here is that you would have this continuity between your profile, your settings, the navigation, and you'll end up with a pretty nice little portfolio piece here. So, your settings page might be really simple with just a simple list of all the different settings, but you could also consider breaking it up into account specific where it's like email, username, password, phone number, two-factor authentication. All of those things that would be very specific to the account. And then you might have general settings that are much more app or software-oriented like display preferences or email notifications or push notifications or even privacy within the app. Do you wanna be tagged in that photo. Think about looking for references within other apps that you might use on a regular basis and look at how they're handling settings and look at how they are architecting their information and chunking different things in different positions, and that might give you a little bit of inspiration for how you will set yours up. But be sure to include toggles and check boxes and all those little bits and pieces of UI that would go into a nice settings page. So, I look forward to seeing what you come up with.


=== FILE: 7-6 list cards_filtered-v2.txt ===
------------------------------
﻿- Okay, so what's the real difference between a list and a card and why should I choose one over the other? Well, for the majority of apps, cards and lists are gonna make up, most of the content that is consumed by users. Cards are often most useful for grouping multiple pieces of information together, like an avatar, username, timestamp, video, caption, think of your standard Facebook posts and multiple versions of those all on a timeline. It's better to have those borders in place in a card like environment. So it's easier to see what information is contained inside of what boundary. Lists are most often used as a utility, where scannability is a really big factor in the overall experience. Think about when you're scanning news headlines and you're looking for something that stands out or you're scanning price, or you're comparing things and you're looking at features, this one has it, this one doesn't, this one does. So they're used for different scenarios and one's not necessarily better than the other. So let's take a look at a few examples. All right, so in this simple layout, we have lists here and we have cards here just in a very stylized, kind of low fidelity type of layout. And I wanna point out a couple of differences here that these lists, when you have like an image or an icon and some texts information, it doesn't always signify interactivity. It's not always so noticeable that you can actually tap or click on this, which is why oftentimes on a list you'll have one of those little forward facing little arrows on that side that looks something like this. Just put a little stroke on that for now and change the color, make it a little bit bigger. A lot of times you'll find a little arrow on lists like this to make it a little bit more interactive. Not it does, it's not always required, but you will find that to enhance the interactivity. One thing about lists though, is it does emphasize a hierarchy. Most of the time in a list, most important information is gonna be at the top and also definitely more scannable. So if you have a list of things like this, and you wanna just check out the title, title, title, you can just scan right along this line. And you can gather that information really quickly, whether it's a price or a title, square footage, anything where something kind of needs to be compared quickly, and you want to just scan the information and find something a lot more quickly lists can be more helpful. And they also oftentimes take up less space. You can condense a list into much tighter of a space. This list right here might be kind of a large list. You can imagine that if I made these images a lot smaller by just kind of making them the same size as this, we could actually get a lot more space if I were to make these smaller, and then I could bump this stuff up though. There's a lot more room to work with when you're using some type of lists. More often than not, you're gonna group smaller amounts of content inside of lists. It's not gonna work if you have lots and lots and lots of data with multiple objects and you have tons of data. And then, kind of the same thing over and over and over the separation of content becomes a little bit harder to know which pieces of content belong where. Sometimes this might work better in kind of a card format. So in cards, cards tend to signify interactivity. I have this giant tile that says, "hey, you can probably click here." Cards tend to also de-emphasize hierarchy. So you have these big objects that you can scroll through, look through and kind of explore when you don't really want to specifically find anything in particular. You just wanna explore see the options. Sometimes cards can kind of de-emphasize that hierarchy and promote exploration. Cards are also less scannable and that's not necessarily a bad thing. If you were trying to price shop and price compare, maybe your best bet is to go to the list. But if you just wanna promote products and show what's available in kind of this exploratory fashion, then you don't need it to be scannable. So it's okay to have these less scannable card. It's also worth pointing out that cards end up taking up more space. Most of the time inside of a card, you need a little bit of padding around, say your content is like right in here, you need that padding from the edge so it doesn't look too crowded and too contained. And then you also need negative space between the cards and then you have to have padding again, whereas with a list, especially if you're not using borders, you can just use negative space, right in between the objects and the list. And you can have a more condensed layout. All right, so now let's take a look at how the same content can kind of progress from a list into a card layout and why you would possibly wanna consider using one or the other. So over here on the far left, I have your straight up list and it's got no border and it's only divided by negative space. If we zoom into this one, you can see some type of image, whether it's a thumbnail or an icon, I intentionally want these to be kept at low fidelity just so we can kind of illustrate the differences. We've got list here, straight up list, only negative space. All right, right here we've got, we're still kind of in that list world, but now we've brought in a partial divider. You can see it's just starting right here at the edge of the text and it extends all the way to the right edge. So some type of partial divider, this is more similar to like the iOS style in their settings and some of the other kind of standard native iOS apps. All right, so you can see in this third example here, we've got a border that's kind of coming all the way across here. On this example, I've got like 16 pixels of margin on each side, and this is gonna be, kind of like your standard divider. It's still a list, it's still kind of scannable content. We're just kind of further accentuating that border as opposed to just a straight up list like this with negative space only. Now, instead of just space between objects, we need space between the object and the divider and then the divider and the other object. So now we're doubling that negative space when we're using a border. And you can get away with a little bit less in this example. Right in here, I've got like 33, right in here I'm going a little bit larger to kind of make room for this additional divider. And this might seem trivial to use this tiny amount of space we are in about 16 and 32 pixels. But when you're working with lots and lots of information, it's gonna make a big difference when it's all said and done. You can see here on this fourth example, I'm using a really large divider here. And if you kinda zoom out, it's almost unrecognizable, whether or not these are black modules sitting on top of this color background, or if the entire background is black and I'm using these dividers, it's a little bit kind of ambiguous. So number four is kind of the most hybrid of them all when it comes to borders and dividers, because you could technically infer that this is the full background or that it's just a really thick divider. And then finally on the fifth example here, technically this is still a list, but we have a full true card view. And most of the time when you're using your card view, you'll have a little bit more information, but I wanted to keep it the same for this purpose, just so we could see kind of all the different variations. In this example, now I'm really concerned about the interior space. I've got 20 pixels all the way around the image and on the top of the left and the bottom. And then I've got 12 pixels around the card and the border of the frame and also 12 pixels in between. And then again, I've got 20 pixels all the way around, but you can tell that from the very edge, I'm about 32 pixels from the edge. Whereas like over here, I'm like 16. So I've had to double the space and I'm losing a lot of space here and especially important when you're on mobile screens, but I'm losing a lot of space when I get into this card view and that's not necessarily a bad thing. Lists aren't necessarily better than cards and cards aren't necessarily better than lists. It just depends on what you're designing for and what is more valuable on the screen real estate. If you just have a little bit of content, you can kind of get away with doing whatever you wanna do, but if you have lots and lots of content, you'll probably wanna make the most use of that space. And you'll try to reduce the amount of gratuitous margin and padding as much as you can. If we look down here at these examples right here, I've pulled some examples that kind of pull from this same progression, this one through five progression of list of card. So you can see here on the Spotify app, these are the playlist and these are all tappable. You can tap on each one of these, but look, there's only negative space separating them. There's no additional borders, there's no lines, there's no card. It's just straight up negative space only. And on the Apple iOS native mail app, you have your kind of partial line here. So as you can see, I've got a lot of negative space here, a lot more negative space over here. And typically that's reserved for the little blue dot that would indicate an unread message. Or if you've flagged one of your emails or you've starred any kind of notification there's room for that over there. And they've intentionally not placed the divider all the way across, just so it breeds a little bit better, but then over here, closer to the interactive arrow, they do have the border going all the way across. And I think that just helps separate, that interactivity when you're driving from this screen down into the detail screen. And then this example, we have that full width border. On mine here, I left a little bit of room, but you can see here, this goes all the way across. So this is a very custom view of a receipt from Calcbot. And, as you enter your information, this receipt will continue to kinda pull in all the calculations that you've added. But they're taking a very segmented list stance on here. And so they're just bringing their own line all the way across. And it's more of a custom view. And there's nothing to say to that they couldn't have stopped the line short here. They couldn't have stopped here and then they couldn't have stopped the line there. This definitely a stylistic decision and there's not really a wrong or right answer for here unless they try. If you try to add that margin there in between here for this type of list, then maybe it's not quite as segmented and it doesn't look as good if you decide to venture away from an a standard native like iOS does with their list dividers. Then you just kind of make your own case for doing it a little bit differently. And then this fourth hybrid example, I've pulled the Facebook group screenshot here, and you can see like they're technically they're doing a card here. This is a big card. And you could make the case that this is either a big divider or it's the background. And then right here, this is either a big divider or the background. And this is again, either a big gray divider or the background to me, it feels like they're probably using this as background and that these are big, full width cards that just expand the entire screen because there's a lot of content here. There's topic card, there's the postcard, the group card with all these avatar. There's lots and lots of things that are on here. And it's gonna make more sense for them to have these very clear dividers and then treat these as cards. Instead of this last example, you can see on the Apple iOS app store, they've got a very big margin here on both sides, lots of padding and then these huge cards that kind of lend themselves to exploration. Think about the Facebook example, if they were not going full width and they brought it in like 16, 20, 24 pixels and use true cards with padding, and that would extend the vertical height of all of their content. And it's already a lot of stuff to scroll through. So they're trying to maximize that screen real estate, and there's not really a right or wrong answer, but I think in the Facebook example, because they have so much content, it's gonna make sense that they use that card view, but it's fully extended and to kind of that full width version. So because they have a lot of content, they don't really wanna use just straight up negative space or lists. But because they're using cards, they're kinda using that hybrid approach. So they're bringing that full width version in versus the app store here. They aren't that concerned with tons and tons of data because they're just showcasing a few apps, a few kind of a gallery of apps every day and they don't need it to be this huge amount of information. They just want this nice way to display the new apps. Another really thing to keep in mind here for lists versus card when you're trying to figure out how to lay out your content is gonna be the law of proximity versus the law of common region. And most of the time, I don't go too nerdy on the UX laws and the gestalt principles of human psychology when it comes to layout. But in this case, these two are very key in understanding what makes a list versus a card better than the other. So let's take a look. In this example, we've got the law of proximity working here. Right now if we just kind of look at the negative space here, two and three are closer to each other and then four and five are closer to each other. And it looks like one and six are just kinda hanging out on their own. So if I were to make an assumption about what belongs in a group and what is related, I would say, okay, one is kind of in its own world two and three are kind of in their own world. Four and five are group. And then six is kind of an outlier over here just like number one. And that works perfectly. This is great for a list because the negative space, it tells you that the proximity of things, it tells you what's related to what, and it gives you a way to kinda understand that content in a way to group it together. And this is especially useful if you're gonna use negative space, you have to keep in mind that law of proximity, the things that are closer to each other, without borders or cards or dividers, those things are gonna look more closely related. Whereas now, if you look at this bottom one, the law of common region comes into place. And that's just gonna say that anything that shares a border or a common region, it's gonna feel a little bit more closely related. And so you can look up here. This is the exact same layout. One, two, three, four, five, and six are all in the same exact place. But now because I put this border around, now we can see, Oh, okay, well, in this example, one and two are related and three and four are in a group and five and six are in a group. So it's a lot clear what is related to what, even though two and three are very close together, and four and five are very close together. Now that we have this card layout and this border surrounding it, it gives everything a common region, five and six share common region, three and four share a common region and one and two share that common region. But that's what makes cards a really popular technique because it's a lot easier to group information inside of a bordered area. And it's, it gives a very clear line of delineation around what content is related and what's not. Even if the three and the four aren't as closely related as the two and the three in proximity, the law of common region is always going to trump the law of proximity. Take that with a grain of salt. It doesn't mean that you should always use a card. Sometimes negative space looks better, but if you have a lot of information, it's a lot easier to put a border around it. You just have to be mindful of the color that you don't make the border too thick, too strong. You don't want the border to overpower the content. So for list and card homework, I want you to create some type of activity feed for your fictitious app or choose something else if you're getting tired of working on that. But I want you to come up with a list of information and I'll put some of that information down below, like an avatar or an icon, a title, maybe a sentence or two, a timestamp, just some general information that's kind of like right on the line of is this a lot of content or is this a little bit of content. Some type of content that could be separated with negative space only, or an iOS style border or a full width border, or kind of that hybrid approach or a simple kind of like card layout. So I want you to take that exact same information that you come up with all the ingredients for those little list items, and then try those five different types of layouts. It might surprise you in terms of which one feels better than the other. And it's really gonna come down to what is the overall aesthetic that you're going for with your app in general, and also how much information you're gonna put in play. So there's a lot of things to factor in, and I've got some design considerations for you to kind of scan through and check as you're doing that homework. So best of luck to you on this. And I can't wait to see what you come up with.


=== FILE: 7-7 detail_filtered.txt ===
------------------------------
﻿- Whether you're designing for a desktop or mobile, you're going to have these lists and cards that are gonna create these activity feeds or home feeds or media feeds. And they're always going to link to some type of detail screen. Just about every single app that you can possibly imagine has some type of list view or card view. And it links to a detail screen. Think about tweets in the timeline linking to a detailed view of that particular tweet and you can see all the retweets, the favorites, the comments, the replies. Think about a Facebook post, you can see the original post with maybe a truncated description. You tap, you go to the next screen and you see the full thing, along with all the comments and more detail. There's always going to be some type of truncated or snapshot view of a list. And it's gonna link to that detail view. And so you can pretty much guarantee that almost every app or interface that you design is gonna have some type of concept between list overview and linking to that detail view. So let's take a look at a couple of examples of how that transitions between certain apps and some of the techniques that you can keep in mind while you're designing those detail screens. You can see here on the Spotify example, we have a simple list view, and if you tap Discover Weekly here, it's just gonna do your standard slide transition here to the Discover Weekly detail view. And then right here, there you go. We're bringing in the large image, bringing in a little bit more information that wasn't already there. Same thing here on the iOS mail app, you have your list view, it's separated differently than the Spotify stuff, but same basic concept. It's just matter of how much information is valuable in this list view when I'm checking my email versus how much of that summary information is valuable when I'm just checking out a new playlist. So in this example, we get that extra bit of information in that list because it's a little bit more valuable so we can see what that email, but again, it's the same left or right transition, and you can go back and forth. There's no custom animation, but it's sweet and simple and to the point and gets that animation, that interaction point across. Here we have the Calcbot example and remember the list up here is showing what's happened inside of, all of these expressions that have been used. They're using a little bit of space up here for a list and let's watch what happens when we interact with this and how it can affect the detail view. This is definitely more in the custom ballpark, scroll up here you can see your list. And if we tap on some of these expressions, we can use it in the detail view. So there's no sliding left or right, we're just choosing whether or not we wanna use that expression or the results and the list is actually modifying the detail view. So it's not transitioning from left to right, we have a list and we have a static area that can be kind of interactive did with and gone between, but that list is controlling the information on that screen. So there's no animation, there's no left or right slide. It's useful because it's being used as a complete utility. You just tap it and it changes that information below. So this is kind of a unique case, but it's important to remember that when we're designing and laying out all these lists and details that you can have an incredible amount of interactivity and you can tap things on a screen that change another part of the screen. And as long as it's not designed in a way that's completely separated, you can make some really cool interactions with some lists and detail views. Here we're gonna take a look at the Facebook group page, again, remember this is kind of that hybrid card system, where we have full width cards that are separated by this kind of padding on top and bottom of all the different cards. And they're doing that to maximize that screen real estate, but also make it feel interactive. So we can scroll through and we can tap on this full post to get to that detail screen. And you can see that whenever I tap there, there's a lot of the same information, but then we're bringing in bigger versions of these actions. We're bringing in a little bit more of the analytics, we're bringing in the ability to write a comment here. If we go back, some of that same information is here. I can still like, and I can tap comment. A lot of that is still there, but they're making space on this detail screen to just have an expanded version of that. And there's space here to show additional comments, to show additional likes and just, it's kind of containing more information that's not necessarily important to be displayed on that main list view. And then one of my personal favorites on this iOS app store, they just have these really fun, big tiles, and it almost kind of begs you to tap into to it. There are these big floating cards and you tap on it and they just grow into place. And it has this really fun, little animation. Notice the way that X changes color when you scroll through the larger versions, just a lot of very, very subtle and simple interactivity, but it just makes for a really fun kind of fluid experience. It can be overkill to use this type of animation on different types of apps. So you have to be mindful of what you're designing for. This one is much more of an exploratory, hot new app of the day, and I'm just kind of exploring and I'm trying to find things, but if you go to the search tab in this iOS app store, it's not gonna have a bunch of crazy animations. It just has a very clear, direct interface that lets you get what you want and then it's gonna use a list view of those results because you don't need a big card, interactive interface when you're specifically hunting and searching for something. So in moments like this, where there's more exploration and you're just kinda looking around, you have a lot more freedom to work with some of these fun, little growing and closing animations like this. Now I wanna play you a very quick video that I made a few years back for InVision when they were promoting Studio and we were recording these kind of time lapse, time run. So I'm gonna play that for you and then we're going to dive into the file. ♪ I am a human being capable of doing beautiful things ♪ ♪ I am a human being capable of doing beautiful things ♪ ♪ I am a human being capable of doing beautiful things ♪ ♪ And I am a human being capable ♪ ♪ of doing these beautiful things ♪ ♪ There's lightning striking all over the world ♪ ♪ There's lightning striking all over the world ♪ ♪ There's lightning striking all over the world ♪ ♪ There's lightning striking all over the world ♪

- So if we dig into this file, you can see right away that I've got this dark tile and this detail view, and then I have this lighter tile down here and then the same detail views, so just kinda playing with that Night Run is a dark mode screen and then like a Day Run is a day mode screen. And so I'm using cards here, but they're still linking to a detail view and this is a conceptual app. So there's not a lot of like rigid straight requirements about scanning a bunch of lists or anything. But I personally just kind of thought it would be a fun way to experiment with animation going in and out of these screens. So if you look at how this is set up, I've got title and time left a line over here, but then title and time is center aligned right here, but it's the same size, San Francisco 17, San Francisco 11. So kind of a nice juxtaposition between a large title and a smaller font. And then I'm using 12 points here. I probably should have used 12 there in retrospect. I'm not sure if it makes a big difference to have that 11 and 12. So that might've been an oversight on my part. That I'm using size 100 and then size 30 here, 'cause I just wanted to have a really cool fun use of this type of typography and this one I'm making it even larger, so 166 point. I'm also bringing in average heart rate, calories burned. Now I probably could have fit that information on this screen, but I didn't think it was that relevant. Most of the time when I personally am looking for a run, I just want to know how long of a run was it? What was my pace? And then if I want more details and I wanna look at all the splits, then I'll just go into that detail view. And then I've a little toggle here where you can go back and forth. So if I just pull up this, you kinda watch how this is kind of going in and out again. So just going from that card view to that detail view, you can see kind of like the subtle interactions that are happening. And I've got an entire video series on how I put together all of these prototype details. So if you check out, "Switch to Studio", you can find this specific content and I'll cover a lot more about prototyping ~ and how to work these animations in the prototyping section of tactics. But for now I just really wanna point out that there's the ability to create this customer interaction and you don't always have to go from list and you don't always have to go from list and card view, A lot of times that's perfectly fine to go into the detail view like that. But when you have an opportunity to create some kind of fun interaction or fun animation, for something like this, it could be worth a shot to see if it's something that could work for your project. Now, again, this is completely conceptual and I would never design something and animate something like this without first at least having a conversation with a developer or with the team, if it was even feasible or a viable option to create something like this. So I wouldn't recommend just designing this and saying, here's what we wanna do. I think it's important to get buy in from a developer or a stakeholder about the amount of time that it would take because creating this versus just having a purely swipe left and right interaction. And that could be the difference of to four weeks of time, just coding animations and testing everything. If you're paying a team of developers for four weeks versus a day, then that's a lot of money spent that could have been saved. So that factors in a lot, when it comes to deciding whether or not you're gonna do a detail view like this or not. So for homework, I want you to design a detail screen for your fictitious app and ideally it would be using one of the list or the card view from your homework from the last lesson. So I want you to create an associated detail screen with that list view that reveals more information. It might be more content, more actions, something that warrants a detail view. And I want you to consciously choose and think about what type of interaction should happen between the screens. It'll be tempting to think of some fancy custom thing, kinda like this running concept design that I made. But that might not be what works best for your app, it might not be the best thing to explore. Sometimes a simple standard kind of sliding left or right will just do the trick. Sometimes it might need to trigger a model because it's a new view and it might need to come from the bottom and you cancel to get out of it. But it really just depends on the type of app that you're designing. So you don't need to prototype this or animate this, unless you wanna just dive into some of those ideas, 'cause again, I'll be covering a little more animation and prototyping in another lesson, But for now, I really want you to focus on the design of that detail screen and think about what will happen in between those two screens. So emphasize certain details over the other on the detail screen. Maybe the title gets really large or maybe the title needs to go small in the top, maybe some of that content gets really large, maybe the thumbnail that you were using on the previous screen goes big, full width, maybe it goes behind the status bar. You decide what looks really good for your detail screen. Also keep in mind what happens when you scroll through the detail screen, take a look at the Spotify example. When you scroll through the Discover Weekly detail view, the image scales down to the back, and then the title slowly fades in from the bottom to the top and the play button gets stuck and it becomes this new header. But there is a lot of tiny little interactions, tiny little details that make this detail view be quite unique. So think about what you can do on your designs to kind of add a little bit of extra fun and interactivity to your detail screen. So best of luck on the homework and I can't wait to see what you come up with.


=== FILE: 7-8 sort filter_filtered.txt ===
------------------------------
﻿- There's two key differences between sorting and filtering Sorting rearranges existing content and filtering removes content out of the view. So they're similar but not quite the same and this always causes a lot of conversations and theories and different approaches to how you would handle filtering and sorting different kinds of content when you're really manipulating the data. If you think of it as manipulating the data then sorting and filtering both kinda fall under that category. I want to walk you through a couple of mainstream apps and show you how they're handling sorting and filtering and then I want to walk you through a range of simple to come complex projects as well. All right first let's take a look at this Amazon app this is just a search result view for the Sony ZV-1 and you can see here, they actually just recently changed this but right here all of their filters are actually listed out here so Prime and Delivery, Category, Review and then if I just hit play and we can swipe through each one of these we're looking at more filters and then notice here at the very end they have Sort by: Featured whereas every other one has Category, Review, More Filters but this one they are explicitly saying Sort by: Featured. Sorting is gonna take that existing information and rearrange it by however you select it, so featured items, price high to low, price low to high, so on and so forth. So in this Amazon example all of these filters are kind of broken out and they have different selection mechanisms for category and review and different things they provide contextual filters for each one of those subsections but overall it's kind of like really accessible everything's showing, you can read all this and it's actually quite busy but it's also very useful when you're sifting through tons and tons of data. Now we'll take a look at this Nike app which has a much different aesthetic. They go for the simple, clean, black and white look and let's take a look at what happens when we go to men's clothing and then we're going to go to Tops and T-shirts let's back up just a tiny bit here like right in there, all right notice here on Tops and T-shirts, we do have a little bit of a category filter so right now it's on All, and we have all these different shirts but we could also filter them by Graphic T-shirts or Long Sleeve T-shirts so we're not actually, we don't have to choose category it's already broken up and listed for us and there's not a button that says filter by they just break it out into tabs because you're already in the Tops and T-shirts category, let's just list all these categories out in this horizontal fashion, assume that people are to look for either Graphic T-shirts, Long Sleeve and they wanna choose by category so they're making an assumption whether it's based on their design intuition or on data that they're gonna list everything by category like that and that's how they're going to approach it. But what if I want to filter by color or if I wanna sort by price? well you can see up here on the top they've got this tiny little icon here, that kind of looks like a little slider things where you would adjust some settings so they have that and they're tucking everything into that little menu icon. So right here they're calling it Filters so when you tap that icon they're calling it Filters, but notice how they have Sort is first and they have their three different sorting mechanisms then Gender, then Sizing then Color and you can see all the different categories are listed right in here, Brand but not categories of T-shirts, they've intentionally removed the categories and they've pulled them out in tabs. So there's different ways that you can handle sorting and filtering you can expose everything in a row of buttons the way Amazon did it or you can take this approach since we're already in Tops and T-shirts we can just tab navigate between all the different sub-categories but if we want more granular detail to search for color we can put everything into that icon and that's another perfectly reasonable way to do it. Just from a general perspective, sort is typically more commonly put underneath filter as opposed to the other way around. It's not going to be that common where you say "sort all of this information" and you tap sort and you have an option to filter by color or filter by category or brand, that's not typically the proper hierarchy when it comes to sorting and filtering, filter is usually the main prominent call to action when it comes to modifying those results and sort is kind of play second fiddle, not less important but sometimes it's placed underneath so take that for what it's worth. The placement and the design of the sorting and filtering mechanisms in your design project if they exist, that's going to be a UX discussion and even a business discussion depending on the analytics of the app or even the opinions of the people involved on the team so if you can make yourself a part of those conversations and a part of those discussions you'll be better equipped to make those stylistic, visual, design decisions, knowing all the information that exists because if you just start designing a sorting and filtering system without having conversations with the UX team or the information architect or anyone else even if those things don't exist on your team even the stakeholder, you know the business side of things they're going to know, people really love to buy Graphic T-shirts but they don't buy quite as many long sleeve t-shirts but we have 'em so we need to sell them so things like that, little bits and pieces of information that you can collect from stakeholders who probably already know a lot about what people look for and what people are searching for you can use that information while you're designing the interface to make better decisions for your sorting and filtering mechanisms. So let's take a look at the Smart Line app here I wanna show a very simple little filtering system here notice on the conversations here we've got these phone calls, we have these text messages and we have voicemails but right here at the very top we have this all with a little down arrow so if I just play this prototype here and you know you can see you can scroll through this thing If I want to access, I'm only looking for text messages, I could just tap this little area up here and I can either show everything by saying "Show All" I can show only the calls, show only the texts, or show only the voicemails and the copy writing right here is very specific I'm not saying filter by, I'm just saying all with an arrow pointing down, it could say show all that could be an option but we were trying to go for something very clean, very minimal, only what needed to be here was there and so now if I tap this you can see that All is pulling from this one selection so All is selected so All is showing right there. If I tap it again you could imagine if I were to tap calls right here it would say calls and then I would have only the calls and they would be filtered. Now you could argue that this dropdown arrow is not that noticeable but that's okay We're okay with this on this particular view because in general we were anticipating most people not really needing to filter by calls and messages and voicemails they were just gonna have the ability to just scroll through and if they wanted to do that they could very quickly just tap and change it but it didn't need to be really prominent and call it out in a big way like the way the Amazon or the categories of the t-shirts for the Nike app were. So in this example on the Shiplify responsive web app someone at a manufacturing plant say Rigid Tools here They wanna ship all of their tools from Dothan, Alabama to The Home Depot in Cincinnati and they're looking at all of these carriers and these trucking companies that could possibly handle this delivery for them. As you might guess, shipping logistics, when it comes to big transfer truck, big trailers and big shipments that are going all across the country, that can be quite complex. So when you're trying to find someone who can handle the type of products that you're shipping, there's lots and lots and lots of detail that goes into that. So in this particular example, there are these guides that the carriers provide there are different types of Modes, there are are Sub Modes, there's Terms, whether it's Prepaid or Collect, all of this information that goes into these different shipments a lot of it is hard to understand unless you're talking to a subject matter expert but you can see here it needs to be extremely clear in terms of what they're searching for because most every detail here is highly critical to the type of price that they'll get some of it might be hazardous material there's just so much information that has to be listed here. Since this is a responsive web app we also have to put all of these filters onto the mobile screen. Over here on the mobile version you can see I've got all of these same filters, Service Mode, Sub Mode, Date and Time, Terms, Equipment, we've also got things like Hazardous Material, all these different line items adding a secondary line item, like this is form within a form within a filter within a page and just tons of information. I wanna point this particular example out because this is how we're handling the filter system we have this huge button here We want to make it unmistakable like Filter is right here and tapping this Filter button is going to trigger this entire view and this entire view is really what happens in this full left rail system. Now I do have two different design styles and this was designed back in 2014 so looking back I probably would not have two different styles for mobile versus desktop I probably would have stuck with this one style but regardless of that you can see that if you imagine this, this very easily turns into a mobile screen just a full width mobile screen. So a lot of times when you're transitioning between desktop and mobile, all you really need to do if you're not going to break out any of those filters is just provide an access like a button like this that would then trigger that same view. It's not impossible to take a left column and then hide it on a mobile device and then call it and make it visible when you tap on a button to bring that into view. It's a great way to kind of go between that small screen and that large screen especially if you have the same layout in the same view, sometimes you might change the type size depending on mobile screen or not but at the end of the day you can take a really complex system like this and have those filters and as you add those filters if you want them visible we're showing, these filters are the ones that I've selected there's a Sub Mode, a Service Mode, there's a Deliver Accounts and so you can actually X all of these off without going back into the filter so we're trying to provide an easy way to take these off and to see what I've I've selected because all of these are really important. So again, this is highly subject to the type of information that we're designing for but you can see like just from a visual perspective I want these filters to be kind of toned down I want them to sit in the background and then the search results they have these white cards that are lifted off of the background so I have this kind of juxtaposition between background things that are touching the background are filters, things that are sitting on top of the background are search results. Here's another example on this screen where I've got all of these, as I choose the different modes over here they're going to pop up and then I have the ability to either change them here or I could change them here. And then there's also the option to save this but I want to point out that the most important parts are kind of there they're brighter than the rest, we've got our search fields here and then we've got our search results here we're trying to elevate that content above the filters so everything is very clear 'cause there's lots of information that's going on here. And lastly, I want to pull up this babycents project again this was one of those shopping comparison sites so if you're trying to find a stroller this site would bring in all those strollers and bring in the best price and then it would work from kind of an affiliate link model. So I was doing this was a was a pretty complex project and we're designing from scratch. So I designed wire frames first and I'm just focusing on layout and typography that's all I'm looking at and I'm not even worried about doing a nice custom font or some kind of alternative font. I think here I probably just used San Francisco I'm putting a border around everything because the law of common region will kind of Trump the negative space so anytime I'm doing a wire frame I'm typically going to put a box around everything just so it's so explicitly clear it doesn't make for the most amazing visual aesthetic but when you're designing these wire frames it just kind of helps provide that context for what's inside of what border. So you can see here I've got the search field and then I've got Filter and Sort buttons so basically all of this area is manipulating the search view down below whether we're filtering or sorting or we're changing the view from a list form to a grid form It's all changing that content so I wanted all of this to kind of be in that same little box area and we're showing these many results and then I've also got some alternate views here so if this is the list view, this was adding to a watch list and getting a price alert but I also realized that this might not be that intuitive for everyone so I provided them an additional layout over here that really just shifted these buttons from the side down underneath so we had a lot of conversations about whether or not someone would know to add to watch list or not. So I gave them two options that they could experiment with. And sometimes it's necessary if you're unsure of what's going to perform well or if someone's really going to understand the icons or not you could try one that's simple but then try another one that is a backup that is kind of the safest bet. and so right here a Filter is going to trigger this list right here, we've got Categories, Top Brands, we've got Price Range, Color, Sales and Deals you know, there's huge unending list of filters are all available right here and then Sort, we could have put a Sort inside of here but we chose to do Sort as its own small item so we we're just sorting either alphabetically or by price, et cetera, et cetera it's not really that important to have all the information if we know we're going to use some type of smaller overlay instead of a huge filter popup. Looking at these side by side this mobile view is the exact same content as this left rail right here. It's not impossible to put huge amounts of desktop information into a mobile screen especially when you're kinda' transitioning from on this screen we have it all laid out and you can see here Sort functionality for sort stays exactly the same Whereas Filter as you get smaller Filter is gonna pop in besides sort and we'll give you this access to this new layout and then going even larger we have that same rail it's just a matter of now we can fit four wide versus two wide but that Filter and the Sort is kind of all staying right in that same area. So there's going to be lots of different possibilities depending on what you're designing for you might need a really simple sort and filter system kind of like that Smart Line project or you might need something a lot more complex where you have it exposed at all times or maybe it's something like the Amazon or Nike where it's broken up into different pieces and you can have access to part of it that's just shown by default or when it's tucked into a tiny icon and everything just kind of comes up into its own screen. For sorting and filtering homework I want you to add that functionality to your fictitious app If possible I realize that depending on the content that you might've been working with already it might not be possible to add a sort and filter to what exists so you could take information from any of these designs that I showed you before I've got all of those download links listed down below so you're welcome to grab any of that information or take screenshots from Amazon and you could kind of almost create your own little e-commerce search results if you don't have proper content to work with because if you don't have that information to work with it's going to be really challenging to do an exercise like this. So once you have that information to work with I want you to design a filter and sort button or filter or however you decide to do it. Most of the time you're gonna want that button to be kind of in that secondary or tertiary ballpark where it's close to the background color it's very clear that it's a button but it's not standing out as a primary call to action and so once you have that designed I want you to make three different variations of that system. I want you to do one that has a mobile view that uses an inline filtering system similar to either the Nike categories or maybe even the Amazon example where everything's kind of listed out and you swipe or some kind of small control panel where it's all listed with the content altogether. Secondly, let's use a simplified version of that where a simple button or an icon triggers that mobile view. And then third, if you're up for it, you don't have to do this but I think it would be really cool if you design a big version similar to the Shiplify or the babycents layout where you did have a lot of filters either on the left rail maybe they're all at the top depending on the content that you're designing with to show how it could work two different mobile versions and one larger desktop version and keep in mind the content is more important than the filter. So make sure when your colors or your modules make sure that your content is sitting further forward by use of more contrasting colors and then some of your other stuff can kind of sit back with lighter grays and things like that. Just make sure that it passes contrast accessibility but get started on that filtering and sorting homework and I can't wait to see what you come up with.


=== FILE: 7-9 modals_filtered.txt ===
------------------------------
﻿- Modals are also known as dialog boxes. And they create a mode that disables the main window, but keeps it visible. And you really have to interact with a modal before you can return to that view that you were already looking at. So this avoids disrupting the flow on the main website or the main app. You have something that requires immediate attention and you throw in a modal or a dialog box. And there's different variations of the modal window. But in general, a modal is typically something that comes into view and then it requires some type of attention before you can continue. There are also non-modal dialog boxes which we'll cover a little bit later, but I just wanna kind of set the stage for what we're dealing with here. Modals can be thought of as quick conversations between the software and the user. It's small, it's contained, but it's kind of like an interruption. It's like, hey, I need to ask you this question real quick and I need you to tell me the answer before you keep on with what you're going on to do. Sometimes it's highly relevant to what's happening and other times it might be, your battery is low, you want me to go into low power mode or do you wanna dismiss it? And that might not be related to what you're doing, but it is related to using the phone. So there can be different variations of that modal window. So I've got a little sample modal here. I've just got some really low fidelity stuff in the background, almost like a video management system. And then we've got this modal that has popped up, assuming I have clicked somewhere in this background area to trigger this thing. Like, I'm trying to delete a video. So let's take a look at the anatomy of this full modal. So number one, I've got this card shaped background that contrasts with the content and demands attention. So enough contrast. Sometimes this can be lighter than the background to come a little bit further forward. Sometimes there's a shadow. There can be different treatments but it needs to have that visual contrast, the way it comes forward in front of the content. Number two, we've got a direct and clear title informing the user of exactly what will happen if they are going to proceed. In this example, the user is deleting a video, so we're asking: delete this video? Number three, this is kind of an optional close button. You might see this more often on websites, more so than you would in a mobile device. But you do have some modals that will have this dismiss button, and so this is like a little close icon in the top right. And it gives the user a way to escape that modal without taking action. This should also be triggered when you hit the Escape key or if you click somewhere on the background, and it's gonna be really similar to number six right here, the Cancel button. Hey, moving right along, we've got our fourth section here. This is going to be a direct and clear body of text to provide more context on the action. It's gotta be really simple, really succinct, and your words have to be very, very articulate and well-written. Deleting this video will permanently remove it from your library. This action cannot be undone. If that's not the case, you know, you could say: deleting this video will archive it and you can undo this action later. That's a much different message and a much different function, even if the design is exactly the same. So you have to be really careful with what you put as your copy inside of this. And the better you can get at writing copy like this for interfaces, the better UI designer you're going to be because UI design is 90% typography and text. And so, get good at typography and get good at writing UI copy. All right, number five here. We've got our primary call to action with button copy that clearly answers the question posed in the title of the modal. So we're seeing the title: Delete this video? Glancing down here: Yes, delete. The worst thing you can do is say: canceling this task will result in some unknown consequences, would you like to cancel? And then there's a cancel button, but also a cancel button. And it's like, what am I... Am I canceling the modal or am I canceling the task? So that's where the copy comes in and you have to be really, really clear. And sometimes you might have access to someone who will write this copy for you, but I strongly suggest learn to write copy like this and constantly try your hand at it, try to get better and try to make it as clear as you can. Because this is going to be a really, really big deal when it comes to intricate interfaces. And you know, that copywriting and naming things, that's gonna be just really, really important. And the more you do it, the better you're gonna get. The better you get at it, the better you'll understand. And just, you'll be able to communicate better in general. So definitely practice that. All right, number six, we have our secondary call to action that allows the user for a clear way to cancel this action. So it's very clear, there's no confusing language. Delete this video? Yes, delete. Or Cancel. You could also put No, or you could put No, cancel. There's different things you could do here, but you wanna be really clear with you actually do write for your copy. And then lastly, number seven, we have a transparent overlay that keeps this main content visible, but it's inaccessible during this modal state. So, most of the time if you click the background, click the x, hit Cancel or hit the Escape key then that will go away and you'll kind of reverse out of that action. And this is technically could also be called an alert box, but this is kind of the anatomy of a well-designed modal. It's gonna have all of these different attributes. So this example is kind of like an alert modal, so alert modals are going to convey important information about the state of your app or device. And it's going to request feedback, kind of like the low power mode. Do you wanna go into low power mode if your phone battery goes below 10% or do you wanna dismiss and not worry about it right now? It's also important to know that if you're on an iOS app and you're designing and you need to request notification preferences, kind of a small caveat here, but if you look at the Quibi app, it's a good example of asking for notifications before you really ask for the notifications. Because once you trigger a notification request, can I send you notifications, the app actually cannot send another one of those. You have to tell them to go into the settings and turn it on that way, and it's a lot more difficult of a task. So a lot of times, a lot of times apps will design a pre-alert box modal that will be a little bit more custom designed, like the app flavor, and less iOS. And it will ask: hey, do you wanna turn on notifications? Do you wanna allow it now or maybe not now? And if you hit Allow, then they'll trigger the notification. That way you have a much higher chance of having the user actually accept it. And if they say Not Now, you don't trigger it. That way, you can call it later, because you never actually called that one trigger. So kind of a subtle nuance thing there with iOS permission requests. At least at the time of this recording, you can only ask them one time allow for kind of a free question. Sometimes it's helpful to design a custom one that preempts that actual main call for that function. There's also an action sheet modal. So if you take a look at this screen recording from Safari on iOS, you can see I'm gonna tap and hold this little icon down here on the right, so watch what happens. We've got a small modal that comes up here that is more contextual. So I can tap up here to dismiss this, I can also cancel this, but I can also close all of the tabs. I can close this tab, I can create new tabs. So it's more of a contextual modal based on something that I have triggered with my own action. So that's why it's called an action sheet, because now I've got a sheet of actions that are contextual to what I was already working on. So in this case, just tapping that icon is typically going to go into the view where you can see more tabs, you can create new tabs, you can close them. But this is just kind of a quick way to have quick actions. So it's not quite as in your face as an alert. This is only gonna show up when you're actually trying to take action. So whenever you need to tuck multiple actions into a single action, this can be a really helpful way to do it. This is a standard text version. You can also design your own custom action sheets as well. You've probably seen the kind where you tap the bottom and things spin out. Sometimes those aren't that well-designed, so just be really careful with the actions that you tuck into other buttons. Sometimes it can be better to have all of them out, but this is an action sheet modal if you need it. We've also got these little popover modals. Check out this cut, copy, paste, or replace. This is kind of like an action sheet, but it's definitely popping over some type of area. Now this example is selecting text and you have this little popover to manipulate this text. But there's also other types of popovers that are kind of in the action sheet popover ballpark. And it's not highly, highly important that you critically get the name of the exact thing that you're designing. Sometimes it might be more of an action sheet, sometimes it might be more of a popover. You can kind of use those terms interchangeably and it's not gonna really matter that much. So let's take a look at this one on the Notes app. Let's use this letter A right here. We're gonna get a little formatting popover here. So I can still interact with all of the content up here, but I get this popover that I can use. It's almost like a new mode. It's definitely a modal because it gives me... It's almost like edit mode, but it's not quite the same as an alert or an action sheet. It's kind of like a popover modal where you can manipulate something while it's in context with the original layout and content. Here's another example from the Calendar app on the iPad. You can see, if you hit this plus icon, you get this little popover modal. So this would be considered a popover, but you could technically... You know, it could technically be an action sheet because you are creating an action. But there's different things you can do in here, so it's definitely... Modal is a great name for this, because it's a little modal. But it's popping over this little plus sign. A lot of times a popover would have an arrow indicating where it came from. So it talks about action related to that specific area. The same app on a mobile device wouldn't necessarily always have that contextual popover. A lot of times you might need to trigger a full new modal that becomes a new screen in the context of the mobile app. So let's take a look at this one. Whenever we go to the add icon in the top right, instead of triggering that popover with the little arrow, we're gonna trigger just an entirely new view that brings in the new event view. So all of that same information is there, it's just in the context of a mobile screen it doesn't make sense to point an arrow. Sometimes you just have to change the view completely. And that's another form of a modal. So thinking about modals and how you can use information that's tucked into a smaller experience, whether it's sorting and filtering modals or modals where you have different actions or the ability to control the content on the screen. It's a really great concept to think about layering interactions. A lot of times if you're... Especially on mobile. Especially on mobile you'll get crowded UI and you're trying to put too much information into one area. Sometimes it just needs to be condensed into a full new view. And that way you can tap the filter button and have access to all the filters instead of trying to put them all on one screen. So it's just always helpful to think about, okay, I can put these five actions inside of a modal, versus trying to show them all at once. So sometimes you can clean up your interfaces, it can enhance the experience, it just depends on the context of your project. Last thing I wanna cover here are interstitial screens. Kind of a funny word, but if you think about interstitial, it really just fills a gap. Bridges that gap between one flow and another. So if you look at this example, someone has signed up for Slack, and it's asking to check the email. So it's not really apart of the sign up flow, it's not really apart of the using app, it's an interstitial screen that is kind of like a modal that's filling the gap. And most of the time, these interstitial screens would exist in this kind of full screen context. Maybe it's a chance to bring in branding. You know, we've got an illustration, we've got the logo, we've got a big purple background. It's one of those screens that can have a little bit more brand design that goes along with it. So, for your modal homework, I want you to consider designing up to three screens, again, kind of in that fictitious app genre, that ballpark, the thing that you've already been working on. Hopefully you've got a nice little project coming together now. If not, and you just wanna do something completely different, that's also fine. But I want you to design either a permission alert similar to that Quibi example where you're asking for permission but it's not the true system permission. It's kind of like that pre-request that's like, I wanna get permission to ask that question that I know I can only ask once. Your second option is to design a custom action sheet or popover, some kind of contextual type of action that might be associated with your app. Whether it's... Maybe you tap Post and you get the option of text, or image, or video. Or maybe there's some other type of little popover contextual modal that you can design that it doesn't really necessarily come across as an alert, but it's more of a helper action sheet kind of thing. Again, you can look at some of the examples and pool some reference for what you might wanna design. And then your third option would be designing one of those interstitial screens. Imagine that you've walked through signing up for your app and then you've got, you know, your activity and other designs over here. But right in-between, maybe there's the check email screen and there's a chance for more color, more branding, something a little more fun. That's a third option to design for the interstitial kind of mode. So, feel free to design all three of these or choose the one that you're digging the most. But either way I look forward to seeing what you come up with, and best of luck.


=== FILE: 8-1 no-stress_filtered.txt ===
------------------------------
﻿- It can be quite overwhelming to get started on the visual design of a new project. You want it to look so good, but just sometimes the first thing you put down, it's just not good. And I still struggle with this. Even when I get started with a brand new project, you have all those hopes and dreams and ambitions of just creating the most beautiful design you've ever seen. But just often times just, you're hit with blank canvas syndrome, and you don't like the way things look. So it can be a bit of an emotional experience, to try really hard to make good design, and have a strong opinion that's just coming up short over and over. And sometimes good design can be subjective if you aren't fully aware of the full project's landscape. You know, all the things that are involved. Including, but not limited to, the team, stakeholders, the brand, the desired look and feel, so if you just start from scratch with a blank canvas, without doing any research, or any searching for reference material, or asking questions about what it should look like, you're gonna find yourself kind of trapped in a corner. This is an easy to follow process that sets you up for success, from the very beginning. It arms you with the necessary information to make good design decisions on behalf of everyone involved. So there's four basic steps to this, and the first one is ask questions. Ask lots of questions about the task that you are solving with design. Anything that you can't confidently explain to someone else about the project you're designing for, you're not going to be very well equipped to tackle those design challenges, until you're able to do that. It's your job to fully understand and to know what assumptions you're making, before you design anything. So make sure that you ask lots of questions. You also need to know who the stakeholders are. And that's just a fancy term for anyone who has skin in the game. So the CEO, project manager, creative director, is it a client, is it one of your teammates? Anyone that might have an opinion on the design, and might have any influence on the outcome of the project. You also need to know who makes the final call. Do all of the stakeholders agree on the specific problem they're trying to solve? And does everyone's opinion factor in to the final decision? Or is there one person that says "Yes we're going with this." now a lot of times you will have to present to a group, or present to multiple people, but it's really important to know who has the final decision, and who among the team has a really strong opinion about the design. And it is your job to kind of pull that out of people, during the initial discovery meetings, and ask "Are there any colors that are off limits? Is there anything that is done now, that you would like to see differently in the future?" You know, just ask those questions, ask as many questions as you possibly can, and try to saturate your brain with all of those problems, and all of those opinions that are a part of the team's perspective. That way you can be fully armed when you're going into that blank canvas, you have a lot to work with, and a lot to stay away from, based on all of that research that you've done upfront. Number two is gonna be determining design direction. Assuming you've got most of your questions answered, you can start thinking about the design direction for the project. This is going to include, what have you learned so far, that can help you choose a typeface or a typeface style? Do you need something ornate with serifs, or do you need something big and impactful, or maybe a friendly, geometric san-serif. You know, research the different typefaces that there are, the different type styles, and see what kind of adjectives they evoke, and is it a part of that direction, that you discovered in those initial questions? Or even your own personal opinion. Is this the type of project that would really benefit from really big, bold typography? Or is this a project that would benefit from a script, or just whatever those questions that you might ask yourself about the typography. A lot of times choosing typography is gonna set the tone for the entire project. So it's good to experiment with a range. It can be three typefaces, it can be 20. But when you get ready to present some options, you know, limit it down to three or four different typefaces, ones that you would be excited about using, and kind of, maybe you mock up four different versions, of that in four different typefaces. The same design in four different typefaces, can all look really different. Number three is gonna be focusing on components instead of the entire design. So if you're designing a marketing website, for example, you might focus on just designing the navigation and the header background. Maybe you design what may be a little image, and a title and body copy lockup might look like. What might the video thumbnails look like? Will the play button be in the middle, or on the bottom right? What kind of color scheme would be, if it was like a full background color footer? All these individual items, you can design, kind of in abstract, to get kind of a look and feel for the way that certain treatments might look, and you can present that in abstract. So it's not like "No I don't like the home page." or "No I don't like that, no I don't like the way that interior page looks." it's really about, you know, starting those conversations. And that leads me to number four, have conversations over presentations. Now you are going to have to have some type of design presentations. But if you can lead the client or the teammates into more of a conversation, about the design, versus a giant presentation, where you haven't seen anything, you don't know anything, but here it is, I'm unveiling my beautiful design, and now you can react to it. That's not really the best way to present the designs, and it's not really the best way to get started on your designs either. So if you can have your design experiments, and the components that you're kind of weaving together, if you can present those in a way, and you can set the expectations that you're saying, "Okay look, we're gonna have a conversation about this. There's not really anything to approve, there's not really anything to give the green light to, I'm just exploring a few different options. Here's something that looks like, you know, friendly, here's something that looks this way. I'm experimenting with these different colors, you know, I just kind of wanna get your reaction to the way some of this is feeling. If there's any that are just completely like no I don't like it at all, you know, let me know. You're not gonna hurt my feelings, I've just designed a couple of different examples, for different directions or styles that we can take." Or maybe the thing that you've designed has really focused on one direction, and you just kind of wanna get a response. Like this isn't the design, this is not the final design, this is just a possibility of where it could lead. So I just wanna get your gut feel on how you would imagine, how would you feel if this is kind of the form that things started taking. So you're just getting little tiny buy-in, with the conversation about the design, versus "Oh my gosh I've spent three weeks designing this homepage, I hope you like it, fingers crossed, big unveil." So I like to present early and often, and just slide in those conversations, maybe once or twice, sometimes three times a week, depending on the size of the team or the project. But those are the four steps, so let's dive into some examples of how I've done that in some of my projects. And hopefully how that can equip you to work for yours. So I've shown this FibreStream project before, this is the final website that we ended up building, and now I wanna show you the sketch files that I actually used to show the, kind of, first off, kind of element collage user interface component map. For the first presentations. So this was actually what the website looked like, when they contacted me to redesign it for them. They had this FibreStream logo with kind of this white swoosh through it. And we had lots of conversations about this project. And I even gave them a keynote presentation of other websites that I copied and pasted, and said "Here's the, you know, nike.com website, here's adidas.com, here are a few other examples of different types of site," and I'm trying to get a reaction. Like what are you kind of leaning towards here? 'Cause here are my thoughts, here's where I'm thinking we could take this. What do you think about that? And so we settled on, kind of early on, like, what if we created the Nike of internet service providers? Or the Adidas of internet service providers. And kind of give it that performance brand, kind of feel. And so this was what they had, and they agreed on that direction. And so I actually started off by experimenting with this font called avant-garde, which is actually the same exact font that the Adidas typeface is set in. So if you take the lowercase, and you do Adidas, then there you go, that's the Adidas logo right there. So right off the bat, with the typography, I'm trying to evoke that Adidas feel, like this black and white, and these big letter forms. And I'm even attempting to kind of redo their logo, because I think this could use a lot of work, could be a lot more simple. Think about the Nike check, or just that simple Adidas word mark. So I'm just exploring, what if their logo looked something like this? Or what if we could shorten it? What if we had their packages, where there was a giant number? What if we used these little arrows? I'm really just designing random elements, and I'm looking at different color combinations, logo combinations, I'm pulling in some reference material, for like search, big search fields. I'm even playing around with like a possible little header. Like a little navigation header. Maybe a rollover state. Playing around with some random advertising looking modules, where we have this huge text. And I'm really using what they already had, as their packages, and some of this information, I'm looking at all these building photos. And so this was one of the first rounds, where I showed all of these different options. I tidied it up a little bit from this part. Basically I took all of this, and then I put it into a little bit more of a tidy version. Where I took all of my favorite elements, and I kind of cleaned it a up a bit. And so I'm just showing the possibility of doing these big call-outs, they had different internet package options. You know, you could tell, this could technically be a part of a website, but all in all, this is not a singular website. This is, these are just a bunch of little pieces of a possible website. And that makes it a little bit more stress-free, knowing that you're not really locking in to a final design, of a big website. You're just throwing stuff around, you're having fun, I'm not creating components, I'm not worried about accidentally using a black versus a charcoal, or really, I'm not trying to track all of my gray colors, I'm just, really just having fun, exploring, no stress, this is not the website, I'm just drawing little pictures of what it could possibly look like. With an informed direction, knowing that I needs to have this kind of, fun, performance kind of feel. I knew that a black and white, kind of stark, simplistic color scheme would look really nice, and they have the orange as their existing brand color, so I know that I can punch that in. So now I'm just looking for typefaces, and type treatments, and ways to handle little different components. And that's really what this is, this is a playground for trying to figure out what if we have something that looks like this? Maybe this is the rollover. What if we create like a fun grid of different buildings that have been upgraded? And I'm also trying to provide a few different typography options here. So we've got source sans body copy, with avant-garde headline. Or maybe we use avant-garde for everything. Or maybe we try this action condensed headline which could also be kind of sporty. And so eventually we settled on this, and we settled on this kind of big, in-your-face kind of treatment. And then eventually that culminated into something that looked something like this. Now we did end up changing a lot of this stuff out, it wasn't fully final. And I think we also ended up putting this on the right side, instead of like, down below. But a lot of this emerged from those experiments, and from having those conversations. This particular client had a very strong sense of what he liked and what he didn't like. And sometimes that can be tricky, to have someone who's really opinionated, but if you're able to get in at the very beginning, and have them become a part of the design process, then you can win them over, and it's not like, you're not tricking them, you're just making them a part of the design process. And you are leading them through that process, which can be very messy, especially if you go two, three, four weeks without showing any design. Then you can slowly build trust, and you're making decisions along the way, and checking in, and it all starts with those no-stress design experiments. Here's another example from a long time ago, I worked on a project for the Dr. Phillips Center in Florida. This is kind of a possibility of a header, of the way the website could look. So I'm bringing in some of the imagery that they already had. They also had a pretty strong brand guidelines that they were working with. So they already had some of their typefaces that they wanted you to use, so I'm using their typeface. But I'm showing maybe this could be, you know, two different shows on mobile. Maybe we bring in a grid of attendees on here. Maybe the navigation looks like this, across larger screens, medium screens, smaller screens. And maybe we bring in this pattern for the rollover. So again just exploring, it's not a huge stressful endeavor, I'm just throwing things around, trying to make it look good. Maybe this is a block quote, with their pattern back here, showing more possible rollovers, more possible form fields, or search displays. A lot of this didn't even make it necessarily into the final product, but it kind of just gives that feeling of what's possible. What could this possibly look like? And you might find yourself with a client or a team member that's just kind of nodding like "Yeah I can see this, totally working. Like maybe not this, but definitely that." and you kind of, by process of elimination, get yourself, you're trying to find your way along the direction. You yourself are trying to get from point A to point B, and you're trying to figure out where to lock in. And then once you get those conversations, sometimes it only takes one conversation, sometimes it might take two or three, maybe multiple. But once you finally get it locked in, then you can exploit all of those designs that you've been experimenting with. And when you find something that really works, you can really start to exploit that design decision, and turn it into that full-fledged project. Here's another example, of a project that I worked on called 12 Stone. Again, I'm just bringing in a big navigation, the possibility of overlaying the typography on the image, playing around with different background colors for the buttons, maybe button shapes. And really just trying to draw out some conversation. Whether it's about the typography, or the treatment of the header. Maybe we have these overlapping panels. You know, this is not a full website. But we're trying to just kind of mock up. Okay, maybe this is what it looks like on a horizontal type of a layout. Maybe this is what it could expand into on mobile. And maybe some of these are some of the colors. So just kind of playing around with patterns, and overlays, and these drop shadows. And this actually ended up being something that they were really into, so we brought this as a big part of the final project. But then even, you know, bringing some of that into the background, of the possible mobile navigation screens, okay we've got our unauthenticated version, we've got our authenticated version. Maybe this is what it looks like when you expand search, and then kind of popping that into different fields on the mobile devices. So really you're just kind of painting this picture of what could be. Not this is it. You're painting this picture of what could be, and you're starting those conversations instead of having a big presentation. So for your no-stress design experiment homework, I want you to design a small concept for someone that's like a dream client of yours. And do you best to answer all of those no-stress process questions. Like, I know you can't ask questions from your dream client, unless you happen to have a friend working there, so you have to make some assumptions, and educated guesses, because you won't have all of that information and that data but you can use some of their past projects as some indicators for, okay they've used these colors, they used these typefaces, so how can I interpret that into like a, maybe a marketing campaign for them, or a mobile app, maybe it's a utility mobile app based off of their brand. Just something fun that you're really excited about, that could be really impactful. And secondly, determine the design direction. Is it gonna be kind of exactly existing from something that already is out there, or will you take a different twist on it, and integrate some new concepts, for this particular project? And then focus primarily on just some key components. You don't have to design a full app, or a full website, just design the possibility of what that could be. Maybe it's a header, the navigation. I've got links to some of those examples that I showed previously in the video. So just pick out those fun little components that could kind of start to paint the picture of what could be. Now later on, if you wanted to turn it into something a little bit more fully-fledged out, that's totally fine, but for right now, just keep it loose, and don't worry about components, don't worry about naming layers, unless you just want to, just to keep yourself a little bit organized. And then once you're done, write out a paragraph or two that explains the decisions, based on the information that you gathered in steps one through three. Like what adjectives are you trying to evoke with the design? And what are some of the key components that you've designed out? And what are some of the assumptions that you've made about the typography and the color, based on some of the reference material that you saw from the existing websites or apps? If you've never written out your design decisions like this, it can be challenging, but don't let that stop you, just lean into that uncomfort, because this is gonna be a huge part of selling your designs to your clients, to your teammates, internally, wherever you're at, you're gonna need to be able to articulate those design decisions into some form of communication. And some of these no-stress design experiments are the perfect place to do that. So I look forward to seeing what you come up with.


=== FILE: 8-10 pricing timebolt.txt ===
------------------------------
﻿- To dive into pricing and getting work, I'm really focusing on this from a freelance, independent angle. I've been freelance or independent, really, the better part of a decade, and so that's what I know the most. I've never held a full-time position with a design, technology company. Definitely considered it, but I've worked hourly, I've worked with daily rates, weekly rates, and I've worked on project rates, and there's always been negotiation. I've definitely made some really bad decisions and I've made a lot of mistakes with money. So, I'm going to start off here by referencing an article I wrote some time ago. A guy emailed me and asked me lots of questions about money, and how to deal with clients and all that. So I'm gonna reference that as I talk through these things and give you a few other references for books and articles, and other ways to get started. If this is something that you're interested in, I also wrote a book, I think I wrote this back in 2013, I was writing a book called "Freelance Fire" and it was like a personal journey, just a personal documentation from my very first freelance project up until like 2013, so it is seven years old or so, and I actually never finished it, I just kind of let it fizzle. But it takes about 45 minutes to read. I'm gonna link that below as well. Without further ado, I'm just gonna jump into some of these questions, and, hopefully, this will answer some things that have been going on in your mind, let's get started. All right, number one, how do you estimate the amount of money you should receive for a project? By number of screens, the content, or what? I would start this off by asking the client, when do they need the work finished versus how soon can I, realistically, complete the work? In other words, is this a rest job or is the timeline a reasonable one? If you're estimating a project based on a fixed price, you also have to have a fixed timeline and a fixed payment schedule. It's not fair to you, as a service provider, as the designer, to provide work on an indefinite schedule without a definite payment plan. Not only do you lose money by spending unaccounted time on a project, but you lose motivation, you might start to resent the client, and you lose other opportunities to pursue the projects that could be scheduled during your unaccounted time spillage. So, if you estimate the work to be two weeks of heads-down design, you still need to factor in client reviews, Google Hangouts, Zoom, or if you can even meet in person. Although, with social distancing, maybe you're not doing that. So I like to factor in at least a day or two for presentations, maybe every week presentation and revision, and then have the client provide written feedback to solidify what was discussed during the meeting. So, you're gonna need to lead this processes. Otherwise, a client will just do what comes naturally and they'll start saying, what if we did this? What if we did that? Can you try that? What about this completely different concept? So, if you don't have some type of process in place, you'll start to squirm in your chair, unsure of how to deal with the feedback and this mountain of unexpected work that the client is proposing. So you have to take charge of creating the scope of work that you're going to produce, before it gets out of hand, and, honestly, these are all honest questions, so be prepared to tell him or her that it's out of scope or, alternatively, you could do the extra work, but it would require a change order or a change in deliverables, change in price. So, sometimes you can, oh yeah, we can do the app icon, but that's actually gonna take me another week, so that'll be another hundreds or thousands of dollars that you would charge to do that. So just use your best judgment when handling those types of use cases. Sometimes you can create some really high value by throwing in a little extra work on top, but let it be on your terms and not theirs. So, before you begin a project, make sure you take the lead as a project manager clearly outlining the timeline, the scope, the deliverables, the payment plans, et cetera, otherwise, you'll have a never ending spiral of emails, time wasted, and possibly more. You'll end up making exponentially less money than you originally thought once all of that starts to happen, once all that time gets sucked into a vacuum. So the number of screens might be a good starting point to figuring how much time it'll take you to complete the designs, but sometimes a client might be more curious about your hourly rate or if you prefer to give an estimate for the project. So think about it from the client's perspective. If you were hiring a designer to create a certain number of screens, would you be willing to pay an hourly rate without having an idea of how long it would take? So, whether you're billing hourly or on a fixed rate, you're gonna need to come up with a realistic estimation of how long the project will take, and your estimations will probably suck at first, and they'll get progressively better as you gain more experience. So it's a good idea to start with some smaller projects. Maybe one to two weeks at first, so you don't completely mess yourself up by doing a horrible job estimating a three month project with a fixed rate, when it actually takes five or six months. I've done that before and it totally sucked. I'm not sure about design wages everywhere outside of the U.S., but in the U.S., hiring a designer, it might cost you anywhere from $15 to $20 an hour, up to $150 to $250 an hour, maybe even more depending on when you're watching this. It's based on experience, proficiency, and a good rule of thumb is, you're going to get what you pay for. So, I'd suggest thinking of an hourly rate you'd be happy with earning for a project, and then maybe use that as a multiplier. If you'd be content with receiving $50 an hour for a project that you'd estimate at one week or 40 hours, then you'd be looking at $2000 for the project. So, just be sure to think about how you're willing to handle revisions, reviews, et cetera, and if you're actually going to bill every single eight hour block of every day. So, you can kind of use your hourly rate as a multiplier. So it's like, okay, if this is a four week project, if there are 160 hours in those four weeks of time and I'm gonna be working 160 of those hours, and I'm charging $100 per hour, then on that, I might make $16,000 on that project, and then you need to start thinking about, okay, maybe I should ask for half up front, maybe I should ask for maybe a quarter of it up front, but, usually, I would always just start using that hourly rate as a multiplier, and then maybe that eventually turns into a weekly rate or a monthly rate and you're not gonna know what to charge until you try to start charging that. You can start at $100 an hour. You might want to start at $50 an hour. I've charged $15 an hour, I've charge 25 on up to 80, 90, 100. I've even charged $250 an hour before. But when you're paying for an hour of time, the thought of handing someone $250 for an hour of time, for a long period of time, that starts to feel like not that good of a deal. Because who just wants to just pay for an hour? You're not really receiving any particular value for just an hour of time, unless it's directly tied to... Okay, my app is getting designed, my websites getting designed and this is a cap of time. So, anytime I've had an hourly rate that was great for me, but it was pushing the boundaries of what was possible, ultimately that project ended up stopping, because it's not gonna be beneficial for a client to pay that much longterm, unless it's intrinsically tied to the value that you are receiving. So, ultimately, while hourly pricing is a great place to start, it's really easy to just do a low-ish to medium-ish, reasonable, hourly rate, and just do like that. Maybe we'll do up to 20 hours a week, I'll bill you every two weeks, and you kind of agree to some deliverables. That's a good starting point but, ultimately, that's gonna break down. Let's say there's a design project and I'm gonna charge $250 for one hour of work, it's just gonna be boom, and then I'm gonna charge you and we're done. There's another designer, who's gonna charge $50 an hour, for the same exact project, but they estimate it's gonna take five hours of their time. So, they work on it for five hours, boom their done, $250. So which one is more valuable? Assuming that they are producing the same quality of work. Well, the one that is working five times faster is more valuable than the one that's working five times slower. But it's the same price, so it's like, if I'm doing it faster and just as good, how am I making the same amount of money as someone who's doing it slower and doing a good job but much, much slower. So, at a certain point, the hourly rate starts to penalize the client if I'm slow. If that same project took me two hours, then they gotta pay 500, and if it took me four hours, they're paying $1000. So, at a certain point, the client is getting penalized for me going slow and being inefficient. But then I get penalized if I go too fast. So, I tend to not do as much hourly billing now. I used to a lot in the past, but especially if you're contracting with an agency or you're working as a contractor within another group and most of the billing is time-based, most of the time you're gonna be billing hourly. So, sometimes you might have to do that. But let me go on with the next question. Given that it'll be a fixed price payment, do you prefer payment at the end or by milestone? Well, this depends on a few things. How bad do you need the money? How much do you trust the client? Is this a huge expense for the client or is this a small expense for the client? Is this a huge project for you, or is it a small one, or a medium one? If you need money quickly, then you should absolutely ask for money upfront. This also serves as earnest money from the client that will let you know that he, or she, or they are serious about hiring your for the project. The project is not a project, until you have an agreement about payment or preferably money in the bank. If it's a small project from someone you trust, then you should feel comfortable doing the work, sending an invoice, and collecting payment afterwards. Sometimes, it might be also, they might be willing to pay you upfront, that's no problem either. Now, even so, you'll need an agreement about when you get paid. It's best to say, X amount due by X date, with no strings attached. Make it simple and straightforward. You and the client both need to know the payment plan. I've done projects based on the pie-in-the-sky estimate, which was verbally agreed to by the client, and I had no plan in place for deliverables or payment, or timeline, and I got most of the way through the designs, and the client became nonresponsive to emails or phone calls, I sent them the invoice, just kind of being like, well, I guess I'm just gonna invoice them, and never got paid, and I blame myself for not having a solid agreement in place. Now, granted, this is many, many years ago, when I was first starting out, and I just didn't know what I was doing. So the same goes for your design deliverables. Put in writing what you'll be responsible for, when you will deliver the final version, the final Figma file, this way there's no confusion over what the client is expecting and what you are planning to deliver. You can break up a fixed rate project into quarter payments, but it really warrants a discussion between you and the client. Again, communication is key, it may be a hassle for the client to write four different checks over the course of a month, instead of two or one, and, likewise, it could be a hassle for you to send four invoices, especially for a project with a short timeline. So, I mean, keep it simple, you might wanna do 50% upfront, collect 50% on the end. You can break it up however, and this is always going to be negotiable, based on you and the client. But quality clients should be willing to pay some money upfront. When I hired developers to build out little things for me, I will always pay them upfront if it's a project-based thing. I'll give them half up upfront and then pay them half when they're done. It's just an easy way to keep it organized and if someone is... If I'm hiring contractor and they're keeping hours, or maybe we have project-based rate, I'm gonna pay them at the milestones that we agree on. No one should be wondering when their money is gonna be coming, and if you have to do that with a client, then that's just not a good relationship. So, you need to pin that down upfront, before you get started. For a scrolling screen, which sometimes would be long, and you consider it as one screen or two? This question, I would say, I wouldn't tie your pricing or estimate to a general screen count. You need to think about it a little more contextually. So, one scrolling screen could take one day, or 30 days, depending on how many components are within the content. So, it's fine to call one screen or one section. But not to estimate it as one thing. You'll need to break it down into sections. I like to break it down into sections, even if that's gonna be one screen might have eight sections or eight screens might have eight sections. It doesn't matter how many screen necessarily. It matters how much content am I gonna be designing for, and just categorically going through, and listing our everything. Think about it even further, you know, do the sections, are they gonna need custom illustrations or icons, do you need to do any photography or copyrighting? All of these tasks need to be factored into your estimate and will, ultimately, add up it up to be one screen or one section. Maybe you need to discuss, are you gonna provide any assets, what is involved, ask those questions upfront, before you have to... Okay, yeah, I'm gonna design this, and then later you realize they wanted a 3-D rendering on the home screen, but you don't actually do 3-D rendering, so now you're at an impasse where you have to either say, yeah, but we agreed to that, but they're like, we wanted a 3-D rendering, and you have to make sure that you set that expectation upfront, before you dive into the work. Just make sure there's no gray areas in your communication with the client in terms of defining things. Iron out all the details of the content you'll produce, as well as the payment you will receive. How do you report your progress to the client? By email, or Zoom, or InVision App, how do you do that? So, I use mostly email for standard communication. For dates, progress, notes, meetings, questions, et cetera. Sometimes Basecamp for larger projects. Sometimes even bigger clients will have their own internal tool. Maybe we'll even spin up a temporary Slack workspace. I'm not a big fan of having open text message communication directly with the client from the very beginning. Unless it's a trusted client, who has earned the right to have direct access to me, and knows how to respect that. InVision can be good for showing prototypes, or Figma prototypes, it just really depends on your project. So, for me in particular, how fast do I work? One screen per hour, one screen per day? Well, the biggest thing to remember is that quality work takes time, no matter how experienced you are. I don't like give myself less than a full day to work on anything substantial, and it's typically better to allow two to three days, maybe even a week minimum, to work on one project. As you need to get to sleep on your decisions and get ideas about better treatments, implementations, et cetera, over that stretch of time. In general though, I do work very fast and efficient, but I also see that as being extremely valuable, as opposed to being thought of as efficient and cheap labor. This is where billing hourly versus billing for values comes into play, and I'm gonna link to a bunch of articles and books by Dianna Maul, who talk a lot about this, if you wanna dive more into the world of value-based pricing, which is definitely a good thing to start reading about and start learning about. Could you provide the number of screens and the amount of payment that you received? It would be nice if that was some magical design menu that everyone could pull from and grab prices, but, unfortunately, it does not exist in the real world. I don't mind sharing the details of any projects that I've worked on, and payment that I've received, but you wouldn't have a strong context for the scenario surrounding the deal for it to provide any real value. Even if you have a project and you ask how many screens, how much money? I wouldn't necessarily have enough information about your project to give a good estimate, and you wouldn't know enough about my pricing process for it to provide any real value to you, in terms of what are my expenses every month, then what am I striving towards, what am I trying to do? All of the clients value their hopes, dreams, and fears, and the designers hopes, dreams, and fears, and all of that comes into play, and you really have to figure out what works best for you. I can't just spit off like, yeah, you need to definitely be charging $75 an hour. I might be able to sit down with you for an hour and ask you a bunch of questions, and then make a recommendation. But just a blanket statement is hard to answer, and so you're gonna have to do that hard work of knowing, what is the lowest amount that you're willing to do the work for, what is your ideal amount, and what is your, like, oh my gosh, this would be crazy amount, if you were able to make that amount, and don't take anything less than this minimum amount, and, ideally, bump it a little bit higher, because, probably, you're short changing yourself. Brennan Dunn has a great course about double your freelancing. Double your freelancing rate. That's a great thing to look into as well. He writes a lot about pricing, so you could also check his stuff out. So, I'm also gonna include a master service agreement and an SOW template, statement of work, down below for you to check out, for you to use, and then, lastly, I just wanna talk a little bit more about the differences between hourly, daily, weekly, monthly, and even project-based pricing. I've already covered hourly, that it's a good place to start, but as you slowly increase. Maybe you start off $20 an hour, maybe you start off at $50 an hour, if you have a salaried position, maybe you break down your hourly rate from there, and you go a little bit higher. Maybe you come home and you work in the evenings for an X amount hourly rate. Maybe you don't do hourly at all. It's really up to you, and it's up to the client, that you're working with, based on how that's gonna work out. But I would always encourage you to experiment with increasing your rate little by little, and, I gotta tell you, as you do that, you will lose projects, I have lost so many projects because I quoted really high and I've even had people say, "I can't believe you would charge that for a website." Well, it's like, sorry, you know, I have charged that for a website before and if you don't want to pay, that's totally fine. So you might get insulted, but it's worth experimenting, because you could be leaving money on the table. If I am willing to pay someone $20,000 to create a great sound studio, set up lighting and audio, and I'm like, man, I would pay $20,000 for somebody to come in and set it all up, and get it all perfectly set up, and then when I go to hire someone to do that, and they say, ah, yeah, I could probably do that for like $5000, they just left $15,000 on the table. But, also, I might be thinking to myself, only $5000, maybe they don't do that quality of work. So, there's a really big psychological factor here. There's another great book called "Mindless Eating" and it's book about food and psychology, but it's really about psychology. I'd also recommend that book. But in the book, they talk about an experiment that they ran, where they brought people into a restaurant, and they gave group A one hamburger, and group B the same, exact hamburger, but group A, it was just like, standard hamburger, mustard, ketchup, whatever $3, there's your hamburger. Group B, they served it on a fancy plate, the menu said char grilled, artisanal bun, fresh squeezed ketchup, whatever. The fancy adjectives, nice design, nice lighting, but the same exact hamburger, exactly the same food. But at the group B restaurant, they said this burger costs $15. This one was like $3, I could be getting the details wrong, but it was something like that, and they interviewed everyone that came out of the restaurant, and group A, by far, I don't remember the exact percentages, but group A, by far, didn't have as many nice things to say about the burger than group B. It was the exact same burger and they had a lot of people in the experiment, and group B said it tastes better, that they would buy it again, and they enjoyed it more, and it was something like 30 to 40% better, overall, that group B enjoyed it. If you're charging more, then the perceived value is going to be higher. If you're charging less, the chance of the perceived value being less is there as well. So that's also something to consider. So, if you talk to a potential client and, in their mind they're thinking, we've got about $10,000 for this project, but then you come in, and without asking any questions, or fishing for a budget, or whatever, a good question to ask could be, what are you thinking in terms of budget? Is it something like $100 project, a $1000 project, or a $10,000 project? Or maybe you say, is this like a $2000 project, or a $20,000 project, or a $200,000 project? Sometimes you can draw out a little bit of information. Sometimes you can't, that's the tricky thing about pricing. So, it's just this constant experiment that has some tools that you can use, but it's also an experiment, and it's also based on how bad do you need that project? If you need something really bad, you don't have any money, then you don't have a lot of room to negotiate. You'll basically take whatever they offer you, and I've been in that position so many times. But then as you build up your own personal finance, little nest egg, and you have maybe three to six months expenses or more, then you have a lot more negotiating power. You don't have to just take that project right away. You can say, wait a second, or you could start talking about budget and the work, and you say, I'm really looking for something in the $10,000 price range, so I'm gonna pass on the $1000 projects, or maybe you wanna do it. You have a lot more flexibility when you aren't starving. So, when you're starving, you'll eat anything. But if you're planning a dinner out with some friends, and you're not starving, you might actually... You have a lot more choice available. You can plan like, we'll drive 20 minutes to the other restaurant, or maybe you order something and they deliver it with a mask on. So, you have a lot more choice when you're not starving and when you don't need something immediately, so that's another thing to consider. One more thing that I almost forgot. The best ways to get work. Let people know that you are available and that you're looking for X, Y, Z type of work. Post your work online to Twitter, Dribbble, Instagram. Make sure the type of work that you're posting is the kind of work that you want to get, assuming that you are looking for work. Don't post a bunch of t-shirt designs, if you're looking for mobile app design work. If your portfolio has a bunch of logos in it and you're trying to look for responsive web app work, then it's gonna be a little bit more difficult for somebody to look at your portfolio and say, ah, they know all about designs systems and components, and forms, if it just has a bunch of logos and photographs, that connections a little bit harder to make. You know, if I want someone to come in here, have an engineer and soundproof everything, and I look at their portfolio, and all they've done is install sinks and tile bathrooms, I'm gonna say, I don't think I'm gonna hire that person to come do that type of work. So, just put out that kind of work that you want to get. I remember back in 2008, 2009, I designed my very first iPhone app. It was just like a simple little three screen app and I remember getting contacted by someone at an agency in Atlanta and they were looking online at my portfolio, and they were like, oh, I see that you have mobile experience, we actually have a mobile project that we're trying to work on, and I was like, yeah, yeah, I do have mobile experience, and I might not have been the most mobile experienced designer, but I did have some mobile experience because she saw that project in my portfolio and that lead those conversations in a direction that allowed me to get that other project that I worked on with them. So, the more you put out, the more people are going to know you for that, and it's not like you... You're not gonna paint yourself into a corner. You could always pivot to something else. If you wanna start doing hand lettering, start writing hand lettering on an Instagram account. You can do multiple things. I used to get trapped into that mindset of, well, if I'm always doing this, then people aren't gonna know that I do that, and there's really not really any benefit to getting too limited in your mindset, because there is always going to be more work available out there, that you just are unaware of. You just have to continue to put yourself out there, find those connections, reach out to those people, be sociable online with people who work at companies that you'd like to do work for, or maybe you'd even like to join them. DM other designers and ask them simple or direct questions about what it's like to work there, or what's the interview process like at that company, and you can just start being friendly, and this is really a way to... Making friends in the tech industry is a way to build your network, but just not in a sleazy networking kind of way. You know, building friends, making friendships, being kind, that is how you build your network, and then when you do get hired by someone, make sure you do a great job. Make sure you don't burn someone. Make sure you're not a stick in the mud or a jerk, or just not fun to work with. Be kind and make every single person on the team feel like you value them and you respected them, and let people know what you're gonna do. Say what you're gonna do. Let people know why you aren't gonna be at that meeting. Don't just let people guess your status. So, the more that you can put good work out and good vibes out into the atmosphere, the more people are going to know you for being that type of person and doing that type of work. It's all connected, price and working together, getting work, it's just all connected. So, I hope this helps you and thanks so much for watching.


=== FILE: 8-2 low fidelity_filtered.txt ===
------------------------------
﻿- Okay, first of all, this is a highly debated topic in the design industry. You'll hear a lot of people say that wireframes are a complete waste of time. And then you'll hear others say that they can be really beneficial. And my opinion lies somewhere in between those two extremes, depending on the project. I actually prefer the term low-fidelity designs over the term wireframe, just really because the term wireframe has gotten a bad rap over the years. And it just causes a lot of unnecessary friction. So if I think of it as a low-fidelity design, then I actually think of it as the design, just a lower unpolished version of what it will be. Sometimes people will design wire frames that just have the bare amount of minimum text information thrown in there, just very scrappy, almost unorganized, and they don't actually look good, and call them wireframes. And technically they are wireframes. That's why I like to make really nice looking wireframes. So I call them low-fidelity designs. So by using low-fidelity designs, we can effectively remove the majority of decisions around typography, color, style and imagery. It gives us a standard kind of vanilla system to use as a default. So we can focus on more important things, like the functionality instead of decorations and kerning and line height and all of the things that are really important that go into user interface design. We just kind of save that stuff for a little bit later. But why would we want to do this? Why would we separate those concerns when they're all so tightly integrated? Well, here are a few key scenarios where the low fidelity designs and really focusing on layout and functionality, can be more beneficial than incorporating all of that into one. If your project is big and complex and there's lots of moving parts, well, you really have to figure out the functionality first, before you can actually design your interface before you can know where to put buttons, and if nothing exists, you kind of need a blueprint. Otherwise you're going to decide button treatments and radius adjustment in the same process while you're trying to figure out flows and functionality and the way things are gonna behave. And sometimes that can just be, it could just be kind of a clashing, type of decision making process. So if the project is big and complex, sometimes it can be beneficial to design in low-fidelity. Get everyone on the same page, stakeholders and developers, and we're all talking the same language, we all are communicating about... Okay. When a user uses this form, it'll go to the database and then we can serve this back up, and then this will be the search results and is really quick and easy as a UI designer to put together these low-fidelity wireframes. 'Cause you already have the skills, your typography, color, layout, you've already built those skills and those muscles to make those designs. And so you're removing 90% of that out of the equation, and you're just focused on a little bit of typography and mostly layout. And kind of figuring out how things are gonna work. And this is definitely getting into that whole user experience design type of field. But this is the path that I took as a designer, I started off doing purely visual design, and then I gradually shifted into doing lots of UX strategy, UX wireframing, low-fidelity design, user flows, content maps. You will learn really quickly that it's all related. So if you can do this, you will expand your horizons for a future project. Another reason you might want to consider a wireframe or low-fidelity design instead of jumping straight in is, if the project team is really, really big and there's multiple stakeholder. So maybe the the functionality might not be that complicated, but if the team is really big, sometimes it helps to break the conversations up into... Okay, now we're talking about functionality in this meeting and in this meeting, we've already decided the functionality, and now we're talking about the interface that allows that functionality to happen. And so it's, sometimes it can be best to break those conversations and have different meetings, so you can stay super focused and very efficient while you're making your way through the project. All right, let's take a look at this example for the Shiplify MOBILE USER EXPERIENCE. This is a PDF that I put together a long time ago. You can see our little 2013 date timestamp on it. And I actually created this with Illustrator and InDesign. So I just start off with a cover page. This is what we're working on here. This is the table of contents. This is what has everything included in this document. And, here is everything in the first chapter. So we've got sign up and log in, just boring, plain, black and white with a blue call to action. Just trying to figure out the functionality. What is required to sign up for this app? And showing error field, just kinda using the default, show in another inline error. Just all these different little random screens that have to do with all of the functionality. In a way we're just, we've just... We've chosen our style upfront and we're just trying to bypass a lot of the other decisions. And we're just trying to communicate what is this even actually going to be. So lots and lots of wireframes. I don't actually spend a lot of time, creating documents like this anymore, because it's kind of time consuming. And I probably went overkill on this particular... On this particular version, it was a small startup, and there wasn't a big corporate structure that I needed to penetrate and reach different levels of C level executives. Now, I have worked for big companies in Singapore, or I did a big project for AT&T once, and a lot of those companies kind of require you to be a lot more detail-oriented with your documents and you send this wireframe or functionality document to the stakeholders in this office. And then you get the review with the stakeholders in this office. And you have to be a little bit more strategic about how you plan and push out your design documents. And you might require a big PDF version that's really shareable within the organization. But for this one, I could have probably just, made a giant PDF with a bunch of wireframes, just on one big art board, instead of putting it in some kind of document like that. But you can see, even though I have these, kinda boring black and white and gray, once I'm ready... Once we're all on the same page with the functionality and we can transfer into the design phase, then we can end up with something like this. So I've removed the borders and I'm actually trying to implement some nice looking styles that don't have big black borders around every single element. So I'm taking some of those same layout, but applying slightly different type treatments, slightly different colors, slightly different styles, and experimenting with some shadows and things like that. So it doesn't mean that you're locking yourself into just a really bad design for the future, you can take your existing wireframes and then modify them for the UI, or you can redesign them completely. It really just kinda depends on your project. That can be where the time spent isn't quite as efficient, because the way I used to do this, is I would design all these in Illustrator. A lot of people would use OmniGraffle back in the day to do a bunch of wireframes, and then you would take that and recreate it and photoshop and eventually recreate it and sketch. And then you have these like two design documents going on. And it kind of just... Was kind of an inefficient process unless you needed to put all those documents in a organized fashion for all of those different stakeholder meetings. So now I would recommend creating some wireframes inside a Figma, but then once you're out of wireframes age, you start tweaking those actual components with brand new style. And you might... If you're clever with the way you set things up with your wireframes, you might be able to turn those into actual, nice, designed UI components with lower level of effort than I used to create with stuff like that. Here's another example from the MyMonero project. We started off kind of taking an inventory of everything that it was going to exist, and these kind of become our main screens and the information that we need to include on the screens. Then I've got it broken down into first time user experience, And just again, simple, simple card-based layout with black outlines on just about everything, not trying to win any style awards, sometimes I'll even put notes on here, based on some feedback that I might get while I'm reviewing some of the designs, somewhat of a flow showing what... Okay, if I'm creating a new wallet, this is actually going to a different flow, so you can go check out that screen. This would be kind of the way the wallets were looking. I was just using a simple, column, coded organization to kind of differentiate what those wallets might look like. And I am... I did design these icons. I was trying to make it look nice. Sometimes it's tempting to go a little bit further with the design, than you really need to with the wireframe, but that's also part of this becoming low-fidelity designs versus just pure wireframes. So if you look at this wireframe right here, you can easily see how this became this, and it's not that you have to limit yourself, it's just a matter of figuring out that format then going in and really creating that visual design on top of that functionality layer. This project was complicated to the point where I didn't understand this very well. So I had to ask tons and tons of questions about the functionality and talking to the developer all the time and really understanding what needed to happen. And I needed to be able to get feedback on the layout and the designs and the functionality really quickly. And I needed to be able to design this really quickly and share it really quickly. That way the developer could say, "Oh, actually the wallet address is not something that you do that with, like, that's gonna be a fixed thing, so you'd really just copy that instead of typing your own". Okay, well that makes a lot of sense. I'll turn this into a copy button and then I'll show that it gets copied. So lots and lots of just functionality, trying to flesh out what is actually going to be in here. And you can tell I am experimenting with kind of a monospace font for some of these transaction copy. So I didn't have an idea of the direction I wanted to take, but I just put that in just a bit. I didn't really try to go overboard with it. But just lots and lots of black and white designs, trying to be as clear as possible with buttons and primary calls to action. Now that I don't have to make functionality decisions while I'm designing the user interface, I can really go and try to go all in on the shadows and the subtle details and just craft a really, really rich user interface, now that all of that functionality exploration is behind us. Here's another app called Ravelry, that I designed some wireframes for, and this wasn't that complicated of a project, and the team was pretty small, but they had an existing design and I needed to get them on the same page with me functionality wise, and this was a quick way for me to be able to do it. So I had a couple of ideas and I just wanted to design them quickly in black and white, to see if it would make sense. So I created a bit of a low-fidelity design, kind of user flow combined into one, so you can see they're picking their team, they're sending their teams call out to friends through this kind of onboarding experience. Notifications were required for this particular app to function properly. And then I wanted to show a bunch of other ways to recruit friends, search for friends, et cetera, et cetera. Just fleshing out again, fleshing out the functionality, having those conversations with developers and with anyone else that has input on this project. And then once a lot of that is defined and decided upon, then I'm going in here and designing these actual UI designs, which you could definitely design the UI and the style first, and then use that style as you're designing the full app. But it just really depends on what your feeling is. Would it be better or easier to figure out the functionality first? Or would it be better to spend some time exploring UI components and getting them to buy into a particular look and feel, and then say, "okay, now let's figure out how these things gonna work using those design". You could really go either way, and that's why sometimes I use wireframes, Sometimes I don't. Sometimes I do low-fidelity versions and other times I jump right into nice typographic treatments. But I will say that there has been very, very few times where I have really gone in and done a lot of wireframes, and I've regretted it. There have been times where I jumped right into the UI, and I regretted that we didn't do wireframe. The only time where I might have had a little bit of regret when I did wireframes or low-fidelity designs is when I just spent six to eight weeks on nothing but wireframe. Then you have to go all the way back. And you're like, at a certain point, you felt like , "if I would've just had the regular UI in place, I could have had this thing designed by now". So I think the trick is spending as little time as possible while still being efficient and gaining as much ground on that functionality front as possible. So you have to strike a good balance between designing low fidelity, and then transitioning into higher fidelity. Once you have those kind of higher level things covered with your team, with the developers and whoever else is involved. So a couple of points to hit about when not to use a low-fidelity design. So if there's already a solid user interface and kind of a foundation, and you're just designing maybe an extension of the app or a another app that is like a companion, or maybe it's a website, if there's already strong UI principles and styles in place that don't really need to be changed, then you probably don't need to do wireframes. And if you're designing something from scratch and the functionality is straightforward, then you probably don't need to do wireframe. We didn't do any wireframe for the Contrast app. And it didn't really call for that because we already had that functionality. We knew exactly what was gonna happen, and then we just went ahead straight into the design. And sometimes you might be redesigning a website or an app, and the functionality is fine and they really just want a fresh coat of paint. And there's nothing wrong with that either. Doing a big redesign, maybe new typography, maybe the actual design project, is creating a new look and feel on top of the existing website. So sometimes you take screenshots of the website and that kinda becomes your low-fidelity design. But the main focus might be to really explore nice typography, better colors of maybe a bit of a rebrand, so on those cases you might not need wireframes for that either. It's mainly about really trying to nail functionality down and get everyone pointed towards a common goal, especially if there's any confusion around what's happening. All right. So for low-fidelity design homework, I've got a small little Figma wireframe starter KIT file that you're welcome to use as your own style. This kind of mimic some of the colors and the styles that I've used in my past wireframes. But really it's just, it's really a dark color, AA contrast, dark gray, and then a AA large gray, I've got a primary blue color, And then I've got a few other light grays and kind of light whites that work well for background colors, and just like a simple rule of four kind of typography system. And I won't vary the typography much. I mean, I might change the weights here and there, but overall you just want it to be really straight forward, kind of in your face functionality, almost like un... Like painfully, unmistakable in terms of what's active, what's not, when in doubt, just throw a black border around it, make it blow if it's the primary call to action. So feel free to use that style. Wireframe starter KIT style for your homework, and I want you to design a movie ticket purchase flow, like a little mobile app. Again, we don't need to spend a ton of time on this. We just need to lock in, on some of those vanilla styles, design the first screen of just a list of movies, like a scrolling list of movies. You can do a grid or a list maybe. You don't even have to bring in any movie image styles. You can use that image component that just is like a placeholder. And on your second screen, show a detail version of that screen. Again, you don't need to use the actual image. You can use the placeholder image, that I've got in that file, And then for the screen three, design like a screen selection, you hit the next button, you go to the payment information on screen four, and then screen five is confirmation success screen. So it's a lot of screens, but because we're doing low-fidelity designs, we're really thinking about the placement of the button, showing the keyboard, if we're all mobile and should the call to action be on the top or just above the keyboard. Some of those critical layout and placement ideas, should take precedent over typography color style imagery, when you're doing low-fidelity. So really focus on that layout and placement and functionality while you're doing these. And let's see how it goes. So, best of luck. And I can't wait to see what you come up with.


=== FILE: 8-3 responsive_filtered.txt ===
------------------------------
﻿- Mobile-first responsive design is a gargantuan topic. And it involves a lot of different moving pieces, including, but not limited to, business strategy, customer experience, user experience design, UI design, HTML, CSS, probably some sort of JavaScript framework, and lots of testing on multiple devices, not only the design, but also the code. There could be multiple courses created on each one of these topics that I'm gonna mention and it would still just scratch the surface. So I wanna cover the three most important topics on the matter that deals specifically with interface design for responsive websites. A lot of these tactics actually spill over into iOS design and Android design once you realize how the fluid layout and how the flow of the elements work. And especially now that there are so many hybrid apps that are built with web technologies like React, React Native, et cetera, that are ported into iOS and Android and even desktop apps. So it's really good to get a handle on this responsive nature, and it's just gonna help you in every single aspect that you design for. Here are the topics. Number one, a fundamental understanding of how responsive websites work and their constraints. Number two, examples of why and how to design mobile-first. And number three, examples of why and how to design desktop-first. What scenario indicates you should design mobile-first, and what scenario might indicate you should design desktop-first? So to design better responsive interfaces, it's best to have a solid grasp on what's possible inside the browser. So we're gonna take a look at this CodePen and we're gonna change a number of these layouts to watch the exact same content change. So I've got all of my HTML over here on the left, a little bit of CSS, and a little bit of JavaScript to kinda update these cards. Every single one of these layouts is different and it's all written right in here. I don't wanna go too deep on all the code, I just wanna really show you what's possible. And just so you know, this is Pug, which is a preprocessor for HTML, the output would look something like this. For this block, it's just a div with two class names and the number one. That's literally what this block is. So each class name has a different color assigned to it. And that's how all this works. I'm gonna go to full page view here and just check out. This is a simple grid, just one, two, three, four, five, six, seven, eight. Everything has the same width. If we did not have this integrated, and we clicked on flow, this is kinda naturally what's gonna happen here where these smaller blocks would just go from left to right, top to bottom. If we change the view on that to be this little sidebar, you can see when I start to scale the view window down, these are just gonna start to wrap. And that's what's gonna happen. These are gonna just wrap from left to right, top to bottom all the way down, unless you override it with code. Most things are gonna wrap this way. And that's just kinda like the natural flow of HTML. So if you have these eight elements, and everything's fluid and you have this fluid layout, you can either wrap them all until they turn into a big list, or you can turn 'em into a grid and you can manipulate it, however you'd like. So these same eight elements, we can say, you know what, let's keep it in a grid, and let's make the grid stretchy. And no matter how small we get, we're gonna have a three wide grid. And no matter how wide we get, we're gonna have a three wide grid. And then if we wanted to say, you know what, let's put this number one, why don't we put that as like a full size header here? So now we have a big header, and now just like, okay, two and three, maybe that's 50% each. So no matter what, we can say we want a header to be full width, we want these to be 50%, we want this to be 75, so on and so forth. We can control every little aspect of this layout without much problem. If we want something to stick to the left, we have our left column here, various degrees of gridded items here with like a big footer down below. Again, we can change this however we'd like. And if we wanted to change to a grid view when we get smaller, that's really easy to do with a media query. We don't have to have a button to collect. You can just change it when it gets smaller. And I'll show that example in just a minute. We got our right view. So we can move the one all the way over to the right, even though one is the first one in the source order, and it's going to naturally flow left to right. You can very easily stick this first thing all the way over here on the right. So in the fixed view, we can put number one and number eight in a fixed position, and they're just gonna stay right there. No matter how far we have to scroll, those will just stay in position. And we can put them wherever we want. If we look at full view, we can just say, you know what, everything is in a single column, we want everything to be full width, and that's gonna be no problem. You can even see, look at the left or right flow, top to bottom flow. I haven't really told this stuff what to do, it's just gonna naturally flow like that. I mean, I put some margin around it and rounded the corners, but that's just something that's naturally going to happen. And I could make this navigation look like this one through eight. And we could make those, these exact navigation pieces could look exactly like this, and it could be a big long list based navigation if we want it to. At any time with media queries or with button clicks, we can change the layout. And it's all gonna be stretchy. Because you might be on a big screen, you might be on a tablet, and you may be on a mobile screen. And so it's important to know that you can cycle between all of these different layouts really quickly. And once you understand this fluid layout, and you can cycle through all these different fluid grid views, and top align, left align, all these different views, this exact same principle and this way of thinking about elements on the screen will also apply to individual small little components. So if you look here, when we click on card, every single element is still here, none of this has changed. We're just kind of tweaking the CSS and we're calling a different class that just aligns the CSS slightly differently. But you can imagine this as a component. Say, this is like an image, maybe this is a caption for the image, maybe this is a title, this could be an icon up here, maybe this is body copy, maybe color, price, and add to cart button. This exact module could size smaller and larger, you could turn it into big columns. All of this data is easily positionable and movable, and it's fluid, and you can make it do whatever you want, once you understand those constraints. So it can be really helpful to think about your mobile views as many containers, and they can easily create a larger desktop experience. Some of these little containers might need to expand the full width of the desktop once we go a little bit larger and we change from a list view to a grid view. You can see, there's not any JavaScript happening right here. We're not calling any functions, no big programming. All of this stuff right down here is what I want to happen when the browser gets larger than 640 pixels wide. So as soon as that goes past 640, boom, we're gonna be in grid view. And this is really easy to change. We can change this to be 1200 right now. Wait for the code update, and that's gonna go into list view, you can kinda see the sizing down here as I'm moving it, but it's gonna stay like that until I hit 1200. We can change that to 1800. Really, anything we want, and it's going to be full width until we go past that breakpoint. And the breakpoint can change anything you want it to. I'm just gonna keep it at 640, 'cause that's a good size for this demo. But I just wanna point out, you can change all of this stuff really easily between layouts with a little tiny bit of code. This little tiny bit of code right here is the only thing that's changing this layout. So if you have a little bit of front-end skill, or you know someone that does, you're gonna realize that this is not a problem. There's no issue between transitioning between different layouts, between different breakpoints, as long as it makes sense and you're not trying to go wild with something that's overly complicated for not much reason. So, this is gonna really empower your static designs, knowing that you if you have two frames, two art boards, side by side, and one of them has a mobile view, and one of them is the desktop or tablet view, you can almost picture what's gonna happen in between the two, and you can more intelligently explain to a developer how you envision this coming to life. All right, so here's another example where we have the exact same markup. But we've said, you know what, this is kind of like a left sidebar here. And this is gonna be like our main content area. So imagine this is like filter or some kind of fixed navigation. And then we have this big content window on the right. So this column over here, it's got a fixed width, it's not moving anywhere. Now, we could change this. We could change this to be a fluid column. What if we wanted it to be like half as wide as the other column? We could change that quite easily. And then, it's gonna be stretchy, just like the other one. So you can have stretchy sidebars, you can have thick sidebars, but sometimes, you know, sometimes you might not want that stretchy. So it's just helpful to know this when you're designing, because you can tell a developer, hey, this needs to be fixed width, it's not gonna be moving around. Maybe the eight doesn't even extend. You could technically center this and then as the thing gets wider, you could center this in the entire window. So there's a lot of different options here. But notice, assume this is like, one through seven is our navigation, you can see that I put menu, I've got one through seven in a slightly different section, I've got this in the menu section. So, whenever I close this down, it's really easy to know that okay, the eight is the main content window, then this is gonna get a little too small to show the menu and the main content. So now we can just pop in a menu button. I put it right here, but you could have your hamburger menu up here or you can have a navigation over here. You can position this anywhere you want. And then you can have this, click this button, and it opens the menu. And then you can have a close button that closes that menu. So opening and closing these little items here. But then once you go large, you pop that menu right back out. And it's no problem. So it's really, really easy to hide things. And then on mobile, you have a little toggle to show and hide it. So if you think of this, this section right in here, if you think of this as like your mobile navigation, but then on a large view, it's like, okay, where can we put that mobile navigation? Is there a column that we could put that same mobile navigation in? And maybe we turn this main content into a grid view or something. You know, there's lots of different possibilities that you can play around in there. So if you get into these CodePens, and start clicking around and resizing the browser, if you haven't done that before, it'll really just unlock a lot of different possibilities for you in terms of what's possible and what's not. And that's gonna make your static designs that much better, armed with the knowledge of how it can work in the browser. If you're not familiar with the way some of this works, or if you have a question, there's absolutely no problem to fire off a message or text someone or DM someone who you know is a developer and say, is this possible? If I have a navigation that looks like this, and we wanna do that in between browser sizes, you know, just ask a developer their opinion, because they're gonna know that constraint. And I can't tell you how many times I've done that myself, especially when I was just getting started learning the ins and outs of front-end code, where a developer friend of mine would say, actually, this is the way you could do it, this layout would make sense. And it will just save so much headache between trying to design something that doesn't make sense from a code perspective, and vice versa. So communicate early. And if you don't know how the layout works, then just ask someone who does and it will greatly impact your designs. All right, so now that we have the fundamentals out of the way, let's talk about why would we design mobile-first? Well, mobile-first is my all time favorite way to design applications, especially when there is more functionality involved than just clicking around in an HTML based marketing website. So if there's some type of responsive web application and you have user profiles, and there's filtering and different functionality that happens within the application, I always always design that mobile-first, because I find that it forces the prioritization of the content from the top to the bottom. You're not gonna have a big panel on the left and a panel on the right and have a big conversation about well, this should be over there. And it just kind of, it forces you into this tiny view, and it's really easy to determine, okay, here's the navigation, this is the first thing we're gonna show, this is the second thing we're gonna show, it just forces that constraint. And it allows for you to add gradual progressive enhancement. As it gets larger, maybe you add those extra columns in. But then by that time, you've already decided what's most important and what's kinda coming from the top down. Also, if you have to distill complex information, it's so much easier to boil it down into simple flows, because you simply have a tiny little image to work with. It's a very small form factor. And so, you must distill complex things down into a simple screen with a very clear call to action and a very clear secondary action. So if you can distill that complex problem down into a small screen, then designing for the desktop is gonna be much, much easier, because remember, those small screens can turn into columns for the left side or the right side or the top. And then you have content that could fly out into a larger grid view. You could your content into three or four or five columns when the screen gets large enough. But once you've made those decisions at a mobile level, it's gonna be much, much easier to prioritize, you know, the most important things. Because everyone's got a phone in their pocket, not everyone's walking around with a laptop. So, if you can make something work on mobile very, very easily, then it's just gonna be that much quicker to access and that much more powerful for everybody who's walking around with a phone in their pocket. So these are some wireframes from one of the first projects that I really, really was very intentional about designing mobile-first. And it was a big transportation, logistics, shipping and managing type of responsive web application, lots of kind of complicated user flows. I sat down and designed these with the developer, with the CEO, and we had conversations about each one of these things before we ever got into the actual designs. And so, even just doing this alone, already started to prioritize functionality. And then, you know, starting with signing up, and kinda onboarding, and all these different forms, this can be complicated, this can be really complicated. But if you have a small screen, you're forced to simplify it and you're forced to make, you know, very clear calls to action. And so, I just have these screen after screen after screen of mobile views. And also, you know, not always, you don't always have to do low fidelity designs, but something this complicated, I would definitely, myself personally, start with low fidelity designs like this. But this just helped us very, very quickly get started and helped the developers kinda get started on the database creation, understanding how everything was gonna work. Everything's kinda mapped out and we could quickly prioritize everything by doing this type of mobile-first design for this big, big application. And once we had a lot of those mobile layouts done, and we started on the UI style, you can see that this could very easily be a little mobile screen. And if I scroll down here to show you these other ones, you know, we've got our small mobile content here, but on this one page, this really complex module here, I'm showing, okay, you know, if you scale this up a little bit, maybe I can bring Wednesday in line with Cambridge, Ohio, and I can bring the date in line with Athens and then save, search, edit, duplicate, archive, I know that all this stuff can be manipulated based on that responsive example that we just looked at earlier. So if I know how all of this stuff can flow and cascade with each other, then it'll be much easier to figure out how do I go from mobile to tablet-ish, to a much larger layout? And what elements could I start to wrap, and this could be pinned to the right, but maybe on the mobile one, you know, truckload and intermodal right here, this would start to crash into the title. So maybe on mobile, we have a little tiny media query that says, you know what, on this one, you know, put it down there, so we have a lot of room. We have a lot more room right here. And you can do this with individual modules, you can do it with individual pages. And it just really goes to show you like if you can narrow down the functionality on a mobile screen, and you know how the flow can work and you know all the different options, or you have a friend or a developer that you can talk to, to get your questions answered about those things while you're designing it, you will be able to systematically start with a mobile, go a little bit larger, and if it gets too complicated, just isolate one of the components and figure that out first, and then go back and start adding in the navigation and the footer and all the other components that need to go in place. All right, here's another example of mobile-first design. This was actually for a course platform that I created for another course that I made a long time ago called AI UX, that was actually all about designing wireframes like this inside of Illustrator. But I used the exact same process that I was teaching in that course, designing mobile-first, I've got my syllabus here, you can see all the modules, all the lessons, got course progress. And once, I'm trying to show, you know, what's gonna happen right here, you can see on this one, I have a little syllabus link and this is what it looks like when it's opened up. But then once it gets here, the syllabus link is still there, because there's not quite enough room to show all of the lessons and the menu and everything. But I wanna show what it looks like now as a drop down. You can see this drop down is exactly the same layout as the mobile version. So I can fit this as a little flyout window. Remember, it can be a right-hand column, it can be a left-hand column, it can be an overlay. So you can reposition these any way you want, just like I showed you in those earlier examples. So in this one, I've got a mobile view for the navigation that turns into a little popover. But then on a larger screen, we've got plenty of room for it. So, we can just stick it in the left column. And there's no problem transitioning with three different media queries. Sometimes, you know, but you need to have a conversation with the developer about that, because maybe they have a better idea. But this, I know this is possible, because I'm aware of how that code works. And you can see here too, this little module right here, once it goes wide, we're breaking that into two columns. So now we have this here and this over here. So instead of keeping that text getting longer and longer and longer, that text would look too long if we put it all the way across this big big screen. So, once we hit this breakpoint, we can easily add that third column and just have a little bit of nice negative space down there, and we'll be good to go. Same thing for these screens, we're taking this content that would normally wrap wrap wrap, you know, if we're all the way on this screen, you can see we've got, imagine those one through eight blocks, we've got number one, number two, number three, number four, number five, number six, kind of all in here. But then as we get smaller and smaller, we're wrapping that down into a simple one column wide layout that can continue to flow, continue to stretch, however we want it to. So once we have that understanding, we can really start to position this stuff any way we want. All right, one more PDF of low fidelity wireframes for this mobile-first-off. This is actually the document that I created in the AI UX course. This was a full redesign of like a big eCommerce site. So you can see here, again, mobile-first, figuring out the navigation, four columns instead of two when I'm transitioning between mobile and tablet, and then transitioning from full screen to popover on this view here. Now, we could very well keep this same full width layout all the way across. And that will be no problem. That's just a design decision. But I know that we can do this if we decide this is better. And so, I like to design mobile-first for some key screens like this, to get the kind of basic layout in place. So this is a category page. And we've got like a featured product, a couple of other smaller feature products, and then we have categories down below. We've got our newsletter, and we've got our footer. And so, knowing how this responsive grid can work, I'm gonna keep this stretched full width because I wanna keep that featured. Instead of keeping too wide here, I wanna go four wide and four wide on these others, newsletter can expand just like this, we got a block one, block two, and they're just gonna go side by side. And then same thing with a footer. Instead of two columns, we end up having five columns right here, just to kind of round that out. As we go larger, we're keeping the same exact layout here, just deciding to... We could go with five columns if we wanted to, but we can just get larger images. And we can size these up, maybe we throw in like a nice fun little like rollover for some of the product features. But just kind of starting here makes it really easy to kinda make those decisions. And then once you get on those larger views, it's like oh, okay, well, I've already figured this out on a mobile, on a smaller screen, everything was already stacked. So now I can just start putting in the pieces or making them stretch or stay however I want based on the information that I know in terms of how everything can size and scale together. So once we have these key screens in place, maybe we throw in the mobile version of the filters or the sub menus. Once we have some of these key screens, you can see again, I would consider this, you know, a kind of a key screen where we have mobile product detail. We've got the gallery price, the size, the color, accessories, add to cart, and then extra specs, related products, so on and so forth. Well, now you can see, okay, what do we do with all these nicely little designed components that we had on the mobile side? Now we can say, okay, you know what, instead of having a thumb strip to swipe around on a tablet, it would be nice to just have these, maybe these flow, these are flowing just like the one, two, three, four, five, six, seven, eight blocks. We keep a big image, and then we can just grab all this other stuff and stick it here, make it a little wider to fill the space, because we know we can take something that was once a list and turn it into a grid very easily. So with that knowledge, we can seamlessly transition from this mobile view into the tablet view. And then same thing, we're gonna go tablet view to larger desktop view, and we're gonna consider adding a third column here. Now that we have the space for it, we could make this smaller, and instead of having this add to cart buttons so low, now we can pop this thing up in the top right and have it in a prominent position for a regular website. Knowing how all of these columns can expand and collapse, will just really empower you to put these little mobile components into different columns and expand them as needed. And then once we have those key screens designed, there's really nothing that says I need to design, especially when you're dealing with low fidelity design, you don't need to design mobile, tablet, desktop, mobile, tablet, desktop, mobile tablet, desktop, on every single screen. Once you have that basic layout finished, you can definitely just plow through newsletter, about us, FAQs, login, all these different video screens, dealer page, headquarters, you know, press interviews, they all have the same basic layout. And so now we can just plow through all of these components. And if we're doing low fidelity design, this is really helpful just to get everything on the page. I'm not that worried about color and imagery and style necessarily right now. I'm just kind of focusing on typography and layout, figuring out all these different little modules and what's gonna be in a list view, what's gonna be in a grid view, all these different little things for account, exchange, return, return label, lots and lots of different screens that I know, once we have this basic layout, we can very easily then transition into full on high fidelity designs. Or maybe we start it at high fidelity and we're doing the same kinda process. This is just low fidelity examples that I've done in the past, so it's easy to dig through as examples for mobile-first. All right, one last mobile-first example. This was a responsive web app for monitoring thermal cameras that were taking images of machinery and alerting someone if there was a temperature spike. So, pretty complicated project. So, I'm gonna, without a doubt, start this one mobile-first and definitely low fidelity just because I gotta figure out the functionality here, figure out all the components, the modules and have lots and lots of conversations with the client and all the people involved about just the functionality in general. We're not worried about two wide, three wide, four column wide, we have to just figure out how this thing is gonna work. So, starting mobile-first on a project like that, in my opinion, is just absolutely critical. So, I'm not gonna go into too much detail on all this stuff. I've got links to all these. So you can go in and you can dig into all these files and kinda check them out. But I'm just kinda simply laying these out by features. So here's our onboarding settings, dashboard, assets, cameras, all this stuff. And then I actually was able to link up this prototype. So I've got the first time user experience, the dashboard, different little prototypes here that you can click on. And you can actually look at and see what happens when I create my account, got optional info. And one thing that I like to do on mobile-first designs, especially when I'm working in low fidelity, sometimes I'll add these little annotations just to let someone know, you know, both options are gonna go to the user dashboard. So if I fill out the optional info, then it's gonna take me to the dashboard. But if I hit skip for now, it's also gonna take me to the dashboard. So I can just put in little notes like that for the developer or for anyone that wants to look at this and really know what happens. So I'll click that. And you can see I'm on the dashboard here. And I can create a new asset, blah, blah, blah. So, just lots and lots and lots of things, that would be actually pretty challenging to design it desktop-first, 'cause you almost have to make more decisions when you're on the desktop. You have to decide on layout a lot more than you do than when you're on mobile. 'Cause on mobile, you just, everything is straight up and down, forces that priority. So again, when I'm working on responsive web apps, and there's application, there's functionality, and it's a little bit complicated, I will always always always design mobile-first, just because it forces that constraint and makes it much, much easier to just figure out the rest once you have that first part nailed down. Okay, so that's a mobile-first design. Now I wanna talk about the times when I like to design desktop-first. Again, there's gonna be difference of opinions online about whether you should go desktop-first or not. And again, I've let you know, I'm a huge proponent of mobile-first. But the times when I go desktop-first, most of the time, it's for a marketing website. Because marketing sites can often be an exercise of just pure creativity. And a lot of times a mobile view, it doesn't give me a lot of room to explore and push ideas around. And it's a different kind of a design challenge. Because on a marketing website, there's less functionality to worry about. Usually, it's gonna be, you know, a scrolling website, there's a few things to click on, there's not a lot of functionality. So it's really more about how you can make it look nice, more about the concept and the style. So a lot of times when I'm designing a website that is purely for marketing, I'm always gonna start with a desktop design first. All right, so the first example I wanna show you of a desktop-first marketing website is this Flowkit 1.0. You can see I got my big view right here and then once I nailed all of this stuff down, lots and lots of elaborate flows and designs and colors and all this stuff, then, only then, did I go back in and try to kinda shoehorn this stuff into the mobile view. And a lot of times, I will end up leaving this undesigned so I can make some decisions in code. But when it's a design like this, you kinda need to have... This graphic is not really gonna work on a mobile view. So I actually created a new graphic to kinda swap the image out. As it got smaller, it would switch the image out. But I didn't just start off with this one design and just design it all the way through. If you look at some of my earlier designs, you can see I've got art board after art board after art board of these unused designs where I'm experimenting, experimenting, really just throwing stuff around trying to make something look good, trying to come up with some good ideas, just over and over and over. So, just for fun, let's check out some of these. Like this was one of the first designs that I was like, oh, I really like the idea of all these flows. So I spent a lot of time just building this out, just making something look nice. And then I designed these little icons. And then I thought, well, maybe it would be cool to show this like transparent background. And so I started playing, okay, well, maybe this could be the mobile version, maybe I need to like add some more stuff. So I'm just experimenting with different layouts. Maybe I have this like weird, right edge opened up and the button is fixed, like as you're scrolling through. And then I'm like, I started writing all this stuff. And I tried to come up with this thing. And I felt like no, this is getting way, this feels like a textbook, like user flows are already boring enough. Just, it's kind of a dry topic. And I wanted this to feel a lot more fun. So I was getting a little bit off track here. So I was like, I need to redo this. And I'm gonna just bring in like something a lot more fun. I'm gonna bring in some big gradients. Maybe I'll have this little interactive thing. Then I designed this little, like, this is like a little simple, like Twitter illustration, like a kind of a low fidelity illustration. And then just trying to experiment with like, this little like custom builder, like maybe I could create something cool. So I'm really just cycling through all these different designs. I even designed this where you could have this interactive thing, but this felt just too complex. And I was like I need to make this simpler, I need it to feel more fun. So I started trying out gradients, simple colors. I mean, just on and on and on. I did a lot of these designs, until ultimately, I kinda settled on this one and then I, you know, designed it out, made it tighter and just kept iterating through it. And then I went to that mobile version. So, if I would have started on the mobile version on this particular website, there's no way I would have come up with this design. Just because there, you know, you kinda just need the room to explore if you wanna make a really creative marketing site. Same thing with this Contrast website. I started with the desktop designs and I was like, man, how can I show like a bunch of really cool colors, make it feel fun and not get bogged down in the details of accessibility? 'Cause it can be some dry information. I wanted this to be big and bold. And so I just started making shapes. I made a giant rectangle and just started rotating it and I started playing around with medium shapes and big shapes and small shapes. I need a big canvas to explore and experiment and kinda play with these kind of interesting crops for the shapes. And then, only then, I'm like, okay, let's see how I can make this work on mobile. Like maybe there's not room for this purple or pink dot, you know, I could possibly, like reposition this thing behind here, but it felt like on mobile, it just felt like it was getting a little bit like, it just felt like it was kinda getting in the way, it wasn't really adding that much. You know, I could have put it right there. But it just felt like it wasn't as interesting. So I ended up just taking it completely out on mobile. And you can hide things and show things when the browser gets smaller, when it gets larger, you can choose okay, when it gets smaller, I'm gonna hide that element. Same way that you can change the layout. You can also hide it and show it. And so that's what I'm experimenting with here on this mobile version. Here's another example of the Switch to Studio website where I just, I went through a bunch of different versions of a possible homescreen. And, you know, I almost went with this design, 'cause I had these big cards, and I kinda like these illustrations and these colors. But then I just thought, maybe I could play around with some like big juxtaposition, like big typography, like really, really big, and have this stuff just peeking up. And again, like there's no way I would have designed this if I was just looking at a mobile screen. You might be different. You might thrive designing something like this for mobile, but the way my mind works and when I'm just trying to explore fun, creative ideas, I just want these big canvases to throw things around and to really just play with a bunch of different concepts. You can see here's another one that I tried that was like big text everywhere. It was kinda hard to see that, kinda hard to read. So, you know, I didn't end up using that. But this is pretty close to what it ended up being. And then once I got this, I'm like, okay, this kinda works. I'll try the same thing with like the calls to action, I'll have these little things off to the side. And because I was the one who was going to code this once it was done, I actually didn't even design a mobile version, because in my mind, I already knew this was gonna swap down here, these are gonna end up going like this, and they're gonna scale down. And this stuff right here is just gonna get squished down like this. So I didn't even bother designing it, because I knew I could just make a few tweaks in the code. So you can see here on the live site, we've got all these modules here, little animation. And so, if I open up inspector and we go into the responsive mode, you can see what's gonna happen here. Remember, if we have, imagine, block one, block two, block three, four, five, we can reposition those, we can make 'em smaller, and then we've got a three grid layout, we're gonna switch to a two grid here in just a second. Right, there we go. And then we're just actually gonna stay in the two grid for a little while. But once we got smaller, I tried out the two wide grid on a mobile device, and it just didn't quite feel right. So I decided to go ahead and go full width on these big tiles here. With the knowledge of those blocks and the way you can manipulate all of them, it's really, really helpful to kinda understand that and to understand the constraints when you're scaling between the two different sizes. And another last example here, the marketing site for the MyMonero app, I actually only did one desktop design, I didn't even bother doing the mobile design. And I did not even code this, I was in constant communication with the developer while I was working on the project. And I designed the desktop version. And I know that if I have this desktop version, that if we were going to go in here and make this a mobile version, I know that this is probably gonna, this is gonna fly down here, this is gonna scale down. Even if this needs to get to be 375, that's 375 pixels wide, you know, all this stuff I know is just gonna like move over a little. I don't really need to do this, but, you know, you get the idea. You can move all this over, make the text a little smaller, and you can scale your images down. So, it's fairly simple to know, like, things are gonna scale down and this is kinda what's going to happen. And so, I didn't even need to design the mobile version, because I told the developer, you know, I'll design a mobile version if you need to, but really, we're just gonna, like, this stuff's gonna fly into a single column grid, instead of a two column grid. And you can kinda look and imagine, you know, what this stuff would look like. And, you know, this would kinda just turn into a single line. So once you have that understanding of what's possible, and what can happen, sometimes you don't even have to design both versions. If you're in that communication channel with the developer, they know what's gonna happen, you're gonna review maybe some of the decisions that they make. Sometimes you can get the websites built and designed up to like 80%, 90% done, and then hand it off, because you've been in communication the whole time. And now that they're designing, now that they're writing the code, you can make those additional changes kind of as they're working on it. And the feedback loop just goes back and forth, back and forth. So it's gonna be really helpful to kinda understand just that basic framework, and kinda just that basic understanding of left to right, top to bottom flow, and then all of the different kinda positions that you can put an entire screen in, and how all of that same constraint information can apply to a single component as well, like an image and a title and a icon and a little subtitle or some bottom type information, you know, that can all apply to a tiny little component the same way that it can to a multi-column layout on the actual screen. Okay, so for homework, I've got a few assignments for you. On this one, I want you to review all of those CodePens, if you haven't already. Kinda go and click around, open 'em up, resize your browser, and just kinda methodically study what happens when you click all of those different icons, what happens when you scale the browsers up and down, and just try to understand and learn the nature of responsive websites. And then for your actual design, I want you to design a mobile view of something that has like three to five sections in it. It could be a detail of your favorite product page, or it might be like a pricing page on some software or anything else you can come up with, just something with like three to five sections. Maybe it's a navigation, a big image and some other stuff. And you can use low fidelity design with just Xs in the gray, you can, you know, use the low fidelity template or the style that I've done mine in, create your own, or you can go all out and just do a full on design. But a mobile view like 375 of like three to five sections, and then secondly, design that iPad view like 786 wide or 800, somewhere along in that range. Try to shift that information into at least like two columns. Same way that we looked at in some of those wireframe PDFs. And just like in those PDFs, create your third view where you might go three columns wide or four columns wide, or maybe you keep it two columns, but they stretch out a little bit more. And maybe you get like three of those lined up beside each other; mobile, tablet, desktop. Low fidelity is fine. You don't need to try to go all out, unless you want to, that's totally cool as well. But just try to get that basic understanding, design the mobile, tablet and then computer size as well. So, best of luck to you on that, and I can't wait to see what you come up with.


=== FILE: 8-4 ios_filtered.txt ===
------------------------------
﻿- The absolute best way to learn iOS design and functionality, is to actually own and use an iPhone regularly. This will help you become really familiar with all the operating system little tit bits and I know that this is not gonna be possible for everyone But if you want to get into designing iOS apps there is really no better way that just to have iPhone and to start playing with it and becoming more familiar with it. As with a lot of the topics in this course iOS is a very broad category and it can easily be an additional 80 lessons in it of it's self. So my goal is to give you a broad strategy for designing iPhone apps in just kinda a step by step check list of things to keep in mind especially when you are designing for iOS. All right so we are just gonna right out of the gate on the App icon. There is often a strong link between the app icon and the launch image. And it's definitely an area that can be used to put branding on in the forefront. Some important things to remember about app icons here, you're gonna wanna make it really simple and you don't really wanna include a bunch of text or anything, unless it's really critical. You can check out this Philips Hue app right here, see how they have the word Hue and the word Philips down in the bottom. Big brands are notorious for cramming their parent brand name into the app icon. And unless there's just some big legal reason or some really strong reason to do so, I would absolutely try to avoid that whenever possible. Just because all of these icons look really nice. Like the CNN icon, the Netflix icon simply safe but this Philips Hue app, like that would look so much better as like a light bulb with that same gradient that they're showing right there. And if we go in here, here's another kinda notorious example, this NETGEAR router icon. Like that's an okay router icon, it almost looks like a windshield wiper, but do you have to cram the word NETGEAR in the app icon? It says NETGEAR right below it. So I'm not sure if that's a good example or not. The Uber Eats icon, Uh, you know I'm not sure if that's a wise use of that. I mean, at least it fits nicely within the actual little ecosystem. But NETGEAR is kinda an example of just something that's not really that nice. Here's another great example, ISONAS pure mobile, this is what I use to actually unlock the door at my coworking space. It's just kind of like a Bluetooth mobile app. But look at that app icon it says "ISONAS," it says something else like, "Total pure access control." underneath ISONAS it's hard to read that, and then it says, "Pure mobile" underneath. And there is just no reason that it needs that much text. You look at this Papa John's icon, the Papa John's logo is pretty iconic. So it doesn't look like that one is not that bad, but the word pizza is so small. Like, wouldn't it be cool if there was a pizza icon and maybe it had like a smaller version. So whenever possible, it's just really nice to design a simple image based icon. You can see here, I've got this app icon toolkit embedded in this lesson as well. And this is just like, it gives you a good idea of designing the really big 1024 icon, and then all the different little preview areas for notifications, for the app store, like on the home screen and just kinda different areas. So you can see here, I've got this master symbol, I've got a component instance. And then each one of these other instances are versions of that just kinda scaled down. And this is one of the best ways to design an app icon to begin with because you have a really big canvas and you can see if I get in here and I actually move this, all of the instances are going to update even the scale down version. So this is a really nice way to see what's gonna happen when you design this app icon. So definitely make use of this template. It's worth noting that I don't typically start off with an app icon, unless I maybe just have really a good idea or maybe there's a big branding exercise before the app design begins. A lot of times I will design the app first and figure out colors and style. And then I might have some ideas for the app icon but usually at the end of the project is when I'll go into the app icon design. But it's always helpful to at least think about it and maybe explore a few ideas up front All right the next thing you see after the app icon is gonna be the launch image. This is an actual pink image, static image that is displayed for a split second before your app loads in. Now you're at might actually take a few more seconds to load and then you do have the opportunity to display some type of skeleton screen or loading information. But that split second between the app icon and the actual app loading, there's a launch image. And Apple has really opinionated about this, they don't want you using this for a branding opportunity. However, most third party apps use it as a branding opportunity. So let's take a look at some examples. So this is gonna be launching the Twitter app. This is probably one of my favorite loading screens. So their launch image is an image of their logo. And I actually don't mind having the app icon kinda getting larger to me, that kinda feels like a cool transition, especially if you're gonna put an animation on the end of it. So look how Twitter pulls in that, and then they have this animation where they mask the entire screen with everything pulling in. If we just kinda scrubbed back through that, you can see very slowly, we have the launch image is appearing and it looks like it's coming from the app icon. And then the app icon itself masks the rest of the content as it grows into place. It kinda presses down a little bit and then it goes really large and kinda reveals you see how it's masking the rest of the content back there. I really like that transition. It's just kind of a fun way to make use of that transition between the launch image, which has that flat image and then an animation on the back end of that. So it's something that's incredibly small those subtle details, but that transition between app icon, launch image and the app can add a lot of really fun, just feel to the app. Because think about how many times you launch the Twitter app or launch an app You know if it's always just giant branding piece, it just doesn't have a good. Here's another one showing the Instagram launch image, which in my opinion is not that great. It just shows the logo and it says, "From Facebook" down here at the bottom . Now I'm sure that the legal team and corporate Facebook was involved in this. I just feel like it's unnecessary and this it's okay, but it's not quite as nice as the Twitter example. Facebook's launch image is pretty much similar to Instagram. It just kinda comes in pretty quickly, you almost miss it if the app loads fast, but just this white image with the Facebook logo on it. And then it immediately transitions. See how the change is a little bit abrupt between the launch image and the actual loading of the app. Whereas Twitter's has a much nicer animation and probably took a little bit more to animate that in and to put a transition in there, but it just gives it a such a nice feel and a nice transition that it just makes you feel like the entire app is going to be a little more fluid. Here's an example of the default Mail app on iOS. It really is just a static image, that is a picture of the interface before the material and the emails load in. So this is what Apple talks about in their guidelines, when they say, "Don't display branding." They want it to be almost like a skeleton version of what the interface is gonna be because that alone will make the transition a lot smoother. So unless you're gonna do something like Twitter and make a cool animated transition, that has a really cool feel. It might not be a bad idea to follow the Apple recommendations and place a launch image like this. That is a design of the first screen that you will see with all of the information stripped out. And this screen is always going to say, "Inboxes." It's always gonna link back to Mailboxes there. And these icons are always going to be the same. And if they ever update the app or update the look of this, they'll have to update the launch image as well. But it's just worth pointing out the differences between a branded launch image and an Apple recommended kind of blank interface launch image. All right, next up, we're gonna be just these simple navigation bars, if you've ever used iOS you know exactly what this is, but it's really just these two top bars. And it's typically got a title and some actions at the top. And all of this is in 17 point font if you're designing for standard iOS. And then they have this also this large version where you might have a prominent title on top, but if you start scrolling it transitions into this. So this is the navigation bar, and this is very common to put like a forward driving action. Going back to the previous screen it's always gonna be in the top left. So it's just really important to understand this is just a fundamental component in the iOS. So just be really intentional that you are including a proper navigation bar. And you can always go and look at their iOS kits and things like that to see if you have the right sizes and where it should go. You can definitely create a custom version of this, but again, that will create a little more work. So, you know, talk to your developer to see if that's a good idea. So if the navigation bar is the top, the tab bar is gonna be at the bottom. And this is where you're gonna find the navigation, the simple tab navigation right here. We have Twitter where we have home, search, notifications and direct messages. And this is really a tried and true way to put navigation in an app. There have been a number of apps that have tried lists and grids and fancy navigations and swiping and sidebars and all this information, but usually most of the time as you see these apps evolve. But over time, you will see most of these apps evolve back into that simple tab bar navigation, usually like three to five spots for the iOS device. If you look right here we have a very old version of the Facebook app. They started off with this grid of News Feed, Profile, Friends, you know, all of their kinda things. They're almost recreating that app feel of the iOS home screen. You swipe between these. And then they moved away from the grid in favor of showing the News Feed and the Home Feed first and added this hamburger menu. This was one of the first apps that really popularized that hamburger menu. And then they had Profile and then they just cram that sidebar with as much content as humanly possible. And they kept that hamburger menu and the side menu for a while. But eventually they evolved back into this tried and true simple tab bar navigation, because you can always put your most important items in this tab bar. Even if you have 20 to 40 items in your navigation, there is no way that 40 of them are gonna be equally important. There's typically always gonna be three to five most important navigation items. So if you can figure out what those are, maybe you go through a variety of tests. And a lot of times this is gonna be a big discussion, just navigation discussion in general, with clients or teammates that can be a big thing. So trying to decide what are those three, four, or five different priorities. And then if you do have more, you can put this little More icon in like Facebook did back to the Apple iOS guidelines here. So they have these four, now a lot of times these change, depending on what you use on Facebook and what they're testing, but typically always they're gonna have this More icon over here. Even Snapchat, eventually added a tab bar of Sorts down here in the bottom. So people could find the navigation more easily. You've got Friends here, you've got, you know, take your photo or video here, and then discover. Here's a look at the newest proposed Snapchat navigation, where they've gone away from swiping and the semi-transparent tab bar. And they're gone back to this simple tab bar navigation. They've got locations, chat, taking photos, stories, discover and it's right back at that simple tab bar navigation. And this still has like a fun and friendly feel. You might experiment with some navigational things, but it's really gonna be hard to beat the simple tab bar navigation, especially if you want to appeal to a bigger general audience that might not understand some wild new navigation concept. So the next thing I wanna cover is modality. So in iOS, there's lots of different types of modals that they make use of, and most of the time it's gonna be, you tap a button and it triggers a modal that either slides out from the top, or it kinda just appears as a pop over kind of alert style box. But usually that's gonna be reserved for when you need to take an action. Say you want to pull up some filters and then add some changes to those filters and then you wanna save it and you make that modal go away. Well, in iOS they use those modals to kind of you enter in to that kind of new mode of interaction and you can either cancel or close, or you can save it as opposed to hitting Filter and then sliding side to side, and then changing filters and then hitting Back to go back. It almost makes it feel like if you go into the filters in a slide and then you go back, you're not really sure if you just added the filters or if you're going back away from the filters. So in order to kind of mitigate that using modals sliding up from the bottom or overlying, and then explicitly hitting Save, and then it goes away. That triggers a little bit more of a confirmation knowing, and feeling confident that what I just tried to do is actually happened. So this is an example of a modal right here. If I'm in my Apple Mail and I hit the New Mail button right here in the bottom of the Action bar, I click the Mail icon and then boom all of a sudden I'm inside of this modal. And you can see, I can either finish my email and hit Send, or I can cancel to go back out of this modal. And you can see the main view kinda goes into the background a little bit. Now this is built in functionality with iOS 14 and beyond. If you can understand a few of these small kinda builtin constraints that it already exists within the ecosystem, you'll be able to kind of manipulate your designs, really take advantage of what already exists, especially if you're getting ready to get this into development, talk to developers about modals and navigation and things like that. And you will be able to discover a lot more about the things you should and shouldn't do when it comes to iOS design. Same thing here on the new, Hey app from Basecamp. If you click right up here in the top, then you get the same exact modal. You can see it's even the same kinda layered effect. And then instead of Cancel, they have this little down arrow, but it's really functioning the same. It's instead of sliding over, you're gonna get a new modal that comes up. You have to perform some type of action or you can cancel it or dismiss it, something like that. And also with the release of the new iOS 14 system, we're seeing a lot more of just the bottom sticky modals instead of the full screen, just kinda that small bottom area that kinda provides a lot more context. That is all kinda reachable with your thumbs. So right here, we've got Apple Maps has this little small bottom modal that just kinda pops up where you can choose directions, and you can tap Go to activate your directions. On this one we've got some kinda automated actions from Home kit, so I can turn things on and off, hit Continue, or close this modal again. I can continue with the modal or I can close it out to get back to what I was doing. And then now we've got a little quick sign in where it just kinda pops up. You can hit Sign in, use your face ID or your password. Same thing with this kinda little Scooter Rental, you can sign in with your Apple ID and it just kinda pops up here and the bottom over the existing view. So these bottom modals are becoming more and more popular and for good reason, because if I'm using my phone, my thumb can only reach so high on the screen. But if it's all right here, I've got a lot easier way to kinda reach all the stuff down here. So that's bottom modals. Right, now let's talk about permission requests. Now on iOS apps you're only allowed to request permission one time per item, inside of that app. Some example permission requests include, allowing notifications, allowing access to your location, to your camera, to your microphone, to your photo library, and also to contacts. Anytime you want to access any of this information, a user has to explicitly hit Allow or Decline. And you only get one chance to ask that. So you have to design for a worst case scenario in case someone accidentally hits Decline, or if someone purposely hits Decline. You also need to design up to that point, what is going to make that user confident. If they need access to my contacts or access to notifications, why should I allow that? A lot of apps make the mistake of just you download the app and then all of a sudden, the first time you launch it is like boom, we want notifications, boom, we want contact access. And most of the time, you're not gonna want to do that because I don't wanna give an app permission to access all this stuff and I don't even know why it needs it. So if you look right here at this SmartLine example, this is something that I designed for the SmartLine app. Contacts and notifications were actually required for this app to even function properly. So we had to design this big onboarding flow to let people know why contacts needed to be accessed and also how to access it if you didn't allow it to begin with. So, first of all, we have this kinda pre permission ask. We're not actually asking yet, this is the kinda standard permission request that only Apple will produce. And you can only trigger this one time. So we're saying, " Okay, you know what SmartLine works by creating two contacts on your phone to handle incoming and outgoing phone calls. So it's really not even gonna be able to work unless we can access your contacts." And we're trying to reassure them, you know what, we're taking privacy seriously. We do not store any of these contacts on our server. And we're saying, "You know, this is required, so enable access to your contacts." Once, we feel that we've given them enough information, then we're going to use this button to trigger this permission request. And if they hit OK that's great because all of a sudden, okay great contacts enabled. And then we go on with the rest of the app. But if they hit, Don't Allow by mistake or on purpose, we can't just not let them use the app. We have to tell, tell them why it's not going to work or what to do to fix it. So now we have a flow where it's like, "Okay, Oh, contacts are required, this is what you need to do now you have to allow SmartLine access. This is like a little mini illustration of the actual setting screen here. So now we need you to open the settings out and we need you to go and allow contacts. And once you do that, then you can go and use the app for whatever you need to use it for." And this was the same thing for notifications. So you only get to ask one time. You almost have to head off their hesitation and make them feel comfortable about giving you access in the first place. And you also have to design an example for what happens if they don't allow it. Some apps, you can just go on business as usual, if you don't allow notifications, no big deal, but some apps might require that functionality. So you need to make it a little bit more easy to see and to access. A couple of other quick points to hit is resolution. There are a lot of different sizes iPhones, and a lot of them have different pixel densities. So your best bet is to always design at one X. If you're using Figma or some other current design tool, most of the time when you create new art boards, it's gonna pop in a design that's gonna be at one X. So that means that if you're designing 17 pixel font at one X, then that will end up being 17 point font in all of those sizes. But it'll be 34 on a two X screen and it will be 41 is that right? Hey, Siri, what's 17 times three?

- [Siri] That will be 51.

- 51 I was wrong, math is hard folks. So that's gonna be 17 pixels on one X , 34 on two X and 51 on three X. And you can already understand this can get confusing. So just design at one X and use use the pixel sizes for one X and you should be good to go. Don't forget that iOS has light and dark mode. And a lot of apps today are taking advantage of this, providing both light mode and dark mode. Sometimes they go with the system and just kinda change it with the system. But some of the apps that I actually prefer, the ones that let you toggle in between light mode and dark mode, or you can choose to use systems. So don't forget that that can be an option. If you're trying to design a black interface, or a light interface or a mixture of both just knowing from the beginning that there can be a light mode and there can be a dark mode that sometimes will help you make decisions. Another thing in iOS is gonna be this blur functionality coupled with opacity. And it's really gonna be a cool way that makes it feel very iOS is using this blur and opacity. You can see the same two screens here with a black background is gonna to look like this. If I have this like purple flower background, it'll look like this. And then if I have this kinda orange, it'll look like this. So the same exact interface with different backgrounds using that blur is gonna look a lot different. So that's another pretty handy way to maybe obscure like cover photos or images, you know, blur is a capability inside of iOS. So you can use that background blur on your shapes and your design tool to create a lot more dimensional interfaces that really feel at home in the iOS world. Another thing is going to be fonts, iOS has their standard fonts. They've got San Francisco Pro, the most commonly used font and iOS. They've got San Francisco Pro Display for 20 points and higher. San Francisco Pro Text for below 20 points. They've got San Francisco Compact for really tight spaces. They've got San Francisco Mono, San Francisco Pro Rounded, San Francisco Compact Rounded, and they also have a New York font that has set offs that is kinda a new addition that you can also make use of. And finally, one of the great ways to design for iOS is to look for reference on your phone and take a screenshot, and then airdrop that to your Mac or email it to yourself or text it to yourself, however, you can get it to yourself and put it in your design tool. But don't forget that when it comes in a lot of times it will be at three X or two X, depending on the phone that you have. So if you're using an iPhone 11, that's gonna come in at three X the size. So a lot of times you can just go in and divide by three, and that will size it to the appropriate size to design a one X. And then you can use that for reference to check out type sizes and avatar sizes and all sorts of things. So for iOS homework, first and foremost, visit the Apple Human Interface guidelines for iOS, bookmark it for future reference. And if you have time and you're interested enough, definitely go through the content that they've produced and written it's really well done. So I definitely encourage you to read through all of that and reference it often. For the design portion of iOS, I want you to take a look at these screenshots that I've got for the Hey app. And I want you to notice that they aren't really using a standard tab bar navigation, and kind of a standard navigation bar and things like that. So what I want you to do is go through these screens, go through and try to redesign it kinda in the same style, maybe use some of the same colors and the same kinda overall stylistic qualities. But you put it into more of a standard iOS style, five tab bar with the navigation bar, and maybe you design in additional more screen for that More tab bar on the far right. Try to take almost like a redesign for this app and put it into a standard system. You're welcome to change it off if you want to, but I just really want to kinda hammer in those standardized types of Apple components that are really tried and true, and they've remained mostly unchanged for the last 10 years really are more. Get started on this, and I can't wait to see what you come up with.


=== FILE: 8-5 material timebolt.txt ===
------------------------------
﻿- I need to start this lesson off with a big disclaimer, I don't really use Material Design that much really at all. There have been times when I've used the floating action button or the FAB, as some people call it, as well as some of the dimensional shadows. But that's really the two main design things that I've lifted from the guidelines, to really just kinda use it as a style, not necessarily an entire system. And the simple reason for that is that I've been an iOS guy for the last decade, since 2007, 2008. And I've never personally owned an Android phone, except for a brief one week stand when I was playing around with the Google Pixel, which was cool and all, but I decided that I just couldn't bring myself to make the switch. The primary reason that I've used Material Design as a reference in the past has been for converting original iOS designs into Android based designs. If you are designing specifically for Android and the developer or development team that you're working with is coding native Android apps, then you should definitely consult the Material Design guidelines and become as familiar with them as possible. Even if you're not designing specifically for Android right now, it's definitely worth taking a look at the Material guidelines, reading through them anyways, there is some really good stuff in there. The Components section here is probably the most relevant for understanding the individual design patterns. You've got, you know, lots of different app bars, backdrops and just kind of Material language in general. Here's the floating action button and kinda going into these and just seeing how they are using them. You know how what colors are using, see how they add these floating action buttons to like a contact form. So there's definitely things that you can lift out of the guidelines here. Even if you're not necessarily designing an Android specific app. There's very few times where I've just gone straight all Android or all Material Design and just didn't deviate at all. There's a lot of good things that you can lift out of here. Just as some inspiration there might be some good pickers or progress indicators, even the switches. You can design something like this and still have it on iOS, if you're designing for iOS. So it's definitely worth kinda familiarizing yourself with this. So should you use the iOS Human Interface Guidelines or should you use the Material Design guidelines? This is kind of a loaded question. And it depends on your overall preference for different ecosystems. Again, it also depends on the goals of your project. I will say from my experience, I've worked with a lot of different clients big and small, designing their mobile apps and every single one of them that was going to eventually put their app on both platforms, always, always, always started with iOS and then kind of shoehorned it to fit into the Android system. One of the reasons is because iOS has always had a pretty rigid design system guideline, whereas Material has evolved over the years and changed a little bit. They used to have navigation that always stayed at the top and then later, they introduced the bottom tab bar navigation, whereas iOS always had the bottom tab bar navigation. But I mean, there's lots of things that Android has had for a long time, that iOS is now just implementing. So there's definitely some ebb and flow and some give and take that you can use from both of those guidelines. Again, it really just depends on your preferences and your goals and the kind of the overall style you're going for. There is a case for hybrid apps as well. A lot of apps nowadays are built with web technologies, that compile JavaScript into native iOS code and native Android code for certain parts of the application. Some might even have like a natively built shell. And then the content behind that shell is all piped in through a JavaScript framework. Using web technologies like that, for a long time was kind of lackluster experience, 'cause the performance just wasn't there. But now more and more web products are really making a lot of progress. You know, think about Figma designing in the browser, or all of the different Slack mobile apps. You know that you're kind of replicating, a lot of that native iOS and you have the exact same experience on Android and iOS. So a lot of times you can deviate, a little bit from the norm, from the guideline norm. And you can incorporate a little bit of iOS, a little bit of Material and have that exact same experience on both platforms, on both iOS and Android. And that can be a case for the hybrid app. If you look at an app like Airbnb on both iOS and Android, it doesn't really have, really, really strong ties to iOS or Android. It's kind of its own language. And it feels fluid between the two platforms. Alright, so this is an example of the app, Roadie. This is just kind of like a one small snippet of a style guide on a much larger app. And it's just kind of you know, showing all of the iOS style things. And this is some of the content view and then I've got the kind of navigation bar up here, the tab bar down here, which is you know, the main navigation. But at the time, Android had more of a top bar navigation. So we had both actions and navigation up here at the top, whereas it was on the bottom with iOS. So I kinda ported this navigation into the Android style. And we change the type to Roboto, from I think we used Avenir on this one, which is one of the standard fonts in iOS. And this is another example of an iOS app, we started this Steady app with iOS design. So we've got these onboarding screens, first time you actually got your zip code and then all the different screens, just kind of looking through all of these very iOS, with the navigational kind of bar at the top. And then down here, you can see we start to add in the navigation right here, this little tab bar down at the bottom. And then if you've looked at the Android screens, it's kinda the same screen, but it's definitely more in the Android style. at least, you know, a few years ago, it was very standard to have this type of header with the logo on the top with Android. And really, the only way that I was able to do this was, I would go in and I would look at Material guidelines, and I would look at how they're handling certain components and try to match that with what I had already designed with iOS. So basically using the same thing but bringing in more of the standard Android components. They've even changed their input fields a little bit more since this project and then the kind of dashboard. So I'm still bringing in this tab bar because from the Roadie project to this one, they did update the guidelines where they were using a bottom navigation. So that still made sense. But you can see a lot of the, a lot of the buttons are a little more hard edge, whereas iOS has a lot more rounded rectangles. This one has a little bit tighter, obviously the keyboard is slightly different. And also the, I like to use this 360 by 640. I think it's like the medium DPI size for Android. So it's like 15 pixels wider. It's not quite as tall as like an iPhone, but it just kinda depends on the main device that is active for that time period. And also the device that you have that you can mirror to. So kind of going back in, I'm keeping a lot of those elements. If you look at this background check on the iOS app, I'm just gonna copy and paste it beside this one. You can kinda see the differences here, you know, obviously, there's a new status bar, because it's not the same. We're changing the type from San Francisco to Roboto, and I'm changing the corner radius. In Material Design they have this progress bar indicator, that is kind of a standard component in Material, whereas I was just gonna have this kind of little really thin kind of iOS looking progress bar up here, but I could have technically chosen to put that on the Android, but also, if you have the ability to use standard components, then you can definitely do that and it's gonna save a little bit of development time. So I'm just kinda choose, picking and choosing a few different very specific Android type components, where I've got checkboxes and things like that to just make it feel a little bit more native Android. So just like for iOS, the best way to design for Android is going to be, have an Android phone and use it become familiar with the patterns and you've learned a lot more about what happens in certain scenarios. I myself, like I said, I haven't had an Android phone. I've always been an iPhone user. So I have to kinda make do with referencing Material guidelines. Sometimes if there's a big project and there really needs to be very specific Android type design patterns and experiences and flows, I will kinda rope in someone I know that is very familiar with Android and just ask them questions like, okay, when you tap this and when you change the filter and the custom date picker and whatever questions you might have, it's always good to go ask someone who's really familiar with it. The same way that you can ask a front-end developer about responsive code, you can ask an Android user about how they handle certain things. And that will inform your designs a little bit better. But all in all, I would definitely encourage you to go into the Material guidelines and read through them, because that's gonna be really the best way to kind of understand all the different patterns, apart from actually being an Android user. So for Material Design homework, I want you to take the iOS designs that you did for the HEY email app and I want you to redesign them with the Material guidelines. So we're gonna change all the fonts, we might change out the rounded rectangles, change up the status bar and the sizing of the artboard itself. And we might even add the floating action button to write an email versus having an action button in the top right or wherever else you might have put it. So just do a simple experiment converting the iOS designs into more of a Material style. You don't have to go all out in design this huge, huge app, but just kinda enough to get into the rhythm and the routine of changing those patterns from iOS to more in the Android world. So good luck with that and I can't wait to see what you come up with.


=== FILE: 8-6 org timebolt.txt ===
------------------------------
﻿- [MDS] It's okay to design messy at first but at a certain point you're going to just have to clean up your design document. Just as long as you're cleaning up as it makes sense for you. Maybe you clean up your files before a design review, maybe you tidy things up before you share your files with another designer. Either way there's not really a right or wrong methodology for design document organization. Most the time people are going to figure out their own methodology of what makes sense. But I want to cover the 3 main design document organization file types that I like to use in my project starting with the simplest. The first being a single file document, now if your project is on the small side in terms of features and or team members and you can absolutely keep everything inside of one document. Let me show you something I've been working on recently for this contrast 2.0 app. The team is small, it's just me and my friend Sam who is the developer on this app. I started off during the WWDC 2020 keynote they announced Big Sur the new OS for Mac and I just kind of pull some screen shots off of the Apple website and I was just really, kind of wanted to see how I could make a contrast look more like the new OS and you can see there's these big rounded corners and kind of like a nice breathable type of design. So I just started off with this document called Big Sur inside of the contrast thing and I'm just literally throwing things around everywhere. I didn't hardly name anything I mean there's a few names here and there but it's just overall really messy. This is what the app currently looks like and these are some possible designs where it's like, Okay should I go slightly updated maybe I'll throw in some transparency but really just throwing things around just exploring things pretty much everywhere and then maybe that goes into something a little bit cleaner that still I'm not worried about organizing this because this is really just for me I don't really need to share this with anybody just yet I'm just running a bunch of tests on how to lay all this out what colors are going to work what if somebody chooses failing colors how my gonna handle that and still be able to see the UI lots of different little tests on all of the stuff I was really really playing with different variations of failing callers double a large etcetera etcetera you got some more tests over here just lots and lots of stuff everywhere just really really messy I will often start most of my projects with one, two, three, multiple messy files that are just for me I mean I can screen shot things I can share the occasional little thing out of it but I'm not worried about organizing it because this is really just for me it's almost like my playground you know there's not any rules I can throw things around it's just whatever makes sense for me I can duplicate things all the way across the art board it'll be totally fine and then I created a new document that's a little less chaotic and I pulled my favorites out of these 2 got all these here all these here and then I'm trying to pull some that I can share that's a little bit tidier just a simple art board okay maybe we have these and there's a preference for the full color one and then I started on my actual design document the one that you're probably most interested in terms of learning about the single file system so once I've gotten all those explorations out of the way I do start organizing things a little bit more nicely but you can see here I have the exploration page it's still here I still even from the the messy files this file started off messy and I'm playing around with a bunch of different colors copied and pasted a bunch of different things playing with some different switch styles and sliders I'm trying to figure out lots of lots of things I'm still exploring lots of different options and so but now that this needs to be my tidy file that I'm eventually going to share with Sam the developer I want it to be clear that this is just a bunch of exploration so I will often create just an exploration section then I'm going to start slowly very slowly you can notice that I'm not too worried about components on each one of these some of these have components I have tried to make use of components and instances but I'm really not that worried about that right now when it makes sense these input fields are going to be the same so I know that I'm going to create one component and just use that still trying to figure out the position of some of the stuff so these I ended up breaking them up and there's there's not really any components associated with us so I can change any of that and it's not really a problem but again this is only exploration page once I finally started to kind of land on something that I really like which was this idea of using these bars on top you can see that a lot of the stuff is still messed up because I was using some components and some I wasn't but anyway I wanted to use this bar on top of the color and I started thinking man I really like the way this is turning out so now I'm ready to start getting a little more tidy so now I start making these components and what I did was I will grab whatever I want to build from the messy exploration page and then I'll go into a new page and then I'm just kind of slowly and methodically trying to figure out okay maybe the frame on this background is that big and I'll I'll create a component that that has a certain amount of pixels maybe it's eight there, eight there and I'm really just trying to very slowly very methodically going through and peace mailing all the little components out and so at this point I will go in and I'll create all the tiny little pieces so you can see if I start changing this route score here you can see all of those are starting to update but this is really just like a slow and methodical process and I will create okay now I have the score and I have the hex input and the ratio well now I can combine all of those along with this little icon and I can build in okay I've got eight pixels of padding on top and bottom twelve on the sides four in between all the elements and so now I can use this thing in instance if I wanted to change the size of the score I could do that and it would affect all the other instant now this doesn't really have that much to do with design document organization but I do like having a component's page once I'm ready to kinda systematize things and I can create these individual instances of whether it's I mean this is a small app so it's a lot easier for me to make a little system out of all of the out but you could definitely create components on the actual page if you wanted to if you wanted to have a different pages with components off to the side that's totally fine too whatever makes sense for your project and then once I have all these components I'm copying instances all of these apps and now this is just one instance of that app and so you can see if I go to that master component and now I'm here and now I can look at all the little components inside of that one and it just kind of starts to create a little bit easier of a system so now I can try it out on different backgrounds I can select the instances in trial different colors and just to see how that works so it's it just kind of if you create those multi nested components and then you have your screens built with that it'll slowly start to give you the idea of how the design system is going to kind of come together because most the time you never really just start off making a design system usually it's going to be through a bunch of exploration for a lot of trial and error and just a bunch of looping back through the work making component making a change make a component making the changes over and over just kind of a messy process there's never just an easy way to just spit out a design system but having the organization of the components and then some of the UI in slightly different pages can be really helpful again this is a small app so not everything is going to be like this not all of your projects are going to be like this last page on here I've got a prototype so a lot of these prototypes are actually I had to break them up because you can't always animate that easily between fixed components so some of this I had to break up and create little masks so I could I could hide and show things if we look at the prototype view you can see how I'm I'm masking these little controls right here and they're kinda hot they're going up and down in between a mask and that's not part of the component I had to create that specifically for the component I've got these scores triple A. double A. and fail they're all in a text group and I'm just moving them behind a mask to create that but that's not part of the component it's just part of the the prototype and I created that separately I always create a prototype completely separate of the design components because often you have to tweak them and rip them apart and kind of mess them up in order to animate them how you want to animate So the most the time I will definitely create a separate prototype screen if I wanted to create a different prototype I might even create you know I might duplicate this and create you know another prototype that might toggle something else so it's just a matter of what makes sense your project for this one is really small the team is small the features of small so everything's inside the same project okay here's an example of the My Minero desktop app and you can see here single file and everything has numbers associated with the feature so everything 01 first time user experience could also be onboarding really this is all the first time you're ever logging into the app. So you have an you have this one is showing using an existing wallets so we click this button log into your wallet and you just kind of step by step showing each one of those screens all the way until we have that actual design and once they enter their pin they will be in the wallet view but now we want to show also what was it like when we create a new wallet and again just kind of step by step this screens next this screens next this screens next everything is basically laid out feature by feature so this is both onboarding this one's logging in this one's is creating a new one and then these are all the wallet details screens and notice that I'm actually using a number for each one of those and that's really so that when I export these designs since I've numbered these are board names everything's gonna line up just the same way I wanted to if I were to do first time U. X. and not have the number then all of these abstract states would actually appear first because A comes before F in the alphabet so A files would show up before the F files so in order to kind of force these to get organized I want a lot of times I'll just use a simple numbering system and you don't have to follow any specific numbering system just something that makes sense after I was done designing all this I made this little about modal and I'd already numbered every single feature so I was like well I could go into rename every layer by and changing the number or I can just stick this up here as 00 this is not really a feature anyway and this is just 1 of those examples where I just change the number for this just to make it first just to have it in there could have put it last but I put it first it doesn't really matter as long as it makes sense to you and it makes sense for how you would be walking through your design files when you present it often times that is how I will organize it based on how I know that I'm going to either hand it off to a developer or I'm going to walk through it for a design review I will get organized like this maybe you know you don't necessarily need numbered features and have everything so exquisitely organized when you're doing the first video review but if you're exporting the files and you're sending him off somewhere it always helps to have it a little bit more organized like this and the single file structure is probably my favorite I will always start off with this type of file structure and I also really like to have everything on the same screen you can see I don't have a lot of pages up here but I do have a wallet detail exploration so on this screen right here we have our wallet detail and I'm using blue for all of these colors but I also wanted to kind of explore what all the different colors would look like and make sure that those were nice looking colors and they would work. So rather than have all of these duplicate files on the main page I just created a separate page for that again this is just something that made sense for this project is not that I would do this every single time maybe for another out it would make sense to have all those colors laid out here but you can really just do this however you want and right here this UI graveyard this is probably similar to my exploration page and that contrast 2.0 figma file this is just an old these are older designs where I wasn't quite sure with how I was going to lay this wallet stuff out so I'm just exploring different options different colors but I wanted to keep the stuff because inevitably when you go through in the design review someone might ask me well did you consider putting the address in with the number of the Minaro that you have in your wallet? And I can say well actually I did try that I tried it right here and it just didn't feel like that went as well and we have all these other things listed down below so I felt like it made sense to be in a separate module because people copy it enough to where should be it's own thing and when you can reference something like this it's really powerful in a design review because then you can use your basically agreeing with the person who question your design and you can say yes actually I did think of that here's what that looks like and here's the rationale for going forward with this other design most of the time you will be able to disburse those design objections by showing that you were able to already think of that already try a few options and then have a reason for moving forward in a different direction so now we're gonna get into the single file with multiple pages now that we kind of danced around that and the first version with a single file but we were just using pages loosely for whatever we needed but in this example this was such a big project that I had all these different features where you can you're on boarding you're signing up you have my trips you have search forms confirmation forms hotels itineraries flight lags hotel legs lots of different things in here got a little bit of kind of like wire frames make stand with UI design but you could tell this would get pretty overwhelming very quickly so rather than list out all of the numbers features on one our board I'm simply using that exact same method and I'm listing out all of the features in the pages inside the documents so it's really the exact same idea where you're breaking everything up in the features and using a number to kind of indicate okay on screen 10 section 10 screen one section 10 screen two you can use a numbering system like that to make the screens more identifiable when you get ready to talk about them in design reviews and with other with other people on your team when necessary I will organize features by pages like this although I do prefer to kind of have everything on one screen this is kind of like I'll do this if I need to but don't let what I prefer change what you prefer you might actually prefer to have everything on separate pages and you like that method better than having everything out listed out and a bunch of rows Sometimes I can be a little bit more organized so do what makes sense for you and your project and and the team that you're working with. Alright so now I'm gonna take you into a deep dive into this my Minaro folder structure so I've got the my Minaro project I've got my projects here the desktop app got our design and we've been looking at the sketch files I've got all of my UI you can see everything's listed out like this but I actually did all the wire frames for this app in adobe illustrator and adobe illustrator just it did not like that many files adobe illustrator did not like that many designs and one single document it just started getting really sluggish really overwhelmed with the sheer amount of vectors that we had in the design so you can see here that you can see in the review folder we actually have the master PDF all the wire frames I've got my content map I've got my first time user experience we've got our wallets and we got sending and requesting contacts kind of like the flow of what's happening so kind of like user flows but more low fidelity designed you can pretty much tell like this is I was already thinking really intentional about the lay out but again illustrator just did not like this and it was getting a little bit too bogged down so I ended up breaking all of these features into different files well you'll notice I'm still using the exact same numbering system number one content map number 2 first time user experience number 3 wallets number 4 number 5 so on and so forth so in my in my UI document I might have 2 different numbering systems for logging in and creating a new account but at this level it's slightly different and that could be a problem if it were a bigger organization and you were looking for a future flow number 3 you might want to keep it a little bit more consistent but for this this was a small team and I can just do what works for me this is the example of just breaking everything up into multiple files so lastly I'll show you the exact same thing that I did for the smart lime project I have shown some of those designs before but we have our design document here we have framer which is what we created most of these designs in and you can say I broke this up into iOS and android because they were slightly different and then I also had a bunch of keynotes that I had to create for design review design presentation these were the the framer files prototype files that I actually created specifically for the presentation but here same thing we have single app with multiple files we've got onboarding sign in navigation conversations dialer contacts count but it's the same exact principle we're numbering these features and that's just allowing us to have an easy conversation it allows me to really easily organize my documents and it just even though you might have the same components across documents this allows just an easy way to navigate through everything and to quickly send someone a file or send someone an asset as it gets bigger as the team gets a lot more complex as this one was it makes sense to break things up a little bit more and but whether using a single file single file pages or multiple files I typically always just have a row of the feature flow, sign in here's every screen that is associated with sign in and just listed all out together whether it's on a page on an art board or in its own document that's what makes the most sense for me and that's how I've just been doing this for years and years in the same exact way and just kind of I've gone really technical with screen number 2.02.01 and I tried to get really, really granular and technical and you know it almost became more about the organizational aspect of it than it was about actually designing a nice project so I encourage you to just do just enough that makes sense so you don't go too overboard so if the team you're working with has a best practice maybe you should adhere to that but if you find something that really works for you maybe you can pitch a new practice and show whoever you're working with. How that could work better for your project so a couple of quick pro tips for renaming things to create this type of organization in figma one of the things that I absolutely love you might already know this you can click any art board name or any layer name hit cmd-R to rename the layer just right in place you can even do this when the menus are not visible you can click here cmd-R and rename the layer even though you can't see it returned and it'll still rename it for you but one really cool thing that I love about figma is that you can select all these art boards if I have multiple frames selected and hit cmd-R I get now a little rename modal that pops up and I can say actually I want to just added 0 before each one of these and I don't need to go in and manually do each one I can just type 0 it current name that's a little variable for current name it'll even show you a preview of what that looks like maybe I want to do 0 - and then that name I'm not really anything you know I could even say you know UI design and that might be and so now have UI design one start UI design but then maybe I'll change my mind Like no I don't need UI design on there I'm going to actually look for you I design and replace that with 0 maybe I want to get rid of the space and the - and the next space and then I want to do that so it's just a really nice way to quickly rename our boards once you get ready to make that organization a part of your process once you get ready to head off those files or share them with someone on your team inside of sketch you can definitely still rename something by hitting cmd-R and rename it but if you if you select multiple art boards and sketch at least with the current version and cmd-R nothing is gonna happen but there is a really cool plugin called rename it if you search for rename it and install it I can rename these select art boards so if I want to do UI design and space - space and then the current layer name right there I can do that and you can see it's gonna pop those in and so that's a really handy plugin for sketch I'm not aware of any plugins for XD but there's always new things being released so I would encourage you to search for some kind of renaming plugin if you're using sketch or XD the figma is you know it's built right in so it works great but those just couple of pro tips for helping you organize that and rename those art boards when you get ready to do it so no design homework specifically for this lesson mostly I just want you to be aware of the way that I approach my organization process it's okay to start off messy it's okay to have 3 files that are completely nonsense and garbage they're not named the layers are all over the place that's totally fine then you can take it into a slightly more organized file and you can use the number in the system maybe have a couple of different explorations use the version numbering system that we covered back in the organizing design file lesson you can use them single page version the single page with multiple pages or you can use the multiple file version but either way all 3 of those follow that same basic principle of just designing a bunch of features and keeping those features separated and grouped together and if you need to do a prototype that could be a separate file as well it doesn't have to be embedded in a page sometimes that could be a separate file maybe that makes more sense so the most important thing to remember is just do what makes sense for your project so next time you start a project try and follow some of these tips.


=== FILE: 8-7 reviews timebolt.txt ===
------------------------------
﻿- You can make the most beautiful designs the world has never seen. But if you can't persuade others to agree to it or implement it, those designs will often fall flat and never see the light of day, or at least not the version that you imagined. So when you're going into a design review, this is not just only showcasing and letting people react to it. You want to be able to have an agenda for the items that you wanna discuss. Whether it is approving certain flows and designs or button styles. Or maybe it's just approving a direction, or even just having a conversation about some different concepts. Just know what you're after, know what your end goal is before you go into the meeting. And try to set those expectations, so you can steer the conversation towards where you want the meeting to end. Because otherwise meetings can go in millions of different directions. You might start talking about functionality and this and that. You really just wanna have a goal to direct the conversation towards. So that's the first step, is just have an agenda. Have a list of items that you want to accomplish when you are designing and then reviewing that design. Secondly, you always want to present your own work if possible. If you're working on a team, maybe you've got a creative director or other people on the team. Maybe you're working in an agency, and there's a creative director that might pitch the work. When you can, it's always gonna be best for you to pitch and present your own designs. So you can speak to the details, you can speak to the decision making process. 'Cause you know it better than someone else knows it. So if someone takes all of your work and then just runs with it, it's not gonna have quite the same effect. Unless that is like a corporate level executive. Maybe you're not getting into the design details, it's more about maybe high level business strategy. But if you're presenting the little details of design, and you're trying to talk about colors, and border radius and things like that. You're gonna want to be the person doing that. And it's often gonna be best if you can do that in person. And you sit down, and you've got a big projector, or you're in a conference room, or somebody sits with you at the computer. Or if you're socially distancing, and you're doing that remotely. Zoom, Google Hangout, anything where you can share your screen and actually click through, and you control the flow of the presentation. I don't like to send over design files, and let people take a look at them before I've presented them. I always wanna get a chance to present all of the designs, and talk through all the designs. And then after the meeting, I'll send a link so people can view the screens, and leave more detailed feedback after the fact, after I've walked through them all. So design reviews can often take the shape in three different forms. One is gonna be an informal. Secondly, you'll have a semiformal design review. And last but not least, you'll have a very formal design review. So let's take a look at some examples of each one of these. So this was a project called Siempo, where we were working on actual new operating system for Kind of a conceptual phone. And I just wanted to start here, because these are the final designs that we ended up on. And I kind of wanna talk you through how I presented these designs, and how I led the design reviews for this particular project. So I was doing the user experience design and the UI design for this. And first of all, because this was a big conceptual project, I made sure that we did a content map and some wireframes to begin with. And some low fidelity designs, just so we could really hammer down on the functionality, figure out what this thing was even gonna be, before I started jumping into typography and colors and all that. We have this content map that I actually walked through with the client. And we're talking through okay, there's contacts. I had my first review, I had my first design review walking through this document. And just telling them, look, this is the content map. This is everything we've talked about. So I'm trying to organize everything, and I'm also trying to say okay, we want these actions performed from the homescreen. We wanna be able to set alarms, and do a number of things that are available on the home screen. Some of this other stuff could go in other places. We even have a little section for the hardware, like the different buttons that were gonna be on the phone, and the functionality that some of those would have inside of them as well. Then I started walking through these. So whenever I'm walking through low fidelity designs, I'll let them know we're not really discussing typography or color. A lot of that stuff is just placeholder. We just wanna get the conversation around functionality, like how is this thing gonna work? So you can have opinions on design and what it should look like. But right now, we're just trying to limit this to functionality talk. So that is just setting the expectation. I know that we wanna nail down functionality by the end of the meeting. So we're now gonna discuss typography, color, layout, all that stuff. So on these examples, we're just walking through okay, here's the different keyboard types. You can tap these different keyboard buttons to pull up the different keyboards on this phone. And then we have this input which is like the main control. And then I'm just walking through screen by screen what would happen here. You tap this. If you activate the input, you can tap something, you can type. You can just walk through all the functionality, and kind of get those nods of approval. This is definitely an example where I produced a low fidelity first, and then jumped into the UI design. In my opinion, sometimes it can be a little bit easier knowing that the functionality is already designed, and then you can transition into the UI design. So once I had all these wireframes done, then I had another review with them. Where I actually started working on the actual UI. And I told them I was like, look, at first I was thinking we wanted this paper feel. Because we had considered designing this phone with like an electronic ink display. And it almost had like a paper texture, but we ended up... I know that they decided they wanted to use a regular LED screen. So I thought it could be interesting to explore just a really minimal interface that had just like a simple dark color for the like a two color layout. One white, one dark and really nothing else. 'Cause that would kind of simulate that electronic ink layout, the same way like you might see on a Kindle. So I started exploring some of these, really trying to figure out some good icons. These are some early screens where I'm just kind of exploring and experimenting. Maybe there's like some of the big functionality pieces are up top, and we have some space filled out in the bottom. Experimenting with some zebra stripes and some colors for the notification. But I felt like that was going away from the original idea of the really calm, muted kind of paper texture. So I decided to do away completely with the color. But I just wanted to walk through some of these early screens. So that you could kind of get an example of some of the things that I went through before I landed on the screens that I landed on. So again, I started liking the solid white and kind of the light gray. Experimented with some two tone versions, but I felt like that was a little harsh. Then I started kind of refining the colors, working on some light grays. And then ultimately added in some of this like very, very light texture, just through like a little bit of noise. To kind of create that paper feel. And then I started trying to really nail down the size of the cells, and work on refining the icons even more. And then, kind of experimented with some left and right possibilities. But it started to feel a little bit more like something that you would expect in a digital interface. But I wanted to keep things like really, really simple. So I really ended up with just this very simple, big, big input field that you could tap anywhere to expand, and have this list of things down below. And then as you tap into it, you get this activated version that comes all the way up to the top, that expands a lot more. Just a very clean and simple version. And then once I really kind of locked into this, I started working in this new document and kind of came up with both these color schemes for the light mode and the dark mode. So you can see that started working through some of this, and like as you type just a really clean and simple. Keeping it very focused on exactly what the user wants to do. So that's just an example of how I would literally talk through these documents. Kind of show some of the early mistakes. Not necessarily mistakes, but just early decisions through the process. And this is informal. I'm talking to one or two other people, and I'm leading them along. It's like giving them the fast tracked version of my design process. Here's what I tried. This is why I didn't think it worked. This is what I moved on to. This is what I was really drawn to. These are the reasons I was drawn to it. This is what I'm doing now. And this is why I think this really works. And the idea is you get them like okay, yeah, I can see that doesn't work. Yes, I also agree that doesn't work. Oh yeah, I can see I can ... So you're just trying to buy-in these little buy-ins and lead that conversation. And this one was more of an approval process. But I wanna show you another one that involves just more of a general direction, kind of walking through one of those exploratory documents, before jumping into the actual screen design. So in this example, this is the FiberStream element collage. And this was one of the very first design reviews that I had with the client. We'd already had previous discussions about what if Nike or Adidas was an internet service provider? What would that look like? And kinda have that kind of modern but kind of edgy look. Something clean, but a little bit punchy and in your face. So that was what we agreed upon, before I even started the element collage. So we agreed upon an initial direction. So when I showed him this, I started showing him like okay, I've got a couple of different elements here. Nothing here is a full blown website. Everything is just kind of an exploration of what the title bar could look like. Maybe some colors, playing around with this Avant Garde font. Which is actually what the Adidas font is actually created with that. So I thought that could be a fun little addition for the logo. And maybe there's some opportunity to play with some really big numbers. Maybe for the internet packages, we could try this like floating button. I'm not really locked into square buttons versus rounded buttons just yet. I just wanted to experiment with some white headers, some dark headers. And kind of get your feel on what you're drawn to. I kinda have some opinions about how some of this works. Play with some rollover effects. But I'd love to get your opinion on whether or not this is the direction that you feel could work. I'm not sure if this big image works back here, maybe we'll use more negative space. I'm still exploring some options. I've got a couple of different varieties of headlines and body copy, with Action Condensed and Avant Garde. Kind of really, I'm drawn to the Avant Garde, just because of that kind of bold, Adidas kind of feel and at this point I'm trying to get feedback on. Okay, it is the font gonna work, and kind of lowering the defense mechanism on the client. And just trying to say like, this is what I'm thinking. Maybe this doesn't work, what do you think? And just trying to get that conversation going. And then by the end of it, it's like yeah, I really like this. I like this orange, I like this font. I like this color scheme. Well, all of a sudden now, I can go on and I can start designing the website. So the next review becomes a little bit more semiformal. It might not be walking through a big design document of a bunch of scattered pieces, but maybe now it is a screen by screen prototype or flow. Or maybe I'm just panning through a lot of screens that are in the design document, just a lot more organized. And so the very next review, we've already got the font signed off on. We already like the color scheme, the play with the white and the black. So now I can really focus on like, here's the input for checking your availability. Maybe we use like a really fun like full black hit state or active focus state. This is kind of like automatic drop down that would start popping in as you start typing. And just every screen has this really big, bright rounded button that just drives the action forward. Once something is available, we could bring in this like really kind of powerful graphic that says. Okay, this is available, instant activation. And just kinda walking through all of the different types of things that where I would explain a little bit more detail about these features and this functionality. But this one in particular, I'm just piggybacking off of the previous design review, and I'm using all that same terminology that we've already agreed to. So there's never really a big reveal necessarily. There might be sometimes if I've been working really hard on a couple of the designs, there is gonna be somewhat of a reveal. But I'm always trying to get that conversation going, and to restate what we've already agreed on. And just to kind of smooth that whole process all the way through. So that brings me to a very formal presentation. This is really when you have to present to maybe higher level executives. Maybe you've been working with a product manager, or the design team. And now, you have to present to their managers, or maybe their managers. Maybe there's the CFO or the CEO that you have to present to in a big organization. Usually, that's going to involve creating a keynote and some type of PowerPoint keynote. Some kind of slide presentation, whatever you prefer. Here's an example of something that I produced for the 12Stone.com presentation. This was after months and months and months of work. And now we're presenting to some of the executives. So you can see on the sidebar here, I've got a 64 page keynote document that I made. I don't need to walk through this whole thing, but this was a really, really big church in the southeast. And first I'm just saying okay, here's our design principles. We wanted the website to be predictable and friendly. Clean a modular. I will link this stuff down in the lesson. So you can check this out later. But just going through a bunch of design principles, trying to reiterate these are the things that we had in mind when we were designing. Here are some of the website, I should probably play this so you can see kind of the transition. So I had like a fun little like transition between the different screens. So we could show this floating tile effect, and some of the illustrations in the background. So this is page 14 of 60 something. So just a really big document, pausing for questions, but a very formal type of presentation. Down here in the bottom, we had a big discussion about what kind of typeface we wanted to use. Their old brand guidelines used Brandon Grotesque. Which is a nice font, but it didn't really have that friendly feel that they were going for. So I created two sets of comps for almost, not every page but a lot of them. So you could see the difference between Gibson, Which has this kind of Grotesque, kind of a friendly sans serif that we wanted to use. And then Brandon Grotesque. Which could have worked, but it had a little bit more of a corporate cold feel. So a lot of different comparisons between those two. Here's Gibson, here's Brandon. When there's a formal meeting with a higher level executives or a bigger team, it's really gonna be beneficial for you to have a plan going in. Don't just go in there with your design files, and start clicking stuff around. Like come up with a plan, fill everything out. Come up with a plan, design a presentation if you need to, and walk through it slowly and methodically. And maybe you even have a dry run with a peer of yours before, just so you can kind of get get loosened up and figure out what things work and what things don't. Sometimes it can be good to just have that kind of dry run, and talk about what you're going to walk through with maybe the internal team members. And then for that formal meeting, then really go through and just hit all those points. Don't forget that the higher up you go in an organization, the more they're gonna be concerned with business strategy, and user experience and design principles. Less about button radius, kerning, letter spacing. All of those things are important in some of those design centric meetings. But as you go higher and higher up presenting wise, unless the CEO is really into kerning, probably best to just avoid the fact that you changed some of the typography settings. And remember that revisions can be a good thing. If you're walking through your document with like an informal kind of process. One of the things that I like to do is, I will actually get in here, and I will actually make a little comment. Make it red, or whatever color you want. And I'll do something like this. And then a lot of times, what I'll do is I'll go ahead and rotate this, like five degrees or 10 degrees or something like that. And then as people give me feedback, or I'm talking through things. I'm like okay well, okay yeah, maybe we should. Maybe try animating, try reversing the colors. And I will leave myself notes like this during a kind of informal design review. Just to kind of make it easy for me to let them know that I'm hearing what they're saying, but also to give myself something to go on when I get ready to do a round of revisions. And a lot of times like the revisions are going to make it better, a lot of times. And if they don't, then you should at least show that you tried the revision. And show them like here's what we discussed, here's what I tried. You asked me to put the name of the module inside the box, and I tried that tried that. Try name inside box. Maybe this is like the revision review after you tried it. But let them know like look, I tried the name inside the box. And it looks okay, but to me the ones that have the icon by themselves, it really just kind of feels a little bit more powerful. Like you just have this big singular image, this big singular icon, lots of negative space. And it's all about that imagery in there. And then down below we have the headline. And it's a little bit more scalable if we have a longer headline. So if I had typography is awesome, and this is a long title. Then that's not actually gonna fit inside this color block. So this particular layout becomes a lot more flexible. So that might be just an example of when you got some feedback and you incorporated it. But you make sure you keep this, and you show whoever asked about it. And you tell them that you tried it, and here's the reason why it didn't work. And you don't have to be mean about it. You can be nice and say, look, you know it was a good idea. I think this looks pretty nice. But here are the reasons why I think this is better, what do you think? So it's all about communication, whether you're talking to the developer, or leading the design review. But don't be afraid of trying revisions, and working them in, and having opinions about it too. Go ahead and do the revision, but then try the version that you think is better, and then try to build a case for presenting why you think that's better. So no actual design homework for this lesson. But at the very least, you can use this lesson and bookmark it. Reference it when you get ready to do your design review. Think back to some of these tips and tricks that can help you prepare for your design review that's coming up. And if you feel up for it, maybe you record yourself giving a design review of some of your homework. And maybe you use Loom or something and post it to Slack. And get some feedback from other people in the group about how your design review went. Have them ask questions about it. Try to get in that routine of building a case for certain design decisions, and being able to walk someone through your process with an outcome in mind. And show them the designs that didn't work, show them the reasons and the decisions that you got to those nice and final designs, if you're in that informal setting. And remember, if you're in formal, that's a different story. You're gonna have to get a lot more logistical about it, a lot more planned out, and have a very polished presentation. So use this as a bookmark reference for you, and best of luck on your next design presentation.


=== FILE: 8-8 proto.txt ===
------------------------------
﻿- All right. Prototyping is another one of those topics that could easily be its own course, because it is such a huge topic. And I've put together kind of the five phases of prototyping. The conceptual phase, persuasive phase, the validation phase, instructional phase, and the actual thing. And I gave a talk about this at the Atlanta web design group, and that's already like an hour long presentation and I've got lots of files to go with it. So rather than create a brand new video of things that I've already recorded and have available, I'm gonna embed a bunch of resources on this lesson, including that Atlanta web design group talk and links to all those prototypes, all the different types of prototypes. And I'm going to also update this lesson down in the page with additional videos, kind of a slightly different lesson here, but I just want to let you know there's tons and tons of resources. And the biggest homework here is going and watching that five phases of prototyping video that I've linked down below. So check out all those resources and best of luck with all of your prototyping.


=== FILE: 8-9 handoff timebolt 2.txt ===
------------------------------
﻿- The biggest thing to remember with developer hand-off is that communication is absolutely critical for the whole process to work smoothly and in fact, the term hand-off is not even really a great way to look at it, because most design and development projects should be built where the designer and the developer, both working together from the very beginning, throughout the end of the project. There are lots of times where that might not be possible and I understand that as a limitation in certain scenarios, but anytime I've ever worked on a project on my own, whether it was for a client or a personal project and I just was isolated and designing, designing, designing, and then I threw it over the fence to the developer, something is definitely going to go wrong. There's something that I might not have thought of, or there may be some kind of limitation that I was unaware of, or there might be something that I designed that is just weird for a developer to implement, and it might take them an additional two weeks to do something custom that I was unaware of as a designer when I could've just had a very simple conversation with them in the very beginning while I was thinking through those design decisions that would have made the project that much better. And so I could embrace those constraints and the developer can embrace the design that we're trying to push forward. So it really takes a good relationship between the development team and the design team or a designer and developer to make something that is really great. So I posted this tweet as a question on Twitter to just get some real feedback from the developer community. So instead of focusing on specific tools for developer hand-off, like Zeplin or Figma code or anything like that, those things have their place and they can be very beneficial, but 90% more important is going to be the communication that goes on between the designer and the developer. So let's take a look at some actual responses that I got on Twitter about this exact same question. Developers, in your opinion, what is the best thing a designer can do for you before, during, and after hand-off to ensure a smooth process? And I intentionally left the word hand-off in there because I know that kind of triggers some people and I wanted to get people's real reaction because I don't necessarily love the term hand-off either and you'll see that a lot of developers look down on that term as well. One of my favorite responses is from this guy, Andy Ingram. He says, "Honestly, and sincerely, "I don't mean this as a jab, but never using the words "hand-off is a good start. "The interaction between design and development "should be more heavily integrated "and the concept of hand-off has a strong smell "of waterfall process that doesn't actually work." And then he goes on to say, "I also have thoughts about issues arising "from conflating design, as a process "and design as a skillset." Think graphic design or UI design, what we're learning in this course, UI design. "But everyone involved in making the product "should be involved in the process part. "Otherwise, you can and do overlook constraints." And I think he absolutely nails it because developers and designers thinking about the same problem together is how you're gonna get to the best solution. Not by having a designer sit in a room by themselves, thinking of something to design and create without consulting the people who are gonna implement it. You can both come up with solutions and ideas for layouts and interactions, and then you, as the designer, can go in and make it look really nice and think about some clever interactions and clever things around that constraint that you've already previously agreed upon with the developer. And this goes back to implementing those little systems for your layout, aligning things and measuring all right, eight pixels from here and this was 32 pixels and letting a developer know that you're using this eight pixel grid system. If you're using that implicit grid back from the layout lesson, that's gonna let them know, okay, if you see something that's like 27 pixels, go ahead and feel free to make that 28 or 32. Feel free to use multiples of eight or multiples of four because if something is slightly off, there's a good chance that it got nudged down, or maybe I overlooked that. So I'm using multiples of four, we've got 12 pixels on the side, we've got 16 pixels here, and maybe just showing the system that you're using for designing that, is really gonna help them implement that better, than just kind of lobbing it over and expecting them to know what to do without having to talk to them. It's not gonna work if you're not willing to talk to the developer. A lot of people don't like to get all integrated and have big discussions with the developers and designers. There can be a lot of a conflict and a lot of people don't like conflict. So I would encourage you to embrace that conflict, embrace those constraints and work together to create something great. Let me read a few more of these. Nate Taylor says "Not look at design as something to be done "in isolation to hand it off, but collaborated on. "That probably sounds pedantic and I don't mean it to. "The best designers I've worked with have worked with me "up to and including releasing the feature." Same thing, working together, communication. My buddy James Hall says, "Sounds pandering, but communicate. "Assume the developer doesn't get what you sent. "Don't assume they know what should be done in some spot." And then he follows up by saying, "Ask, 'was anything unclear or anything I can help with?' "one day later, three days later, five days later." Inevitably, something is going to come up the developer might not necessarily think to ask you about, or maybe they're unclear on, or maybe they're afraid to push back on your design. Let them know, I designed this to about 90% complete there's some wiggle room, maybe in some of the hover states or maybe the way the component margin is built in, let them know where there's wiggle room and what you've designed in stone. If something is really, really important, focus on that, but let them also know what areas are not necessarily tied down quite as tight and you might want to circle back with them a week later and kind of fine tune those areas. Peter's got a great response here. Examples of different interactive states. What does hover look like? What does focus look like? What does the disabled state look like? Number two, if there's any notes or examples of desired UI animations or effects like references, things that they can reference, other websites. Oh make the dropdown menu do something like this and to link, those can be really helpful to show the references, notes, examples for accessibility considerations. How tabs or forms render when it's just keyboard navigation, for example, like what should be the tab order of a form? If somebody is hitting tab, should it go this way or that way? But really again, look at this. This is all about communication, it's communicating what should happen and the best way to communicate with someone is to talk about it and you can write lengthy, lengthy documentation, but a lot of times it's gonna be better just to sit someone down and, and talk through it. Maybe you do write a little bit about documentation. Sometimes that can be an overwhelming amount of work to try to write documentation about every single thing. Maybe some big things need it, but just talk to the developer, ask, hey, I can write documentation about all of this stuff, do you need that? Or should we just have a conversation? And just try to work together about what you can talk about, discuss, and then hand over. We've got Robin here, he says, "Involve developers in the process from the very beginning." Same thing, Michael says "Please use a design tool "suitable for digital, no InDesign or Photoshop, please. "Please keep your file tidy by using layers and symbols "and components where possible, the amount of times "I thought one thing was a variation simply "because they didn't update that one button." This goes back to just being mindful of your components and having a system for things, defining your colors, defining your font sizes and using those symbols, components where it makes sense. You know, if you have a green button over here and a red button over there, maybe the font got changed from semi-bold to medium, but you forgot to update that. If you hand that to someone, someone like Michael is sitting here thinking, oh, now I need to make another button with a different class name because this one's medium weight instead of semi-bold weight and a lot of times they might not know to go back and ask you, hey, did you mean to make this one medium and this one semi bold, because they have to literally go in and type everything out in code. This one's green, this one's medium font, this one's semi bold, all of that has to be listed out in detail, in code, so if you're not communicating, they're gonna interpret what you give them and that communication breakdown is going to cause problems. Wilson, "Include error states." On your forms, not every form is going to be completely, perfectly filled out. So what does the error state look like? Muhammad follows that up. "Error, empty, loading, overflow." These are four different states that you might not necessarily think about when you're designing static comps. So first of all, what does it look like when someone fills out a form or does something and there's an error that's thrown? Where does that error message go? What does it look like? What does it look like when there's a feed that's empty or maybe no one has sent any emails or no one's written any posts? No one has uploaded any photos. What does that empty state look like? Does it say something, is there an illustration? Is there a little helper tip that says, hey, click here to create a new thing? You know, that might be an opportunity to throw in some branding or to put some illustration, or a little helper text. Regardless of what you do in those empty states, there's gotta be some type of empty state. So don't forget to design for those situations. The loading states, when something is loading and taking a while, do you want them to just pick their own animated loader or pick their own loading screen? Or do you want to design for that? You know, talk about that, ask them, could we use one of these animated SVGs? Maybe we have a PNG sequence, talk about that. What is needed, what's possible, and design for that. Same thing for overflow, think about back to that truncation lesson in the typography module. There's lots of titles that are three lines, or one line, or four lines, where does that truncate? What is the rule around that truncation? Maybe you pull that component off to the side and you list out and you annotate a few little rules about truncation. If it goes two lines, do this. If it goes three lines, do this. If you look back at that truncation lesson in typography, that that will be a really good example of that database spits out information into the UI and you, as the designer and the developer get to decide, okay, we're only gonna show 20 characters and then we're gonna put dot dot dot. Or if it's landscape mode and it's wider than we can show all of them, but just thinking about those constraints, because ultimately that has to be coded up and maybe situations like this, maybe it needs a little art board off to the side with some documentation, so you can actually have a nice buttoned-up piece of component to hand to someone and they actually know how to implement it. Jessica says, "Give me a design for a tablet. "Ha ha ha, who am I kidding, that'll never happen. "Honestly, I'm over the moon anytime the design file "has everything organized in groups and named properly." You're communicating when you're organizing your groups and you're naming things properly. That is communication, you're communicating this module is this name and this is what it should be. So Jessica is asking, I want nice and tidy communication. I want it to make sense. Look back to the responsive lesson and look at those different sizes and think, do I need to provide like a medium-sized view so they can get an idea of what should happen at that particular break point? Because you might not need it, but depending on the website, you might actually need it, but it's gonna go back to communication. There's no one size fits all for developer hand-off. You have to talk to the developer about what should happen and the less you talk about it with the developer, the more room for error. I still, to this day, have situations where I'm working with a client and maybe I'm not talking to developers. So I have to be very, very clear, very, very strict about annotating things and explaining things and sometimes I'll make a video. You can see another video down below where I explained an entire website to a developer that I never talked to and I listed all of the prototypes. Sometimes that happens and that's not ideal, but I get that sometimes that happens, but even still there's no one size fits all. It's more about just explicitly communicating the things that are important about your design. Jack says, "Just be consistent. "Have a design for buttons. "Have a design for form fields. "Have designs, don't deviate." You know, if you have dropdown button that's 20 pixels tall and 100 pixels wide, don't create another one that's 30 pixels tall and 120 pixels wide if that other one will do. So think about being consistent and basically implementing everything that we've learned in this entire course to a systematic UI design system. You're very mindful of font sizes, font weights, layout, margin, color, have color definitions. Everything should be strategically decided upon by you and that way, you can very clearly communicate to your developer what's going on in your designs. This is a great statement from Devon, "Accept that there may need to be adjustments." I go into almost every web design, knowing that I can only get it to about 90% complete because the other 10, even 20% is gonna have to happen in the browser. There's going to have to be adjustments made. I'm going to have overlooked something, I'm not robotic and methodical enough to cover 100% of every single thing that needs to happen. So the more you can accept that there's gonna be some wiggle room here, I need to go into this developer conversation, knowing that something I've designed might need to be changed a little bit and I need to be okay with that, so I need to lose my ego about my great design and actually listen to the person who's gonna be coding it up because there's gonna have to be some wiggle room here and there, back and forth on both. Maybe there's a custom dropdown that needs to be coded and extra JavaScript needs to be written. Maybe you feel really strongly about that and maybe there's a developer that doesn't want to do that. They just want to do the default one. You know, there's going to be trade offs back and forth. So you have to be willing to understand and to know, what about your design do you feel is really important and where are the areas that could use a little bit of help from development? And that way, both sides know there might need to be some adjustments made Maroun here says, "There should be no hand-off. "Design is a continuous process." Just echoing that statement of communication over a hand-off. Adam says, "In a perfect world, a designer should know "why atomic design is so important and implement "new patterns from those storybook atoms." Which is really just defining those single, individual, small components, and then embedding those into larger components and then embedding those into other components and having those granular dimensions of eight pixels on top 12 pixel on the side, 16 pixel font, this color. And then I'm using that as component inside of this other component, or at least a textile, and know that everything is like this Lego building block, and so if you can get those smaller components right everything's just going to fit together that much better. Another one, "Don't have a hand-off. "Collaborate from the get go on the solution "formation and respect questions from both parties." Bennedikt says, "Also when there is a hand-off, "it's already likely that the developer was not involved "in the design process and that is bad." Johnny says, "If there's a hand-off, "then it's being done wrong." Joshua, "Saying which parts of the design are set in stone "and which are flexible, sometimes slight differences "visually can make a huge difference in effort." This goes back to that 90%, like when you get ready to hand-off and it's like, okay, here's the designs. Know that there should be some adjustments and there might be some slight differences that could be solidified because it will reduce the level of effort. So it's all about communication. There's not going to be one size fits all, do exactly this, and then everything will work out. It's the same thing in a marriage, or a friendship, or any other relationship. You have to have clear communication and you have to be respectful for that relationship to work. It's no different in the designer and the developer relationship. There's gotta be mutual respect for each other, clear communication, and there's gotta be some give and take. Matthew says, "Don't just provide a screen, "provide a component library of elements on the screen." And I think Mitchell's tweet sums this whole tweet thread up really nicely, "Build an open and honest relationship "with your counterparts, the tools you use, the strategy, "the timing, all of it is useless, unless the trust "you share with your counterpart is airtight. "Have clear dialogue and that should open the path "for any correction needed." So there it is, communicate with your developers. You're only going to come up with a good hand-off. If you've already had good communication, there has not been one single project that I've worked on, where we designed in isolation and handed it off and it turned out amazing. The absolute best projects I've ever worked on has been when I had a tight integration with the development team or the developer, and we were able to bounce back ideas back and forth, back and forth, you can just cut out so much time wasted, so much headaches if you can have those quick conversations, hey, what do you think about this? Actually that won't work because the top bar is draggable and oh okay, let me try something else. There's a way that you can kind of get into this flow and you don't have to ask a developer about every single little tiny thing, but if there's something you're stuck on about implementation, if it's like a table or responsive or something in Xcode. Whatever you're designing, ask a developer, or ask a friend that might be a developer that if you can't get ahold of the actual developer. Honest, open communication is gonna be the best bet for dealing with hand-off. No real homework on this one. I just wanted you to have the arsenal of information when it comes to hand-off. The absolute best hand-off is gonna be the one that you and your developer decide on


